(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-vendors"],{"00ee":function(t,e,n){var r=n("b622"),i=r("toStringTag"),s={};s[i]="z",t.exports="[object z]"===String(s)},"01b4":function(t,e){var n=function(){this.head=null,this.tail=null};n.prototype={add:function(t){var e={item:t,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var t=this.head;if(t)return this.head=t.next,this.tail===t&&(this.tail=null),t.item}},t.exports=n},"0366":function(t,e,n){var r=n("e330"),i=n("59ed"),s=n("40d5"),a=r(r.bind);t.exports=function(t,e){return i(t),void 0===e?t:s?a(t,e):function(){return t.apply(e,arguments)}}},"06cf":function(t,e,n){var r=n("83ab"),i=n("c65b"),s=n("d1e7"),a=n("5c6c"),o=n("fc6a"),l=n("a04b"),u=n("1a2d"),c=n("0cfb"),h=Object.getOwnPropertyDescriptor;e.f=r?h:function(t,e){if(t=o(t),e=l(e),c)try{return h(t,e)}catch(n){}if(u(t,e))return a(!i(s.f,t,e),t[e])}},"07fa":function(t,e,n){var r=n("50c4");t.exports=function(t){return r(t.length)}},"0b42":function(t,e,n){var r=n("da84"),i=n("e8b5"),s=n("68ee"),a=n("861d"),o=n("b622"),l=o("species"),u=r.Array;t.exports=function(t){var e;return i(t)&&(e=t.constructor,s(e)&&(e===u||i(e.prototype))?e=void 0:a(e)&&(e=e[l],null===e&&(e=void 0))),void 0===e?u:e}},"0cfb":function(t,e,n){var r=n("83ab"),i=n("d039"),s=n("cc12");t.exports=!r&&!i((function(){return 7!=Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},"0d51":function(t,e,n){var r=n("da84"),i=r.String;t.exports=function(t){try{return i(t)}catch(e){return"Object"}}},"159b":function(t,e,n){var r=n("da84"),i=n("fdbc"),s=n("785a"),a=n("17c2"),o=n("9112"),l=function(t){if(t&&t.forEach!==a)try{o(t,"forEach",a)}catch(e){t.forEach=a}};for(var u in i)i[u]&&l(r[u]&&r[u].prototype);l(s)},1626:function(t,e){t.exports=function(t){return"function"==typeof t}},"17c2":function(t,e,n){"use strict";var r=n("b727").forEach,i=n("a640"),s=i("forEach");t.exports=s?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},"19aa":function(t,e,n){var r=n("da84"),i=n("3a9b"),s=r.TypeError;t.exports=function(t,e){if(i(e,t))return t;throw s("Incorrect invocation")}},"1a2d":function(t,e,n){var r=n("e330"),i=n("7b0b"),s=r({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return s(i(t),e)}},"1be4":function(t,e,n){var r=n("d066");t.exports=r("document","documentElement")},"1c7e":function(t,e,n){var r=n("b622"),i=r("iterator"),s=!1;try{var a=0,o={next:function(){return{done:!!a++}},return:function(){s=!0}};o[i]=function(){return this},Array.from(o,(function(){throw 2}))}catch(l){}t.exports=function(t,e){if(!e&&!s)return!1;var n=!1;try{var r={};r[i]=function(){return{next:function(){return{done:n=!0}}}},t(r)}catch(l){}return n}},"1cdc":function(t,e,n){var r=n("342f");t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},"1d80":function(t,e,n){var r=n("da84"),i=r.TypeError;t.exports=function(t){if(void 0==t)throw i("Can't call method on "+t);return t}},"1da1":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("d3b7");function r(t,e,n,r,i,s,a){try{var o=t[s](a),l=o.value}catch(u){return void n(u)}o.done?e(l):Promise.resolve(l).then(r,i)}function i(t){return function(){var e=this,n=arguments;return new Promise((function(i,s){var a=t.apply(e,n);function o(t){r(a,i,s,o,l,"next",t)}function l(t){r(a,i,s,o,l,"throw",t)}o(void 0)}))}}},"1dde":function(t,e,n){var r=n("d039"),i=n("b622"),s=n("2d00"),a=i("species");t.exports=function(t){return s>=51||!r((function(){var e=[],n=e.constructor={};return n[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},"1fb5":function(t,e,n){"use strict";e.byteLength=c,e.toByteArray=d,e.fromByteArray=m;for(var r=[],i=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,l=a.length;o<l;++o)r[o]=a[o],i[a.charCodeAt(o)]=o;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");-1===n&&(n=e);var r=n===e?0:4-n%4;return[n,r]}function c(t){var e=u(t),n=e[0],r=e[1];return 3*(n+r)/4-r}function h(t,e,n){return 3*(e+n)/4-n}function d(t){var e,n,r=u(t),a=r[0],o=r[1],l=new s(h(t,a,o)),c=0,d=o>0?a-4:a;for(n=0;n<d;n+=4)e=i[t.charCodeAt(n)]<<18|i[t.charCodeAt(n+1)]<<12|i[t.charCodeAt(n+2)]<<6|i[t.charCodeAt(n+3)],l[c++]=e>>16&255,l[c++]=e>>8&255,l[c++]=255&e;return 2===o&&(e=i[t.charCodeAt(n)]<<2|i[t.charCodeAt(n+1)]>>4,l[c++]=255&e),1===o&&(e=i[t.charCodeAt(n)]<<10|i[t.charCodeAt(n+1)]<<4|i[t.charCodeAt(n+2)]>>2,l[c++]=e>>8&255,l[c++]=255&e),l}function p(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function f(t,e,n){for(var r,i=[],s=e;s<n;s+=3)r=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),i.push(p(r));return i.join("")}function m(t){for(var e,n=t.length,i=n%3,s=[],a=16383,o=0,l=n-i;o<l;o+=a)s.push(f(t,o,o+a>l?l:o+a));return 1===i?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===i&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),s.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},2266:function(t,e,n){var r=n("da84"),i=n("0366"),s=n("c65b"),a=n("825a"),o=n("0d51"),l=n("e95a"),u=n("07fa"),c=n("3a9b"),h=n("9a1f"),d=n("35a1"),p=n("2a62"),f=r.TypeError,m=function(t,e){this.stopped=t,this.result=e},g=m.prototype;t.exports=function(t,e,n){var r,y,x,v,b,w,_,S=n&&n.that,M=!(!n||!n.AS_ENTRIES),T=!(!n||!n.IS_ITERATOR),E=!(!n||!n.INTERRUPTED),A=i(e,S),C=function(t){return r&&p(r,"normal",t),new m(!0,t)},I=function(t){return M?(a(t),E?A(t[0],t[1],C):A(t[0],t[1])):E?A(t,C):A(t)};if(T)r=t;else{if(y=d(t),!y)throw f(o(t)+" is not iterable");if(l(y)){for(x=0,v=u(t);v>x;x++)if(b=I(t[x]),b&&c(g,b))return b;return new m(!1)}r=h(t,y)}w=r.next;while(!(_=s(w,r)).done){try{b=I(_.value)}catch(k){p(r,"throw",k)}if("object"==typeof b&&b&&c(g,b))return b}return new m(!1)}},"23cb":function(t,e,n){var r=n("5926"),i=Math.max,s=Math.min;t.exports=function(t,e){var n=r(t);return n<0?i(n+e,0):s(n,e)}},"23e7":function(t,e,n){var r=n("da84"),i=n("06cf").f,s=n("9112"),a=n("6eeb"),o=n("ce4e"),l=n("e893"),u=n("94ca");t.exports=function(t,e){var n,c,h,d,p,f,m=t.target,g=t.global,y=t.stat;if(c=g?r:y?r[m]||o(m,{}):(r[m]||{}).prototype,c)for(h in e){if(p=e[h],t.noTargetGet?(f=i(c,h),d=f&&f.value):d=c[h],n=u(g?h:m+(y?".":"#")+h,t.forced),!n&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(t.sham||d&&d.sham)&&s(p,"sham",!0),a(c,h,p,t)}}},"241c":function(t,e,n){var r=n("ca84"),i=n("7839"),s=i.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,s)}},"25f0":function(t,e,n){"use strict";var r=n("e330"),i=n("5e77").PROPER,s=n("6eeb"),a=n("825a"),o=n("3a9b"),l=n("577e"),u=n("d039"),c=n("ad6d"),h="toString",d=RegExp.prototype,p=d[h],f=r(c),m=u((function(){return"/a/b"!=p.call({source:"a",flags:"b"})})),g=i&&p.name!=h;(m||g)&&s(RegExp.prototype,h,(function(){var t=a(this),e=l(t.source),n=t.flags,r=l(void 0===n&&o(d,t)&&!("flags"in d)?f(t):n);return"/"+e+"/"+r}),{unsafe:!0})},2626:function(t,e,n){"use strict";var r=n("d066"),i=n("9bf2"),s=n("b622"),a=n("83ab"),o=s("species");t.exports=function(t){var e=r(t),n=i.f;a&&e&&!e[o]&&n(e,o,{configurable:!0,get:function(){return this}})}},2877:function(t,e,n){"use strict";function r(t,e,n,r,i,s,a,o){var l,u="function"===typeof t?t.options:t;if(e&&(u.render=e,u.staticRenderFns=n,u._compiled=!0),r&&(u.functional=!0),s&&(u._scopeId="data-v-"+s),a?(l=function(t){t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,t||"undefined"===typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(a)},u._ssrRegister=l):i&&(l=o?function(){i.call(this,(u.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(u.functional){u._injectStyles=l;var c=u.render;u.render=function(t,e){return l.call(e),c(t,e)}}else{var h=u.beforeCreate;u.beforeCreate=h?[].concat(h,l):[l]}return{exports:t,options:u}}n.d(e,"a",(function(){return r}))},"2a62":function(t,e,n){var r=n("c65b"),i=n("825a"),s=n("dc4a");t.exports=function(t,e,n){var a,o;i(t);try{if(a=s(t,"return"),!a){if("throw"===e)throw n;return n}a=r(a,t)}catch(l){o=!0,a=l}if("throw"===e)throw n;if(o)throw a;return i(a),n}},"2b0e":function(t,e,n){"use strict";(function(t){
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
var n=Object.freeze({});function r(t){return void 0===t||null===t}function i(t){return void 0!==t&&null!==t}function s(t){return!0===t}function a(t){return!1===t}function o(t){return"string"===typeof t||"number"===typeof t||"symbol"===typeof t||"boolean"===typeof t}function l(t){return null!==t&&"object"===typeof t}var u=Object.prototype.toString;function c(t){return"[object Object]"===u.call(t)}function h(t){return"[object RegExp]"===u.call(t)}function d(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function p(t){return i(t)&&"function"===typeof t.then&&"function"===typeof t.catch}function f(t){return null==t?"":Array.isArray(t)||c(t)&&t.toString===u?JSON.stringify(t,null,2):String(t)}function m(t){var e=parseFloat(t);return isNaN(e)?t:e}function g(t,e){for(var n=Object.create(null),r=t.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}g("slot,component",!0);var y=g("key,ref,slot,slot-scope,is");function x(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var v=Object.prototype.hasOwnProperty;function b(t,e){return v.call(t,e)}function w(t){var e=Object.create(null);return function(n){var r=e[n];return r||(e[n]=t(n))}}var _=/-(\w)/g,S=w((function(t){return t.replace(_,(function(t,e){return e?e.toUpperCase():""}))})),M=w((function(t){return t.charAt(0).toUpperCase()+t.slice(1)})),T=/\B([A-Z])/g,E=w((function(t){return t.replace(T,"-$1").toLowerCase()}));function A(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n}function C(t,e){return t.bind(e)}var I=Function.prototype.bind?C:A;function k(t,e){e=e||0;var n=t.length-e,r=new Array(n);while(n--)r[n]=t[n+e];return r}function R(t,e){for(var n in e)t[n]=e[n];return t}function N(t){for(var e={},n=0;n<t.length;n++)t[n]&&R(e,t[n]);return e}function L(t,e,n){}var D=function(t,e,n){return!1},P=function(t){return t};function O(t,e){if(t===e)return!0;var n=l(t),r=l(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var i=Array.isArray(t),s=Array.isArray(e);if(i&&s)return t.length===e.length&&t.every((function(t,n){return O(t,e[n])}));if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(i||s)return!1;var a=Object.keys(t),o=Object.keys(e);return a.length===o.length&&a.every((function(n){return O(t[n],e[n])}))}catch(u){return!1}}function F(t,e){for(var n=0;n<t.length;n++)if(O(t[n],e))return n;return-1}function z(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var B="data-server-rendered",U=["component","directive","filter"],$=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:L,parsePlatformTagName:P,mustUseProp:D,async:!0,_lifecycleHooks:$},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function H(t){var e=(t+"").charCodeAt(0);return 36===e||95===e}function W(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var G=new RegExp("[^"+V.source+".$_\\d]");function j(t){if(!G.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}var X,Y="__proto__"in{},K="undefined"!==typeof window,J="undefined"!==typeof WXEnvironment&&!!WXEnvironment.platform,Z=J&&WXEnvironment.platform.toLowerCase(),Q=K&&window.navigator.userAgent.toLowerCase(),tt=Q&&/msie|trident/.test(Q),et=Q&&Q.indexOf("msie 9.0")>0,nt=Q&&Q.indexOf("edge/")>0,rt=(Q&&Q.indexOf("android"),Q&&/iphone|ipad|ipod|ios/.test(Q)||"ios"===Z),it=(Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q),Q&&Q.match(/firefox\/(\d+)/)),st={}.watch,at=!1;if(K)try{var ot={};Object.defineProperty(ot,"passive",{get:function(){at=!0}}),window.addEventListener("test-passive",null,ot)}catch(Sa){}var lt=function(){return void 0===X&&(X=!K&&!J&&"undefined"!==typeof t&&(t["process"]&&"server"===t["process"].env.VUE_ENV)),X},ut=K&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ct(t){return"function"===typeof t&&/native code/.test(t.toString())}var ht,dt="undefined"!==typeof Symbol&&ct(Symbol)&&"undefined"!==typeof Reflect&&ct(Reflect.ownKeys);ht="undefined"!==typeof Set&&ct(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var pt=L,ft=0,mt=function(){this.id=ft++,this.subs=[]};mt.prototype.addSub=function(t){this.subs.push(t)},mt.prototype.removeSub=function(t){x(this.subs,t)},mt.prototype.depend=function(){mt.target&&mt.target.addDep(this)},mt.prototype.notify=function(){var t=this.subs.slice();for(var e=0,n=t.length;e<n;e++)t[e].update()},mt.target=null;var gt=[];function yt(t){gt.push(t),mt.target=t}function xt(){gt.pop(),mt.target=gt[gt.length-1]}var vt=function(t,e,n,r,i,s,a,o){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},bt={child:{configurable:!0}};bt.child.get=function(){return this.componentInstance},Object.defineProperties(vt.prototype,bt);var wt=function(t){void 0===t&&(t="");var e=new vt;return e.text=t,e.isComment=!0,e};function _t(t){return new vt(void 0,void 0,void 0,String(t))}function St(t){var e=new vt(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var Mt=Array.prototype,Tt=Object.create(Mt),Et=["push","pop","shift","unshift","splice","sort","reverse"];Et.forEach((function(t){var e=Mt[t];W(Tt,t,(function(){var n=[],r=arguments.length;while(r--)n[r]=arguments[r];var i,s=e.apply(this,n),a=this.__ob__;switch(t){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2);break}return i&&a.observeArray(i),a.dep.notify(),s}))}));var At=Object.getOwnPropertyNames(Tt),Ct=!0;function It(t){Ct=t}var kt=function(t){this.value=t,this.dep=new mt,this.vmCount=0,W(t,"__ob__",this),Array.isArray(t)?(Y?Rt(t,Tt):Nt(t,Tt,At),this.observeArray(t)):this.walk(t)};function Rt(t,e){t.__proto__=e}function Nt(t,e,n){for(var r=0,i=n.length;r<i;r++){var s=n[r];W(t,s,e[s])}}function Lt(t,e){var n;if(l(t)&&!(t instanceof vt))return b(t,"__ob__")&&t.__ob__ instanceof kt?n=t.__ob__:Ct&&!lt()&&(Array.isArray(t)||c(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new kt(t)),e&&n&&n.vmCount++,n}function Dt(t,e,n,r,i){var s=new mt,a=Object.getOwnPropertyDescriptor(t,e);if(!a||!1!==a.configurable){var o=a&&a.get,l=a&&a.set;o&&!l||2!==arguments.length||(n=t[e]);var u=!i&&Lt(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=o?o.call(t):n;return mt.target&&(s.depend(),u&&(u.dep.depend(),Array.isArray(e)&&Ft(e))),e},set:function(e){var r=o?o.call(t):n;e===r||e!==e&&r!==r||o&&!l||(l?l.call(t,e):n=e,u=!i&&Lt(e),s.notify())}})}}function Pt(t,e,n){if(Array.isArray(t)&&d(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?(Dt(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function Ot(t,e){if(Array.isArray(t)&&d(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||b(t,e)&&(delete t[e],n&&n.dep.notify())}}function Ft(t){for(var e=void 0,n=0,r=t.length;n<r;n++)e=t[n],e&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&Ft(e)}kt.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)Dt(t,e[n])},kt.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)Lt(t[e])};var zt=q.optionMergeStrategies;function Bt(t,e){if(!e)return t;for(var n,r,i,s=dt?Reflect.ownKeys(e):Object.keys(e),a=0;a<s.length;a++)n=s[a],"__ob__"!==n&&(r=t[n],i=e[n],b(t,n)?r!==i&&c(r)&&c(i)&&Bt(r,i):Pt(t,n,i));return t}function Ut(t,e,n){return n?function(){var r="function"===typeof e?e.call(n,n):e,i="function"===typeof t?t.call(n,n):t;return r?Bt(r,i):i}:e?t?function(){return Bt("function"===typeof e?e.call(this,this):e,"function"===typeof t?t.call(this,this):t)}:e:t}function $t(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?qt(n):n}function qt(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}function Vt(t,e,n,r){var i=Object.create(t||null);return e?R(i,e):i}zt.data=function(t,e,n){return n?Ut(t,e,n):e&&"function"!==typeof e?t:Ut(t,e)},$.forEach((function(t){zt[t]=$t})),U.forEach((function(t){zt[t+"s"]=Vt})),zt.watch=function(t,e,n,r){if(t===st&&(t=void 0),e===st&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var i={};for(var s in R(i,t),e){var a=i[s],o=e[s];a&&!Array.isArray(a)&&(a=[a]),i[s]=a?a.concat(o):Array.isArray(o)?o:[o]}return i},zt.props=zt.methods=zt.inject=zt.computed=function(t,e,n,r){if(!t)return e;var i=Object.create(null);return R(i,t),e&&R(i,e),i},zt.provide=Ut;var Ht=function(t,e){return void 0===e?t:e};function Wt(t,e){var n=t.props;if(n){var r,i,s,a={};if(Array.isArray(n)){r=n.length;while(r--)i=n[r],"string"===typeof i&&(s=S(i),a[s]={type:null})}else if(c(n))for(var o in n)i=n[o],s=S(o),a[s]=c(i)?i:{type:i};else 0;t.props=a}}function Gt(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(c(n))for(var s in n){var a=n[s];r[s]=c(a)?R({from:s},a):{from:a}}else 0}}function jt(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"===typeof r&&(e[n]={bind:r,update:r})}}function Xt(t,e,n){if("function"===typeof e&&(e=e.options),Wt(e,n),Gt(e,n),jt(e),!e._base&&(e.extends&&(t=Xt(t,e.extends,n)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)t=Xt(t,e.mixins[r],n);var s,a={};for(s in t)o(s);for(s in e)b(t,s)||o(s);function o(r){var i=zt[r]||Ht;a[r]=i(t[r],e[r],n,r)}return a}function Yt(t,e,n,r){if("string"===typeof n){var i=t[e];if(b(i,n))return i[n];var s=S(n);if(b(i,s))return i[s];var a=M(s);if(b(i,a))return i[a];var o=i[n]||i[s]||i[a];return o}}function Kt(t,e,n,r){var i=e[t],s=!b(n,t),a=n[t],o=ee(Boolean,i.type);if(o>-1)if(s&&!b(i,"default"))a=!1;else if(""===a||a===E(t)){var l=ee(String,i.type);(l<0||o<l)&&(a=!0)}if(void 0===a){a=Jt(r,i,t);var u=Ct;It(!0),Lt(a),It(u)}return a}function Jt(t,e,n){if(b(e,"default")){var r=e.default;return t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n]?t._props[n]:"function"===typeof r&&"Function"!==Qt(e.type)?r.call(t):r}}var Zt=/^\s*function (\w+)/;function Qt(t){var e=t&&t.toString().match(Zt);return e?e[1]:""}function te(t,e){return Qt(t)===Qt(e)}function ee(t,e){if(!Array.isArray(e))return te(e,t)?0:-1;for(var n=0,r=e.length;n<r;n++)if(te(e[n],t))return n;return-1}function ne(t,e,n){yt();try{if(e){var r=e;while(r=r.$parent){var i=r.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{var a=!1===i[s].call(r,t,e,n);if(a)return}catch(Sa){ie(Sa,r,"errorCaptured hook")}}}ie(t,e,n)}finally{xt()}}function re(t,e,n,r,i){var s;try{s=n?t.apply(e,n):t.call(e),s&&!s._isVue&&p(s)&&!s._handled&&(s.catch((function(t){return ne(t,r,i+" (Promise/async)")})),s._handled=!0)}catch(Sa){ne(Sa,r,i)}return s}function ie(t,e,n){if(q.errorHandler)try{return q.errorHandler.call(null,t,e,n)}catch(Sa){Sa!==t&&se(Sa,null,"config.errorHandler")}se(t,e,n)}function se(t,e,n){if(!K&&!J||"undefined"===typeof console)throw t;console.error(t)}var ae,oe=!1,le=[],ue=!1;function ce(){ue=!1;var t=le.slice(0);le.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!==typeof Promise&&ct(Promise)){var he=Promise.resolve();ae=function(){he.then(ce),rt&&setTimeout(L)},oe=!0}else if(tt||"undefined"===typeof MutationObserver||!ct(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())ae="undefined"!==typeof setImmediate&&ct(setImmediate)?function(){setImmediate(ce)}:function(){setTimeout(ce,0)};else{var de=1,pe=new MutationObserver(ce),fe=document.createTextNode(String(de));pe.observe(fe,{characterData:!0}),ae=function(){de=(de+1)%2,fe.data=String(de)},oe=!0}function me(t,e){var n;if(le.push((function(){if(t)try{t.call(e)}catch(Sa){ne(Sa,e,"nextTick")}else n&&n(e)})),ue||(ue=!0,ae()),!t&&"undefined"!==typeof Promise)return new Promise((function(t){n=t}))}var ge=new ht;function ye(t){xe(t,ge),ge.clear()}function xe(t,e){var n,r,i=Array.isArray(t);if(!(!i&&!l(t)||Object.isFrozen(t)||t instanceof vt)){if(t.__ob__){var s=t.__ob__.dep.id;if(e.has(s))return;e.add(s)}if(i){n=t.length;while(n--)xe(t[n],e)}else{r=Object.keys(t),n=r.length;while(n--)xe(t[r[n]],e)}}}var ve=w((function(t){var e="&"===t.charAt(0);t=e?t.slice(1):t;var n="~"===t.charAt(0);t=n?t.slice(1):t;var r="!"===t.charAt(0);return t=r?t.slice(1):t,{name:t,once:n,capture:r,passive:e}}));function be(t,e){function n(){var t=arguments,r=n.fns;if(!Array.isArray(r))return re(r,null,arguments,e,"v-on handler");for(var i=r.slice(),s=0;s<i.length;s++)re(i[s],null,t,e,"v-on handler")}return n.fns=t,n}function we(t,e,n,i,a,o){var l,u,c,h;for(l in t)u=t[l],c=e[l],h=ve(l),r(u)||(r(c)?(r(u.fns)&&(u=t[l]=be(u,o)),s(h.once)&&(u=t[l]=a(h.name,u,h.capture)),n(h.name,u,h.capture,h.passive,h.params)):u!==c&&(c.fns=u,t[l]=c));for(l in e)r(t[l])&&(h=ve(l),i(h.name,e[l],h.capture))}function _e(t,e,n){var a;t instanceof vt&&(t=t.data.hook||(t.data.hook={}));var o=t[e];function l(){n.apply(this,arguments),x(a.fns,l)}r(o)?a=be([l]):i(o.fns)&&s(o.merged)?(a=o,a.fns.push(l)):a=be([o,l]),a.merged=!0,t[e]=a}function Se(t,e,n){var s=e.options.props;if(!r(s)){var a={},o=t.attrs,l=t.props;if(i(o)||i(l))for(var u in s){var c=E(u);Me(a,l,u,c,!0)||Me(a,o,u,c,!1)}return a}}function Me(t,e,n,r,s){if(i(e)){if(b(e,n))return t[n]=e[n],s||delete e[n],!0;if(b(e,r))return t[n]=e[r],s||delete e[r],!0}return!1}function Te(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}function Ee(t){return o(t)?[_t(t)]:Array.isArray(t)?Ce(t):void 0}function Ae(t){return i(t)&&i(t.text)&&a(t.isComment)}function Ce(t,e){var n,a,l,u,c=[];for(n=0;n<t.length;n++)a=t[n],r(a)||"boolean"===typeof a||(l=c.length-1,u=c[l],Array.isArray(a)?a.length>0&&(a=Ce(a,(e||"")+"_"+n),Ae(a[0])&&Ae(u)&&(c[l]=_t(u.text+a[0].text),a.shift()),c.push.apply(c,a)):o(a)?Ae(u)?c[l]=_t(u.text+a):""!==a&&c.push(_t(a)):Ae(a)&&Ae(u)?c[l]=_t(u.text+a.text):(s(t._isVList)&&i(a.tag)&&r(a.key)&&i(e)&&(a.key="__vlist"+e+"_"+n+"__"),c.push(a)));return c}function Ie(t){var e=t.$options.provide;e&&(t._provided="function"===typeof e?e.call(t):e)}function ke(t){var e=Re(t.$options.inject,t);e&&(It(!1),Object.keys(e).forEach((function(n){Dt(t,n,e[n])})),It(!0))}function Re(t,e){if(t){for(var n=Object.create(null),r=dt?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++){var s=r[i];if("__ob__"!==s){var a=t[s].from,o=e;while(o){if(o._provided&&b(o._provided,a)){n[s]=o._provided[a];break}o=o.$parent}if(!o)if("default"in t[s]){var l=t[s].default;n[s]="function"===typeof l?l.call(e):l}else 0}}return n}}function Ne(t,e){if(!t||!t.length)return{};for(var n={},r=0,i=t.length;r<i;r++){var s=t[r],a=s.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,s.context!==e&&s.fnContext!==e||!a||null==a.slot)(n.default||(n.default=[])).push(s);else{var o=a.slot,l=n[o]||(n[o]=[]);"template"===s.tag?l.push.apply(l,s.children||[]):l.push(s)}}for(var u in n)n[u].every(Le)&&delete n[u];return n}function Le(t){return t.isComment&&!t.asyncFactory||" "===t.text}function De(t){return t.isComment&&t.asyncFactory}function Pe(t,e,r){var i,s=Object.keys(e).length>0,a=t?!!t.$stable:!s,o=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(a&&r&&r!==n&&o===r.$key&&!s&&!r.$hasNormal)return r;for(var l in i={},t)t[l]&&"$"!==l[0]&&(i[l]=Oe(e,l,t[l]))}else i={};for(var u in e)u in i||(i[u]=Fe(e,u));return t&&Object.isExtensible(t)&&(t._normalized=i),W(i,"$stable",a),W(i,"$key",o),W(i,"$hasNormal",s),i}function Oe(t,e,n){var r=function(){var t=arguments.length?n.apply(null,arguments):n({});t=t&&"object"===typeof t&&!Array.isArray(t)?[t]:Ee(t);var e=t&&t[0];return t&&(!e||1===t.length&&e.isComment&&!De(e))?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:r,enumerable:!0,configurable:!0}),r}function Fe(t,e){return function(){return t[e]}}function ze(t,e){var n,r,s,a,o;if(Array.isArray(t)||"string"===typeof t)for(n=new Array(t.length),r=0,s=t.length;r<s;r++)n[r]=e(t[r],r);else if("number"===typeof t)for(n=new Array(t),r=0;r<t;r++)n[r]=e(r+1,r);else if(l(t))if(dt&&t[Symbol.iterator]){n=[];var u=t[Symbol.iterator](),c=u.next();while(!c.done)n.push(e(c.value,n.length)),c=u.next()}else for(a=Object.keys(t),n=new Array(a.length),r=0,s=a.length;r<s;r++)o=a[r],n[r]=e(t[o],o,r);return i(n)||(n=[]),n._isVList=!0,n}function Be(t,e,n,r){var i,s=this.$scopedSlots[t];s?(n=n||{},r&&(n=R(R({},r),n)),i=s(n)||("function"===typeof e?e():e)):i=this.$slots[t]||("function"===typeof e?e():e);var a=n&&n.slot;return a?this.$createElement("template",{slot:a},i):i}function Ue(t){return Yt(this.$options,"filters",t,!0)||P}function $e(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function qe(t,e,n,r,i){var s=q.keyCodes[e]||n;return i&&r&&!q.keyCodes[e]?$e(i,r):s?$e(s,t):r?E(r)!==e:void 0===t}function Ve(t,e,n,r,i){if(n)if(l(n)){var s;Array.isArray(n)&&(n=N(n));var a=function(a){if("class"===a||"style"===a||y(a))s=t;else{var o=t.attrs&&t.attrs.type;s=r||q.mustUseProp(e,o,a)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var l=S(a),u=E(a);if(!(l in s)&&!(u in s)&&(s[a]=n[a],i)){var c=t.on||(t.on={});c["update:"+a]=function(t){n[a]=t}}};for(var o in n)a(o)}else;return t}function He(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e||(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),Ge(r,"__static__"+t,!1)),r}function We(t,e,n){return Ge(t,"__once__"+e+(n?"_"+n:""),!0),t}function Ge(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!==typeof t[r]&&je(t[r],e+"_"+r,n);else je(t,e,n)}function je(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function Xe(t,e){if(e)if(c(e)){var n=t.on=t.on?R({},t.on):{};for(var r in e){var i=n[r],s=e[r];n[r]=i?[].concat(i,s):s}}else;return t}function Ye(t,e,n,r){e=e||{$stable:!n};for(var i=0;i<t.length;i++){var s=t[i];Array.isArray(s)?Ye(s,e,n):s&&(s.proxy&&(s.fn.proxy=!0),e[s.key]=s.fn)}return r&&(e.$key=r),e}function Ke(t,e){for(var n=0;n<e.length;n+=2){var r=e[n];"string"===typeof r&&r&&(t[e[n]]=e[n+1])}return t}function Je(t,e){return"string"===typeof t?e+t:t}function Ze(t){t._o=We,t._n=m,t._s=f,t._l=ze,t._t=Be,t._q=O,t._i=F,t._m=He,t._f=Ue,t._k=qe,t._b=Ve,t._v=_t,t._e=wt,t._u=Ye,t._g=Xe,t._d=Ke,t._p=Je}function Qe(t,e,r,i,a){var o,l=this,u=a.options;b(i,"_uid")?(o=Object.create(i),o._original=i):(o=i,i=i._original);var c=s(u._compiled),h=!c;this.data=t,this.props=e,this.children=r,this.parent=i,this.listeners=t.on||n,this.injections=Re(u.inject,i),this.slots=function(){return l.$slots||Pe(t.scopedSlots,l.$slots=Ne(r,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Pe(t.scopedSlots,this.slots())}}),c&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=Pe(t.scopedSlots,this.$slots)),u._scopeId?this._c=function(t,e,n,r){var s=pn(o,t,e,n,r,h);return s&&!Array.isArray(s)&&(s.fnScopeId=u._scopeId,s.fnContext=i),s}:this._c=function(t,e,n,r){return pn(o,t,e,n,r,h)}}function tn(t,e,r,s,a){var o=t.options,l={},u=o.props;if(i(u))for(var c in u)l[c]=Kt(c,u,e||n);else i(r.attrs)&&nn(l,r.attrs),i(r.props)&&nn(l,r.props);var h=new Qe(r,l,a,s,t),d=o.render.call(null,h._c,h);if(d instanceof vt)return en(d,r,h.parent,o,h);if(Array.isArray(d)){for(var p=Ee(d)||[],f=new Array(p.length),m=0;m<p.length;m++)f[m]=en(p[m],r,h.parent,o,h);return f}}function en(t,e,n,r,i){var s=St(t);return s.fnContext=n,s.fnOptions=r,e.slot&&((s.data||(s.data={})).slot=e.slot),s}function nn(t,e){for(var n in e)t[S(n)]=e[n]}Ze(Qe.prototype);var rn={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var n=t;rn.prepatch(n,n)}else{var r=t.componentInstance=on(t,Rn);r.$mount(e?t.elm:void 0,e)}},prepatch:function(t,e){var n=e.componentOptions,r=e.componentInstance=t.componentInstance;On(r,n.propsData,n.listeners,e,n.children)},insert:function(t){var e=t.context,n=t.componentInstance;n._isMounted||(n._isMounted=!0,Un(n,"mounted")),t.data.keepAlive&&(e._isMounted?Qn(n):zn(n,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?Bn(e,!0):e.$destroy())}},sn=Object.keys(rn);function an(t,e,n,a,o){if(!r(t)){var u=n.$options._base;if(l(t)&&(t=u.extend(t)),"function"===typeof t){var c;if(r(t.cid)&&(c=t,t=Sn(c,u),void 0===t))return _n(c,e,n,a,o);e=e||{},_r(t),i(e.model)&&cn(t.options,e);var h=Se(e,t,o);if(s(t.options.functional))return tn(t,h,e,n,a);var d=e.on;if(e.on=e.nativeOn,s(t.options.abstract)){var p=e.slot;e={},p&&(e.slot=p)}ln(e);var f=t.options.name||o,m=new vt("vue-component-"+t.cid+(f?"-"+f:""),e,void 0,void 0,void 0,n,{Ctor:t,propsData:h,listeners:d,tag:o,children:a},c);return m}}}function on(t,e){var n={_isComponent:!0,_parentVnode:t,parent:e},r=t.data.inlineTemplate;return i(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns),new t.componentOptions.Ctor(n)}function ln(t){for(var e=t.hook||(t.hook={}),n=0;n<sn.length;n++){var r=sn[n],i=e[r],s=rn[r];i===s||i&&i._merged||(e[r]=i?un(s,i):s)}}function un(t,e){var n=function(n,r){t(n,r),e(n,r)};return n._merged=!0,n}function cn(t,e){var n=t.model&&t.model.prop||"value",r=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[n]=e.model.value;var s=e.on||(e.on={}),a=s[r],o=e.model.callback;i(a)?(Array.isArray(a)?-1===a.indexOf(o):a!==o)&&(s[r]=[o].concat(a)):s[r]=o}var hn=1,dn=2;function pn(t,e,n,r,i,a){return(Array.isArray(n)||o(n))&&(i=r,r=n,n=void 0),s(a)&&(i=dn),fn(t,e,n,r,i)}function fn(t,e,n,r,s){if(i(n)&&i(n.__ob__))return wt();if(i(n)&&i(n.is)&&(e=n.is),!e)return wt();var a,o,l;(Array.isArray(r)&&"function"===typeof r[0]&&(n=n||{},n.scopedSlots={default:r[0]},r.length=0),s===dn?r=Ee(r):s===hn&&(r=Te(r)),"string"===typeof e)?(o=t.$vnode&&t.$vnode.ns||q.getTagNamespace(e),a=q.isReservedTag(e)?new vt(q.parsePlatformTagName(e),n,r,void 0,void 0,t):n&&n.pre||!i(l=Yt(t.$options,"components",e))?new vt(e,n,r,void 0,void 0,t):an(l,n,t,r,e)):a=an(e,n,t,r);return Array.isArray(a)?a:i(a)?(i(o)&&mn(a,o),i(n)&&gn(n),a):wt()}function mn(t,e,n){if(t.ns=e,"foreignObject"===t.tag&&(e=void 0,n=!0),i(t.children))for(var a=0,o=t.children.length;a<o;a++){var l=t.children[a];i(l.tag)&&(r(l.ns)||s(n)&&"svg"!==l.tag)&&mn(l,e,n)}}function gn(t){l(t.style)&&ye(t.style),l(t.class)&&ye(t.class)}function yn(t){t._vnode=null,t._staticTrees=null;var e=t.$options,r=t.$vnode=e._parentVnode,i=r&&r.context;t.$slots=Ne(e._renderChildren,i),t.$scopedSlots=n,t._c=function(e,n,r,i){return pn(t,e,n,r,i,!1)},t.$createElement=function(e,n,r,i){return pn(t,e,n,r,i,!0)};var s=r&&r.data;Dt(t,"$attrs",s&&s.attrs||n,null,!0),Dt(t,"$listeners",e._parentListeners||n,null,!0)}var xn,vn=null;function bn(t){Ze(t.prototype),t.prototype.$nextTick=function(t){return me(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,r=n.render,i=n._parentVnode;i&&(e.$scopedSlots=Pe(i.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=i;try{vn=e,t=r.call(e._renderProxy,e.$createElement)}catch(Sa){ne(Sa,e,"render"),t=e._vnode}finally{vn=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof vt||(t=wt()),t.parent=i,t}}function wn(t,e){return(t.__esModule||dt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),l(t)?e.extend(t):t}function _n(t,e,n,r,i){var s=wt();return s.asyncFactory=t,s.asyncMeta={data:e,context:n,children:r,tag:i},s}function Sn(t,e){if(s(t.error)&&i(t.errorComp))return t.errorComp;if(i(t.resolved))return t.resolved;var n=vn;if(n&&i(t.owners)&&-1===t.owners.indexOf(n)&&t.owners.push(n),s(t.loading)&&i(t.loadingComp))return t.loadingComp;if(n&&!i(t.owners)){var a=t.owners=[n],o=!0,u=null,c=null;n.$on("hook:destroyed",(function(){return x(a,n)}));var h=function(t){for(var e=0,n=a.length;e<n;e++)a[e].$forceUpdate();t&&(a.length=0,null!==u&&(clearTimeout(u),u=null),null!==c&&(clearTimeout(c),c=null))},d=z((function(n){t.resolved=wn(n,e),o?a.length=0:h(!0)})),f=z((function(e){i(t.errorComp)&&(t.error=!0,h(!0))})),m=t(d,f);return l(m)&&(p(m)?r(t.resolved)&&m.then(d,f):p(m.component)&&(m.component.then(d,f),i(m.error)&&(t.errorComp=wn(m.error,e)),i(m.loading)&&(t.loadingComp=wn(m.loading,e),0===m.delay?t.loading=!0:u=setTimeout((function(){u=null,r(t.resolved)&&r(t.error)&&(t.loading=!0,h(!1))}),m.delay||200)),i(m.timeout)&&(c=setTimeout((function(){c=null,r(t.resolved)&&f(null)}),m.timeout)))),o=!1,t.loading?t.loadingComp:t.resolved}}function Mn(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(i(n)&&(i(n.componentOptions)||De(n)))return n}}function Tn(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&In(t,e)}function En(t,e){xn.$on(t,e)}function An(t,e){xn.$off(t,e)}function Cn(t,e){var n=xn;return function r(){var i=e.apply(null,arguments);null!==i&&n.$off(t,r)}}function In(t,e,n){xn=t,we(e,n||{},En,An,Cn,t),xn=void 0}function kn(t){var e=/^hook:/;t.prototype.$on=function(t,n){var r=this;if(Array.isArray(t))for(var i=0,s=t.length;i<s;i++)r.$on(t[i],n);else(r._events[t]||(r._events[t]=[])).push(n),e.test(t)&&(r._hasHookEvent=!0);return r},t.prototype.$once=function(t,e){var n=this;function r(){n.$off(t,r),e.apply(n,arguments)}return r.fn=e,n.$on(t,r),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var r=0,i=t.length;r<i;r++)n.$off(t[r],e);return n}var s,a=n._events[t];if(!a)return n;if(!e)return n._events[t]=null,n;var o=a.length;while(o--)if(s=a[o],s===e||s.fn===e){a.splice(o,1);break}return n},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?k(n):n;for(var r=k(arguments,1),i='event handler for "'+t+'"',s=0,a=n.length;s<a;s++)re(n[s],e,r,e,i)}return e}}var Rn=null;function Nn(t){var e=Rn;return Rn=t,function(){Rn=e}}function Ln(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){while(n.$options.abstract&&n.$parent)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}function Dn(t){t.prototype._update=function(t,e){var n=this,r=n.$el,i=n._vnode,s=Nn(n);n._vnode=t,n.$el=i?n.__patch__(i,t):n.__patch__(n.$el,t,e,!1),s(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){var t=this;t._watcher&&t._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){Un(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||x(e.$children,t),t._watcher&&t._watcher.teardown();var n=t._watchers.length;while(n--)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),Un(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}function Pn(t,e,n){var r;return t.$el=e,t.$options.render||(t.$options.render=wt),Un(t,"beforeMount"),r=function(){t._update(t._render(),n)},new rr(t,r,L,{before:function(){t._isMounted&&!t._isDestroyed&&Un(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,Un(t,"mounted")),t}function On(t,e,r,i,s){var a=i.data.scopedSlots,o=t.$scopedSlots,l=!!(a&&!a.$stable||o!==n&&!o.$stable||a&&t.$scopedSlots.$key!==a.$key||!a&&t.$scopedSlots.$key),u=!!(s||t.$options._renderChildren||l);if(t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=s,t.$attrs=i.data.attrs||n,t.$listeners=r||n,e&&t.$options.props){It(!1);for(var c=t._props,h=t.$options._propKeys||[],d=0;d<h.length;d++){var p=h[d],f=t.$options.props;c[p]=Kt(p,f,e,t)}It(!0),t.$options.propsData=e}r=r||n;var m=t.$options._parentListeners;t.$options._parentListeners=r,In(t,r,m),u&&(t.$slots=Ne(s,i.context),t.$forceUpdate())}function Fn(t){while(t&&(t=t.$parent))if(t._inactive)return!0;return!1}function zn(t,e){if(e){if(t._directInactive=!1,Fn(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)zn(t.$children[n]);Un(t,"activated")}}function Bn(t,e){if((!e||(t._directInactive=!0,!Fn(t)))&&!t._inactive){t._inactive=!0;for(var n=0;n<t.$children.length;n++)Bn(t.$children[n]);Un(t,"deactivated")}}function Un(t,e){yt();var n=t.$options[e],r=e+" hook";if(n)for(var i=0,s=n.length;i<s;i++)re(n[i],t,null,t,r);t._hasHookEvent&&t.$emit("hook:"+e),xt()}var $n=[],qn=[],Vn={},Hn=!1,Wn=!1,Gn=0;function jn(){Gn=$n.length=qn.length=0,Vn={},Hn=Wn=!1}var Xn=0,Yn=Date.now;if(K&&!tt){var Kn=window.performance;Kn&&"function"===typeof Kn.now&&Yn()>document.createEvent("Event").timeStamp&&(Yn=function(){return Kn.now()})}function Jn(){var t,e;for(Xn=Yn(),Wn=!0,$n.sort((function(t,e){return t.id-e.id})),Gn=0;Gn<$n.length;Gn++)t=$n[Gn],t.before&&t.before(),e=t.id,Vn[e]=null,t.run();var n=qn.slice(),r=$n.slice();jn(),tr(n),Zn(r),ut&&q.devtools&&ut.emit("flush")}function Zn(t){var e=t.length;while(e--){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Un(r,"updated")}}function Qn(t){t._inactive=!1,qn.push(t)}function tr(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,zn(t[e],!0)}function er(t){var e=t.id;if(null==Vn[e]){if(Vn[e]=!0,Wn){var n=$n.length-1;while(n>Gn&&$n[n].id>t.id)n--;$n.splice(n+1,0,t)}else $n.push(t);Hn||(Hn=!0,me(Jn))}}var nr=0,rr=function(t,e,n,r,i){this.vm=t,i&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++nr,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ht,this.newDepIds=new ht,this.expression="","function"===typeof e?this.getter=e:(this.getter=j(e),this.getter||(this.getter=L)),this.value=this.lazy?void 0:this.get()};rr.prototype.get=function(){var t;yt(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(Sa){if(!this.user)throw Sa;ne(Sa,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ye(t),xt(),this.cleanupDeps()}return t},rr.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},rr.prototype.cleanupDeps=function(){var t=this.deps.length;while(t--){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},rr.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():er(this)},rr.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||l(t)||this.deep){var e=this.value;if(this.value=t,this.user){var n='callback for watcher "'+this.expression+'"';re(this.cb,this.vm,[t,e],this.vm,n)}else this.cb.call(this.vm,t,e)}}},rr.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},rr.prototype.depend=function(){var t=this.deps.length;while(t--)this.deps[t].depend()},rr.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||x(this.vm._watchers,this);var t=this.deps.length;while(t--)this.deps[t].removeSub(this);this.active=!1}};var ir={enumerable:!0,configurable:!0,get:L,set:L};function sr(t,e,n){ir.get=function(){return this[e][n]},ir.set=function(t){this[e][n]=t},Object.defineProperty(t,n,ir)}function ar(t){t._watchers=[];var e=t.$options;e.props&&or(t,e.props),e.methods&&mr(t,e.methods),e.data?lr(t):Lt(t._data={},!0),e.computed&&hr(t,e.computed),e.watch&&e.watch!==st&&gr(t,e.watch)}function or(t,e){var n=t.$options.propsData||{},r=t._props={},i=t.$options._propKeys=[],s=!t.$parent;s||It(!1);var a=function(s){i.push(s);var a=Kt(s,e,n,t);Dt(r,s,a),s in t||sr(t,"_props",s)};for(var o in e)a(o);It(!0)}function lr(t){var e=t.$options.data;e=t._data="function"===typeof e?ur(e,t):e||{},c(e)||(e={});var n=Object.keys(e),r=t.$options.props,i=(t.$options.methods,n.length);while(i--){var s=n[i];0,r&&b(r,s)||H(s)||sr(t,"_data",s)}Lt(e,!0)}function ur(t,e){yt();try{return t.call(e,e)}catch(Sa){return ne(Sa,e,"data()"),{}}finally{xt()}}var cr={lazy:!0};function hr(t,e){var n=t._computedWatchers=Object.create(null),r=lt();for(var i in e){var s=e[i],a="function"===typeof s?s:s.get;0,r||(n[i]=new rr(t,a||L,L,cr)),i in t||dr(t,i,s)}}function dr(t,e,n){var r=!lt();"function"===typeof n?(ir.get=r?pr(e):fr(n),ir.set=L):(ir.get=n.get?r&&!1!==n.cache?pr(e):fr(n.get):L,ir.set=n.set||L),Object.defineProperty(t,e,ir)}function pr(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),mt.target&&e.depend(),e.value}}function fr(t){return function(){return t.call(this,this)}}function mr(t,e){t.$options.props;for(var n in e)t[n]="function"!==typeof e[n]?L:I(e[n],t)}function gr(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)yr(t,n,r[i]);else yr(t,n,r)}}function yr(t,e,n,r){return c(n)&&(r=n,n=n.handler),"string"===typeof n&&(n=t[n]),t.$watch(e,n,r)}function xr(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=Pt,t.prototype.$delete=Ot,t.prototype.$watch=function(t,e,n){var r=this;if(c(e))return yr(r,t,e,n);n=n||{},n.user=!0;var i=new rr(r,t,e,n);if(n.immediate){var s='callback for immediate watcher "'+i.expression+'"';yt(),re(e,r,[i.value],r,s),xt()}return function(){i.teardown()}}}var vr=0;function br(t){t.prototype._init=function(t){var e=this;e._uid=vr++,e._isVue=!0,t&&t._isComponent?wr(e,t):e.$options=Xt(_r(e.constructor),t||{},e),e._renderProxy=e,e._self=e,Ln(e),Tn(e),yn(e),Un(e,"beforeCreate"),ke(e),ar(e),Ie(e),Un(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}function wr(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}function _r(t){var e=t.options;if(t.super){var n=_r(t.super),r=t.superOptions;if(n!==r){t.superOptions=n;var i=Sr(t);i&&R(t.extendOptions,i),e=t.options=Xt(n,t.extendOptions),e.name&&(e.components[e.name]=t)}}return e}function Sr(t){var e,n=t.options,r=t.sealedOptions;for(var i in n)n[i]!==r[i]&&(e||(e={}),e[i]=n[i]);return e}function Mr(t){this._init(t)}function Tr(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=k(arguments,1);return n.unshift(this),"function"===typeof t.install?t.install.apply(t,n):"function"===typeof t&&t.apply(null,n),e.push(t),this}}function Er(t){t.mixin=function(t){return this.options=Xt(this.options,t),this}}function Ar(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,i=t._Ctor||(t._Ctor={});if(i[r])return i[r];var s=t.name||n.options.name;var a=function(t){this._init(t)};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.cid=e++,a.options=Xt(n.options,t),a["super"]=n,a.options.props&&Cr(a),a.options.computed&&Ir(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,U.forEach((function(t){a[t]=n[t]})),s&&(a.options.components[s]=a),a.superOptions=n.options,a.extendOptions=t,a.sealedOptions=R({},a.options),i[r]=a,a}}function Cr(t){var e=t.options.props;for(var n in e)sr(t.prototype,"_props",n)}function Ir(t){var e=t.options.computed;for(var n in e)dr(t.prototype,n,e[n])}function kr(t){U.forEach((function(e){t[e]=function(t,n){return n?("component"===e&&c(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"===typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}}))}function Rr(t){return t&&(t.Ctor.options.name||t.tag)}function Nr(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"===typeof t?t.split(",").indexOf(e)>-1:!!h(t)&&t.test(e)}function Lr(t,e){var n=t.cache,r=t.keys,i=t._vnode;for(var s in n){var a=n[s];if(a){var o=a.name;o&&!e(o)&&Dr(n,s,r,i)}}}function Dr(t,e,n,r){var i=t[e];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),t[e]=null,x(n,e)}br(Mr),xr(Mr),kn(Mr),Dn(Mr),bn(Mr);var Pr=[String,RegExp,Array],Or={name:"keep-alive",abstract:!0,props:{include:Pr,exclude:Pr,max:[String,Number]},methods:{cacheVNode:function(){var t=this,e=t.cache,n=t.keys,r=t.vnodeToCache,i=t.keyToCache;if(r){var s=r.tag,a=r.componentInstance,o=r.componentOptions;e[i]={name:Rr(o),tag:s,componentInstance:a},n.push(i),this.max&&n.length>parseInt(this.max)&&Dr(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)Dr(this.cache,t,this.keys)},mounted:function(){var t=this;this.cacheVNode(),this.$watch("include",(function(e){Lr(t,(function(t){return Nr(e,t)}))})),this.$watch("exclude",(function(e){Lr(t,(function(t){return!Nr(e,t)}))}))},updated:function(){this.cacheVNode()},render:function(){var t=this.$slots.default,e=Mn(t),n=e&&e.componentOptions;if(n){var r=Rr(n),i=this,s=i.include,a=i.exclude;if(s&&(!r||!Nr(s,r))||a&&r&&Nr(a,r))return e;var o=this,l=o.cache,u=o.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;l[c]?(e.componentInstance=l[c].componentInstance,x(u,c),u.push(c)):(this.vnodeToCache=e,this.keyToCache=c),e.data.keepAlive=!0}return e||t&&t[0]}},Fr={KeepAlive:Or};function zr(t){var e={get:function(){return q}};Object.defineProperty(t,"config",e),t.util={warn:pt,extend:R,mergeOptions:Xt,defineReactive:Dt},t.set=Pt,t.delete=Ot,t.nextTick=me,t.observable=function(t){return Lt(t),t},t.options=Object.create(null),U.forEach((function(e){t.options[e+"s"]=Object.create(null)})),t.options._base=t,R(t.options.components,Fr),Tr(t),Er(t),Ar(t),kr(t)}zr(Mr),Object.defineProperty(Mr.prototype,"$isServer",{get:lt}),Object.defineProperty(Mr.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Mr,"FunctionalRenderContext",{value:Qe}),Mr.version="2.6.14";var Br=g("style,class"),Ur=g("input,textarea,option,select,progress"),$r=function(t,e,n){return"value"===n&&Ur(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},qr=g("contenteditable,draggable,spellcheck"),Vr=g("events,caret,typing,plaintext-only"),Hr=function(t,e){return Yr(e)||"false"===e?"false":"contenteditable"===t&&Vr(e)?e:"true"},Wr=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Gr="http://www.w3.org/1999/xlink",jr=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},Xr=function(t){return jr(t)?t.slice(6,t.length):""},Yr=function(t){return null==t||!1===t};function Kr(t){var e=t.data,n=t,r=t;while(i(r.componentInstance))r=r.componentInstance._vnode,r&&r.data&&(e=Jr(r.data,e));while(i(n=n.parent))n&&n.data&&(e=Jr(e,n.data));return Zr(e.staticClass,e.class)}function Jr(t,e){return{staticClass:Qr(t.staticClass,e.staticClass),class:i(t.class)?[t.class,e.class]:e.class}}function Zr(t,e){return i(t)||i(e)?Qr(t,ti(e)):""}function Qr(t,e){return t?e?t+" "+e:t:e||""}function ti(t){return Array.isArray(t)?ei(t):l(t)?ni(t):"string"===typeof t?t:""}function ei(t){for(var e,n="",r=0,s=t.length;r<s;r++)i(e=ti(t[r]))&&""!==e&&(n&&(n+=" "),n+=e);return n}function ni(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}var ri={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ii=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),si=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ai=function(t){return ii(t)||si(t)};function oi(t){return si(t)?"svg":"math"===t?"math":void 0}var li=Object.create(null);function ui(t){if(!K)return!0;if(ai(t))return!1;if(t=t.toLowerCase(),null!=li[t])return li[t];var e=document.createElement(t);return t.indexOf("-")>-1?li[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:li[t]=/HTMLUnknownElement/.test(e.toString())}var ci=g("text,number,password,search,email,tel,url");function hi(t){if("string"===typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}function di(t,e){var n=document.createElement(t);return"select"!==t||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n}function pi(t,e){return document.createElementNS(ri[t],e)}function fi(t){return document.createTextNode(t)}function mi(t){return document.createComment(t)}function gi(t,e,n){t.insertBefore(e,n)}function yi(t,e){t.removeChild(e)}function xi(t,e){t.appendChild(e)}function vi(t){return t.parentNode}function bi(t){return t.nextSibling}function wi(t){return t.tagName}function _i(t,e){t.textContent=e}function Si(t,e){t.setAttribute(e,"")}var Mi=Object.freeze({createElement:di,createElementNS:pi,createTextNode:fi,createComment:mi,insertBefore:gi,removeChild:yi,appendChild:xi,parentNode:vi,nextSibling:bi,tagName:wi,setTextContent:_i,setStyleScope:Si}),Ti={create:function(t,e){Ei(e)},update:function(t,e){t.data.ref!==e.data.ref&&(Ei(t,!0),Ei(e))},destroy:function(t){Ei(t,!0)}};function Ei(t,e){var n=t.data.ref;if(i(n)){var r=t.context,s=t.componentInstance||t.elm,a=r.$refs;e?Array.isArray(a[n])?x(a[n],s):a[n]===s&&(a[n]=void 0):t.data.refInFor?Array.isArray(a[n])?a[n].indexOf(s)<0&&a[n].push(s):a[n]=[s]:a[n]=s}}var Ai=new vt("",{},[]),Ci=["create","activate","update","remove","destroy"];function Ii(t,e){return t.key===e.key&&t.asyncFactory===e.asyncFactory&&(t.tag===e.tag&&t.isComment===e.isComment&&i(t.data)===i(e.data)&&ki(t,e)||s(t.isAsyncPlaceholder)&&r(e.asyncFactory.error))}function ki(t,e){if("input"!==t.tag)return!0;var n,r=i(n=t.data)&&i(n=n.attrs)&&n.type,s=i(n=e.data)&&i(n=n.attrs)&&n.type;return r===s||ci(r)&&ci(s)}function Ri(t,e,n){var r,s,a={};for(r=e;r<=n;++r)s=t[r].key,i(s)&&(a[s]=r);return a}function Ni(t){var e,n,a={},l=t.modules,u=t.nodeOps;for(e=0;e<Ci.length;++e)for(a[Ci[e]]=[],n=0;n<l.length;++n)i(l[n][Ci[e]])&&a[Ci[e]].push(l[n][Ci[e]]);function c(t){return new vt(u.tagName(t).toLowerCase(),{},[],void 0,t)}function h(t,e){function n(){0===--n.listeners&&d(t)}return n.listeners=e,n}function d(t){var e=u.parentNode(t);i(e)&&u.removeChild(e,t)}function p(t,e,n,r,a,o,l){if(i(t.elm)&&i(o)&&(t=o[l]=St(t)),t.isRootInsert=!a,!f(t,e,n,r)){var c=t.data,h=t.children,d=t.tag;i(d)?(t.elm=t.ns?u.createElementNS(t.ns,d):u.createElement(d,t),_(t),v(t,h,e),i(c)&&w(t,e),x(n,t.elm,r)):s(t.isComment)?(t.elm=u.createComment(t.text),x(n,t.elm,r)):(t.elm=u.createTextNode(t.text),x(n,t.elm,r))}}function f(t,e,n,r){var a=t.data;if(i(a)){var o=i(t.componentInstance)&&a.keepAlive;if(i(a=a.hook)&&i(a=a.init)&&a(t,!1),i(t.componentInstance))return m(t,e),x(n,t.elm,r),s(o)&&y(t,e,n,r),!0}}function m(t,e){i(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,b(t)?(w(t,e),_(t)):(Ei(t),e.push(t))}function y(t,e,n,r){var s,o=t;while(o.componentInstance)if(o=o.componentInstance._vnode,i(s=o.data)&&i(s=s.transition)){for(s=0;s<a.activate.length;++s)a.activate[s](Ai,o);e.push(o);break}x(n,t.elm,r)}function x(t,e,n){i(t)&&(i(n)?u.parentNode(n)===t&&u.insertBefore(t,e,n):u.appendChild(t,e))}function v(t,e,n){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)p(e[r],n,t.elm,null,!0,e,r)}else o(t.text)&&u.appendChild(t.elm,u.createTextNode(String(t.text)))}function b(t){while(t.componentInstance)t=t.componentInstance._vnode;return i(t.tag)}function w(t,n){for(var r=0;r<a.create.length;++r)a.create[r](Ai,t);e=t.data.hook,i(e)&&(i(e.create)&&e.create(Ai,t),i(e.insert)&&n.push(t))}function _(t){var e;if(i(e=t.fnScopeId))u.setStyleScope(t.elm,e);else{var n=t;while(n)i(e=n.context)&&i(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e),n=n.parent}i(e=Rn)&&e!==t.context&&e!==t.fnContext&&i(e=e.$options._scopeId)&&u.setStyleScope(t.elm,e)}function S(t,e,n,r,i,s){for(;r<=i;++r)p(n[r],s,t,e,!1,n,r)}function M(t){var e,n,r=t.data;if(i(r))for(i(e=r.hook)&&i(e=e.destroy)&&e(t),e=0;e<a.destroy.length;++e)a.destroy[e](t);if(i(e=t.children))for(n=0;n<t.children.length;++n)M(t.children[n])}function T(t,e,n){for(;e<=n;++e){var r=t[e];i(r)&&(i(r.tag)?(E(r),M(r)):d(r.elm))}}function E(t,e){if(i(e)||i(t.data)){var n,r=a.remove.length+1;for(i(e)?e.listeners+=r:e=h(t.elm,r),i(n=t.componentInstance)&&i(n=n._vnode)&&i(n.data)&&E(n,e),n=0;n<a.remove.length;++n)a.remove[n](t,e);i(n=t.data.hook)&&i(n=n.remove)?n(t,e):e()}else d(t.elm)}function A(t,e,n,s,a){var o,l,c,h,d=0,f=0,m=e.length-1,g=e[0],y=e[m],x=n.length-1,v=n[0],b=n[x],w=!a;while(d<=m&&f<=x)r(g)?g=e[++d]:r(y)?y=e[--m]:Ii(g,v)?(I(g,v,s,n,f),g=e[++d],v=n[++f]):Ii(y,b)?(I(y,b,s,n,x),y=e[--m],b=n[--x]):Ii(g,b)?(I(g,b,s,n,x),w&&u.insertBefore(t,g.elm,u.nextSibling(y.elm)),g=e[++d],b=n[--x]):Ii(y,v)?(I(y,v,s,n,f),w&&u.insertBefore(t,y.elm,g.elm),y=e[--m],v=n[++f]):(r(o)&&(o=Ri(e,d,m)),l=i(v.key)?o[v.key]:C(v,e,d,m),r(l)?p(v,s,t,g.elm,!1,n,f):(c=e[l],Ii(c,v)?(I(c,v,s,n,f),e[l]=void 0,w&&u.insertBefore(t,c.elm,g.elm)):p(v,s,t,g.elm,!1,n,f)),v=n[++f]);d>m?(h=r(n[x+1])?null:n[x+1].elm,S(t,h,n,f,x,s)):f>x&&T(e,d,m)}function C(t,e,n,r){for(var s=n;s<r;s++){var a=e[s];if(i(a)&&Ii(t,a))return s}}function I(t,e,n,o,l,c){if(t!==e){i(e.elm)&&i(o)&&(e=o[l]=St(e));var h=e.elm=t.elm;if(s(t.isAsyncPlaceholder))i(e.asyncFactory.resolved)?N(t.elm,e,n):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(t.isStatic)&&e.key===t.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=t.componentInstance;else{var d,p=e.data;i(p)&&i(d=p.hook)&&i(d=d.prepatch)&&d(t,e);var f=t.children,m=e.children;if(i(p)&&b(e)){for(d=0;d<a.update.length;++d)a.update[d](t,e);i(d=p.hook)&&i(d=d.update)&&d(t,e)}r(e.text)?i(f)&&i(m)?f!==m&&A(h,f,m,n,c):i(m)?(i(t.text)&&u.setTextContent(h,""),S(h,null,m,0,m.length-1,n)):i(f)?T(f,0,f.length-1):i(t.text)&&u.setTextContent(h,""):t.text!==e.text&&u.setTextContent(h,e.text),i(p)&&i(d=p.hook)&&i(d=d.postpatch)&&d(t,e)}}}function k(t,e,n){if(s(n)&&i(t.parent))t.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var R=g("attrs,class,staticClass,staticStyle,key");function N(t,e,n,r){var a,o=e.tag,l=e.data,u=e.children;if(r=r||l&&l.pre,e.elm=t,s(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(l)&&(i(a=l.hook)&&i(a=a.init)&&a(e,!0),i(a=e.componentInstance)))return m(e,n),!0;if(i(o)){if(i(u))if(t.hasChildNodes())if(i(a=l)&&i(a=a.domProps)&&i(a=a.innerHTML)){if(a!==t.innerHTML)return!1}else{for(var c=!0,h=t.firstChild,d=0;d<u.length;d++){if(!h||!N(h,u[d],n,r)){c=!1;break}h=h.nextSibling}if(!c||h)return!1}else v(e,u,n);if(i(l)){var p=!1;for(var f in l)if(!R(f)){p=!0,w(e,n);break}!p&&l["class"]&&ye(l["class"])}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,e,n,o){if(!r(e)){var l=!1,h=[];if(r(t))l=!0,p(e,h);else{var d=i(t.nodeType);if(!d&&Ii(t,e))I(t,e,h,null,null,o);else{if(d){if(1===t.nodeType&&t.hasAttribute(B)&&(t.removeAttribute(B),n=!0),s(n)&&N(t,e,h))return k(e,h,!0),t;t=c(t)}var f=t.elm,m=u.parentNode(f);if(p(e,h,f._leaveCb?null:m,u.nextSibling(f)),i(e.parent)){var g=e.parent,y=b(e);while(g){for(var x=0;x<a.destroy.length;++x)a.destroy[x](g);if(g.elm=e.elm,y){for(var v=0;v<a.create.length;++v)a.create[v](Ai,g);var w=g.data.hook.insert;if(w.merged)for(var _=1;_<w.fns.length;_++)w.fns[_]()}else Ei(g);g=g.parent}}i(m)?T([t],0,0):i(t.tag)&&M(t)}}return k(e,h,l),e.elm}i(t)&&M(t)}}var Li={create:Di,update:Di,destroy:function(t){Di(t,Ai)}};function Di(t,e){(t.data.directives||e.data.directives)&&Pi(t,e)}function Pi(t,e){var n,r,i,s=t===Ai,a=e===Ai,o=Fi(t.data.directives,t.context),l=Fi(e.data.directives,e.context),u=[],c=[];for(n in l)r=o[n],i=l[n],r?(i.oldValue=r.value,i.oldArg=r.arg,Bi(i,"update",e,t),i.def&&i.def.componentUpdated&&c.push(i)):(Bi(i,"bind",e,t),i.def&&i.def.inserted&&u.push(i));if(u.length){var h=function(){for(var n=0;n<u.length;n++)Bi(u[n],"inserted",e,t)};s?_e(e,"insert",h):h()}if(c.length&&_e(e,"postpatch",(function(){for(var n=0;n<c.length;n++)Bi(c[n],"componentUpdated",e,t)})),!s)for(n in o)l[n]||Bi(o[n],"unbind",t,t,a)}var Oi=Object.create(null);function Fi(t,e){var n,r,i=Object.create(null);if(!t)return i;for(n=0;n<t.length;n++)r=t[n],r.modifiers||(r.modifiers=Oi),i[zi(r)]=r,r.def=Yt(e.$options,"directives",r.name,!0);return i}function zi(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function Bi(t,e,n,r,i){var s=t.def&&t.def[e];if(s)try{s(n.elm,t,n,r,i)}catch(Sa){ne(Sa,n.context,"directive "+t.name+" "+e+" hook")}}var Ui=[Ti,Li];function $i(t,e){var n=e.componentOptions;if((!i(n)||!1!==n.Ctor.options.inheritAttrs)&&(!r(t.data.attrs)||!r(e.data.attrs))){var s,a,o,l=e.elm,u=t.data.attrs||{},c=e.data.attrs||{};for(s in i(c.__ob__)&&(c=e.data.attrs=R({},c)),c)a=c[s],o=u[s],o!==a&&qi(l,s,a,e.data.pre);for(s in(tt||nt)&&c.value!==u.value&&qi(l,"value",c.value),u)r(c[s])&&(jr(s)?l.removeAttributeNS(Gr,Xr(s)):qr(s)||l.removeAttribute(s))}}function qi(t,e,n,r){r||t.tagName.indexOf("-")>-1?Vi(t,e,n):Wr(e)?Yr(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):qr(e)?t.setAttribute(e,Hr(e,n)):jr(e)?Yr(n)?t.removeAttributeNS(Gr,Xr(e)):t.setAttributeNS(Gr,e,n):Vi(t,e,n)}function Vi(t,e,n){if(Yr(n))t.removeAttribute(e);else{if(tt&&!et&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}var Hi={create:$i,update:$i};function Wi(t,e){var n=e.elm,s=e.data,a=t.data;if(!(r(s.staticClass)&&r(s.class)&&(r(a)||r(a.staticClass)&&r(a.class)))){var o=Kr(e),l=n._transitionClasses;i(l)&&(o=Qr(o,ti(l))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var Gi,ji={create:Wi,update:Wi},Xi="__r",Yi="__c";function Ki(t){if(i(t[Xi])){var e=tt?"change":"input";t[e]=[].concat(t[Xi],t[e]||[]),delete t[Xi]}i(t[Yi])&&(t.change=[].concat(t[Yi],t.change||[]),delete t[Yi])}function Ji(t,e,n){var r=Gi;return function i(){var s=e.apply(null,arguments);null!==s&&ts(t,i,n,r)}}var Zi=oe&&!(it&&Number(it[1])<=53);function Qi(t,e,n,r){if(Zi){var i=Xn,s=e;e=s._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=i||t.timeStamp<=0||t.target.ownerDocument!==document)return s.apply(this,arguments)}}Gi.addEventListener(t,e,at?{capture:n,passive:r}:n)}function ts(t,e,n,r){(r||Gi).removeEventListener(t,e._wrapper||e,n)}function es(t,e){if(!r(t.data.on)||!r(e.data.on)){var n=e.data.on||{},i=t.data.on||{};Gi=e.elm,Ki(n),we(n,i,Qi,ts,Ji,e.context),Gi=void 0}}var ns,rs={create:es,update:es};function is(t,e){if(!r(t.data.domProps)||!r(e.data.domProps)){var n,s,a=e.elm,o=t.data.domProps||{},l=e.data.domProps||{};for(n in i(l.__ob__)&&(l=e.data.domProps=R({},l)),o)n in l||(a[n]="");for(n in l){if(s=l[n],"textContent"===n||"innerHTML"===n){if(e.children&&(e.children.length=0),s===o[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=s;var u=r(s)?"":String(s);ss(a,u)&&(a.value=u)}else if("innerHTML"===n&&si(a.tagName)&&r(a.innerHTML)){ns=ns||document.createElement("div"),ns.innerHTML="<svg>"+s+"</svg>";var c=ns.firstChild;while(a.firstChild)a.removeChild(a.firstChild);while(c.firstChild)a.appendChild(c.firstChild)}else if(s!==o[n])try{a[n]=s}catch(Sa){}}}}function ss(t,e){return!t.composing&&("OPTION"===t.tagName||as(t,e)||os(t,e))}function as(t,e){var n=!0;try{n=document.activeElement!==t}catch(Sa){}return n&&t.value!==e}function os(t,e){var n=t.value,r=t._vModifiers;if(i(r)){if(r.number)return m(n)!==m(e);if(r.trim)return n.trim()!==e.trim()}return n!==e}var ls={create:is,update:is},us=w((function(t){var e={},n=/;(?![^(]*\))/g,r=/:(.+)/;return t.split(n).forEach((function(t){if(t){var n=t.split(r);n.length>1&&(e[n[0].trim()]=n[1].trim())}})),e}));function cs(t){var e=hs(t.style);return t.staticStyle?R(t.staticStyle,e):e}function hs(t){return Array.isArray(t)?N(t):"string"===typeof t?us(t):t}function ds(t,e){var n,r={};if(e){var i=t;while(i.componentInstance)i=i.componentInstance._vnode,i&&i.data&&(n=cs(i.data))&&R(r,n)}(n=cs(t.data))&&R(r,n);var s=t;while(s=s.parent)s.data&&(n=cs(s.data))&&R(r,n);return r}var ps,fs=/^--/,ms=/\s*!important$/,gs=function(t,e,n){if(fs.test(e))t.style.setProperty(e,n);else if(ms.test(n))t.style.setProperty(E(e),n.replace(ms,""),"important");else{var r=xs(e);if(Array.isArray(n))for(var i=0,s=n.length;i<s;i++)t.style[r]=n[i];else t.style[r]=n}},ys=["Webkit","Moz","ms"],xs=w((function(t){if(ps=ps||document.createElement("div").style,t=S(t),"filter"!==t&&t in ps)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<ys.length;n++){var r=ys[n]+e;if(r in ps)return r}}));function vs(t,e){var n=e.data,s=t.data;if(!(r(n.staticStyle)&&r(n.style)&&r(s.staticStyle)&&r(s.style))){var a,o,l=e.elm,u=s.staticStyle,c=s.normalizedStyle||s.style||{},h=u||c,d=hs(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?R({},d):d;var p=ds(e,!0);for(o in h)r(p[o])&&gs(l,o,"");for(o in p)a=p[o],a!==h[o]&&gs(l,o,null==a?"":a)}}var bs={create:vs,update:vs},ws=/\s+/;function _s(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(ws).forEach((function(e){return t.classList.add(e)})):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function Ss(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(ws).forEach((function(e){return t.classList.remove(e)})):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";while(n.indexOf(r)>=0)n=n.replace(r," ");n=n.trim(),n?t.setAttribute("class",n):t.removeAttribute("class")}}function Ms(t){if(t){if("object"===typeof t){var e={};return!1!==t.css&&R(e,Ts(t.name||"v")),R(e,t),e}return"string"===typeof t?Ts(t):void 0}}var Ts=w((function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}})),Es=K&&!et,As="transition",Cs="animation",Is="transition",ks="transitionend",Rs="animation",Ns="animationend";Es&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Is="WebkitTransition",ks="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Rs="WebkitAnimation",Ns="webkitAnimationEnd"));var Ls=K?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function Ds(t){Ls((function(){Ls(t)}))}function Ps(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),_s(t,e))}function Os(t,e){t._transitionClasses&&x(t._transitionClasses,e),Ss(t,e)}function Fs(t,e,n){var r=Bs(t,e),i=r.type,s=r.timeout,a=r.propCount;if(!i)return n();var o=i===As?ks:Ns,l=0,u=function(){t.removeEventListener(o,c),n()},c=function(e){e.target===t&&++l>=a&&u()};setTimeout((function(){l<a&&u()}),s+1),t.addEventListener(o,c)}var zs=/\b(transform|all)(,|$)/;function Bs(t,e){var n,r=window.getComputedStyle(t),i=(r[Is+"Delay"]||"").split(", "),s=(r[Is+"Duration"]||"").split(", "),a=Us(i,s),o=(r[Rs+"Delay"]||"").split(", "),l=(r[Rs+"Duration"]||"").split(", "),u=Us(o,l),c=0,h=0;e===As?a>0&&(n=As,c=a,h=s.length):e===Cs?u>0&&(n=Cs,c=u,h=l.length):(c=Math.max(a,u),n=c>0?a>u?As:Cs:null,h=n?n===As?s.length:l.length:0);var d=n===As&&zs.test(r[Is+"Property"]);return{type:n,timeout:c,propCount:h,hasTransform:d}}function Us(t,e){while(t.length<e.length)t=t.concat(t);return Math.max.apply(null,e.map((function(e,n){return $s(e)+$s(t[n])})))}function $s(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function qs(t,e){var n=t.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var s=Ms(t.data.transition);if(!r(s)&&!i(n._enterCb)&&1===n.nodeType){var a=s.css,o=s.type,u=s.enterClass,c=s.enterToClass,h=s.enterActiveClass,d=s.appearClass,p=s.appearToClass,f=s.appearActiveClass,g=s.beforeEnter,y=s.enter,x=s.afterEnter,v=s.enterCancelled,b=s.beforeAppear,w=s.appear,_=s.afterAppear,S=s.appearCancelled,M=s.duration,T=Rn,E=Rn.$vnode;while(E&&E.parent)T=E.context,E=E.parent;var A=!T._isMounted||!t.isRootInsert;if(!A||w||""===w){var C=A&&d?d:u,I=A&&f?f:h,k=A&&p?p:c,R=A&&b||g,N=A&&"function"===typeof w?w:y,L=A&&_||x,D=A&&S||v,P=m(l(M)?M.enter:M);0;var O=!1!==a&&!et,F=Ws(N),B=n._enterCb=z((function(){O&&(Os(n,k),Os(n,I)),B.cancelled?(O&&Os(n,C),D&&D(n)):L&&L(n),n._enterCb=null}));t.data.show||_e(t,"insert",(function(){var e=n.parentNode,r=e&&e._pending&&e._pending[t.key];r&&r.tag===t.tag&&r.elm._leaveCb&&r.elm._leaveCb(),N&&N(n,B)})),R&&R(n),O&&(Ps(n,C),Ps(n,I),Ds((function(){Os(n,C),B.cancelled||(Ps(n,k),F||(Hs(P)?setTimeout(B,P):Fs(n,o,B)))}))),t.data.show&&(e&&e(),N&&N(n,B)),O||F||B()}}}function Vs(t,e){var n=t.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var s=Ms(t.data.transition);if(r(s)||1!==n.nodeType)return e();if(!i(n._leaveCb)){var a=s.css,o=s.type,u=s.leaveClass,c=s.leaveToClass,h=s.leaveActiveClass,d=s.beforeLeave,p=s.leave,f=s.afterLeave,g=s.leaveCancelled,y=s.delayLeave,x=s.duration,v=!1!==a&&!et,b=Ws(p),w=m(l(x)?x.leave:x);0;var _=n._leaveCb=z((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[t.key]=null),v&&(Os(n,c),Os(n,h)),_.cancelled?(v&&Os(n,u),g&&g(n)):(e(),f&&f(n)),n._leaveCb=null}));y?y(S):S()}function S(){_.cancelled||(!t.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[t.key]=t),d&&d(n),v&&(Ps(n,u),Ps(n,h),Ds((function(){Os(n,u),_.cancelled||(Ps(n,c),b||(Hs(w)?setTimeout(_,w):Fs(n,o,_)))}))),p&&p(n,_),v||b||_())}}function Hs(t){return"number"===typeof t&&!isNaN(t)}function Ws(t){if(r(t))return!1;var e=t.fns;return i(e)?Ws(Array.isArray(e)?e[0]:e):(t._length||t.length)>1}function Gs(t,e){!0!==e.data.show&&qs(e)}var js=K?{create:Gs,activate:Gs,remove:function(t,e){!0!==t.data.show?Vs(t,e):e()}}:{},Xs=[Hi,ji,rs,ls,bs,js],Ys=Xs.concat(Ui),Ks=Ni({nodeOps:Mi,modules:Ys});et&&document.addEventListener("selectionchange",(function(){var t=document.activeElement;t&&t.vmodel&&ia(t,"input")}));var Js={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?_e(n,"postpatch",(function(){Js.componentUpdated(t,e,n)})):Zs(t,e,n.context),t._vOptions=[].map.call(t.options,ea)):("textarea"===n.tag||ci(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",na),t.addEventListener("compositionend",ra),t.addEventListener("change",ra),et&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){Zs(t,e,n.context);var r=t._vOptions,i=t._vOptions=[].map.call(t.options,ea);if(i.some((function(t,e){return!O(t,r[e])}))){var s=t.multiple?e.value.some((function(t){return ta(t,i)})):e.value!==e.oldValue&&ta(e.value,i);s&&ia(t,"change")}}}};function Zs(t,e,n){Qs(t,e,n),(tt||nt)&&setTimeout((function(){Qs(t,e,n)}),0)}function Qs(t,e,n){var r=e.value,i=t.multiple;if(!i||Array.isArray(r)){for(var s,a,o=0,l=t.options.length;o<l;o++)if(a=t.options[o],i)s=F(r,ea(a))>-1,a.selected!==s&&(a.selected=s);else if(O(ea(a),r))return void(t.selectedIndex!==o&&(t.selectedIndex=o));i||(t.selectedIndex=-1)}}function ta(t,e){return e.every((function(e){return!O(e,t)}))}function ea(t){return"_value"in t?t._value:t.value}function na(t){t.target.composing=!0}function ra(t){t.target.composing&&(t.target.composing=!1,ia(t.target,"input"))}function ia(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function sa(t){return!t.componentInstance||t.data&&t.data.transition?t:sa(t.componentInstance._vnode)}var aa={bind:function(t,e,n){var r=e.value;n=sa(n);var i=n.data&&n.data.transition,s=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&i?(n.data.show=!0,qs(n,(function(){t.style.display=s}))):t.style.display=r?s:"none"},update:function(t,e,n){var r=e.value,i=e.oldValue;if(!r!==!i){n=sa(n);var s=n.data&&n.data.transition;s?(n.data.show=!0,r?qs(n,(function(){t.style.display=t.__vOriginalDisplay})):Vs(n,(function(){t.style.display="none"}))):t.style.display=r?t.__vOriginalDisplay:"none"}},unbind:function(t,e,n,r,i){i||(t.style.display=t.__vOriginalDisplay)}},oa={model:Js,show:aa},la={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ua(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?ua(Mn(e.children)):t}function ca(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var i=n._parentListeners;for(var s in i)e[S(s)]=i[s];return e}function ha(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}function da(t){while(t=t.parent)if(t.data.transition)return!0}function pa(t,e){return e.key===t.key&&e.tag===t.tag}var fa=function(t){return t.tag||De(t)},ma=function(t){return"show"===t.name},ga={name:"transition",props:la,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(fa),n.length)){0;var r=this.mode;0;var i=n[0];if(da(this.$vnode))return i;var s=ua(i);if(!s)return i;if(this._leaving)return ha(t,i);var a="__transition-"+this._uid+"-";s.key=null==s.key?s.isComment?a+"comment":a+s.tag:o(s.key)?0===String(s.key).indexOf(a)?s.key:a+s.key:s.key;var l=(s.data||(s.data={})).transition=ca(this),u=this._vnode,c=ua(u);if(s.data.directives&&s.data.directives.some(ma)&&(s.data.show=!0),c&&c.data&&!pa(s,c)&&!De(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var h=c.data.transition=R({},l);if("out-in"===r)return this._leaving=!0,_e(h,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),ha(t,i);if("in-out"===r){if(De(s))return u;var d,p=function(){d()};_e(l,"afterEnter",p),_e(l,"enterCancelled",p),_e(h,"delayLeave",(function(t){d=t}))}}return i}}},ya=R({tag:String,moveClass:String},la);delete ya.mode;var xa={props:ya,beforeMount:function(){var t=this,e=this._update;this._update=function(n,r){var i=Nn(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,i(),e.call(t,n,r)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],a=ca(this),o=0;o<i.length;o++){var l=i[o];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))s.push(l),n[l.key]=l,(l.data||(l.data={})).transition=a;else;}if(r){for(var u=[],c=[],h=0;h<r.length;h++){var d=r[h];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?u.push(d):c.push(d)}this.kept=t(e,null,u),this.removed=c}return t(e,null,s)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(va),t.forEach(ba),t.forEach(wa),this._reflow=document.body.offsetHeight,t.forEach((function(t){if(t.data.moved){var n=t.elm,r=n.style;Ps(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(ks,n._moveCb=function t(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(ks,t),n._moveCb=null,Os(n,e))})}})))},methods:{hasMove:function(t,e){if(!Es)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach((function(t){Ss(n,t)})),_s(n,e),n.style.display="none",this.$el.appendChild(n);var r=Bs(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}};function va(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function ba(t){t.data.newPos=t.elm.getBoundingClientRect()}function wa(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,i=e.top-n.top;if(r||i){t.data.moved=!0;var s=t.elm.style;s.transform=s.WebkitTransform="translate("+r+"px,"+i+"px)",s.transitionDuration="0s"}}var _a={Transition:ga,TransitionGroup:xa};Mr.config.mustUseProp=$r,Mr.config.isReservedTag=ai,Mr.config.isReservedAttr=Br,Mr.config.getTagNamespace=oi,Mr.config.isUnknownElement=ui,R(Mr.options.directives,oa),R(Mr.options.components,_a),Mr.prototype.__patch__=K?Ks:L,Mr.prototype.$mount=function(t,e){return t=t&&K?hi(t):void 0,Pn(this,t,e)},K&&setTimeout((function(){q.devtools&&ut&&ut.emit("init",Mr)}),0),e["a"]=Mr}).call(this,n("c8ba"))},"2ba4":function(t,e,n){var r=n("40d5"),i=Function.prototype,s=i.apply,a=i.call;t.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(s):function(){return a.apply(s,arguments)})},"2cf4":function(t,e,n){var r,i,s,a,o=n("da84"),l=n("2ba4"),u=n("0366"),c=n("1626"),h=n("1a2d"),d=n("d039"),p=n("1be4"),f=n("f36a"),m=n("cc12"),g=n("d6d6"),y=n("1cdc"),x=n("605d"),v=o.setImmediate,b=o.clearImmediate,w=o.process,_=o.Dispatch,S=o.Function,M=o.MessageChannel,T=o.String,E=0,A={},C="onreadystatechange";try{r=o.location}catch(L){}var I=function(t){if(h(A,t)){var e=A[t];delete A[t],e()}},k=function(t){return function(){I(t)}},R=function(t){I(t.data)},N=function(t){o.postMessage(T(t),r.protocol+"//"+r.host)};v&&b||(v=function(t){g(arguments.length,1);var e=c(t)?t:S(t),n=f(arguments,1);return A[++E]=function(){l(e,void 0,n)},i(E),E},b=function(t){delete A[t]},x?i=function(t){w.nextTick(k(t))}:_&&_.now?i=function(t){_.now(k(t))}:M&&!y?(s=new M,a=s.port2,s.port1.onmessage=R,i=u(a.postMessage,a)):o.addEventListener&&c(o.postMessage)&&!o.importScripts&&r&&"file:"!==r.protocol&&!d(N)?(i=N,o.addEventListener("message",R,!1)):i=C in m("script")?function(t){p.appendChild(m("script"))[C]=function(){p.removeChild(this),I(t)}}:function(t){setTimeout(k(t),0)}),t.exports={set:v,clear:b}},"2d00":function(t,e,n){var r,i,s=n("da84"),a=n("342f"),o=s.process,l=s.Deno,u=o&&o.versions||l&&l.version,c=u&&u.v8;c&&(r=c.split("."),i=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!i&&a&&(r=a.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/),r&&(i=+r[1]))),t.exports=i},"2f62":function(t,e,n){"use strict";(function(t){
/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */
function n(t){var e=Number(t.version.split(".")[0]);if(e>=2)t.mixin({beforeCreate:r});else{var n=t.prototype._init;t.prototype._init=function(t){void 0===t&&(t={}),t.init=t.init?[r].concat(t.init):r,n.call(this,t)}}function r(){var t=this.$options;t.store?this.$store="function"===typeof t.store?t.store():t.store:t.parent&&t.parent.$store&&(this.$store=t.parent.$store)}}var r="undefined"!==typeof window?window:"undefined"!==typeof t?t:{},i=r.__VUE_DEVTOOLS_GLOBAL_HOOK__;function s(t){i&&(t._devtoolHook=i,i.emit("vuex:init",t),i.on("vuex:travel-to-state",(function(e){t.replaceState(e)})),t.subscribe((function(t,e){i.emit("vuex:mutation",t,e)}),{prepend:!0}),t.subscribeAction((function(t,e){i.emit("vuex:action",t,e)}),{prepend:!0}))}function a(t,e){return t.filter(e)[0]}function o(t,e){if(void 0===e&&(e=[]),null===t||"object"!==typeof t)return t;var n=a(e,(function(e){return e.original===t}));if(n)return n.copy;var r=Array.isArray(t)?[]:{};return e.push({original:t,copy:r}),Object.keys(t).forEach((function(n){r[n]=o(t[n],e)})),r}function l(t,e){Object.keys(t).forEach((function(n){return e(t[n],n)}))}function u(t){return null!==t&&"object"===typeof t}function c(t){return t&&"function"===typeof t.then}function h(t,e){return function(){return t(e)}}var d=function(t,e){this.runtime=e,this._children=Object.create(null),this._rawModule=t;var n=t.state;this.state=("function"===typeof n?n():n)||{}},p={namespaced:{configurable:!0}};p.namespaced.get=function(){return!!this._rawModule.namespaced},d.prototype.addChild=function(t,e){this._children[t]=e},d.prototype.removeChild=function(t){delete this._children[t]},d.prototype.getChild=function(t){return this._children[t]},d.prototype.hasChild=function(t){return t in this._children},d.prototype.update=function(t){this._rawModule.namespaced=t.namespaced,t.actions&&(this._rawModule.actions=t.actions),t.mutations&&(this._rawModule.mutations=t.mutations),t.getters&&(this._rawModule.getters=t.getters)},d.prototype.forEachChild=function(t){l(this._children,t)},d.prototype.forEachGetter=function(t){this._rawModule.getters&&l(this._rawModule.getters,t)},d.prototype.forEachAction=function(t){this._rawModule.actions&&l(this._rawModule.actions,t)},d.prototype.forEachMutation=function(t){this._rawModule.mutations&&l(this._rawModule.mutations,t)},Object.defineProperties(d.prototype,p);var f=function(t){this.register([],t,!1)};function m(t,e,n){if(e.update(n),n.modules)for(var r in n.modules){if(!e.getChild(r))return void 0;m(t.concat(r),e.getChild(r),n.modules[r])}}f.prototype.get=function(t){return t.reduce((function(t,e){return t.getChild(e)}),this.root)},f.prototype.getNamespace=function(t){var e=this.root;return t.reduce((function(t,n){return e=e.getChild(n),t+(e.namespaced?n+"/":"")}),"")},f.prototype.update=function(t){m([],this.root,t)},f.prototype.register=function(t,e,n){var r=this;void 0===n&&(n=!0);var i=new d(e,n);if(0===t.length)this.root=i;else{var s=this.get(t.slice(0,-1));s.addChild(t[t.length-1],i)}e.modules&&l(e.modules,(function(e,i){r.register(t.concat(i),e,n)}))},f.prototype.unregister=function(t){var e=this.get(t.slice(0,-1)),n=t[t.length-1],r=e.getChild(n);r&&r.runtime&&e.removeChild(n)},f.prototype.isRegistered=function(t){var e=this.get(t.slice(0,-1)),n=t[t.length-1];return!!e&&e.hasChild(n)};var g;var y=function(t){var e=this;void 0===t&&(t={}),!g&&"undefined"!==typeof window&&window.Vue&&R(window.Vue);var n=t.plugins;void 0===n&&(n=[]);var r=t.strict;void 0===r&&(r=!1),this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new f(t),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._watcherVM=new g,this._makeLocalGettersCache=Object.create(null);var i=this,a=this,o=a.dispatch,l=a.commit;this.dispatch=function(t,e){return o.call(i,t,e)},this.commit=function(t,e,n){return l.call(i,t,e,n)},this.strict=r;var u=this._modules.root.state;_(this,u,[],this._modules.root),w(this,u),n.forEach((function(t){return t(e)}));var c=void 0!==t.devtools?t.devtools:g.config.devtools;c&&s(this)},x={state:{configurable:!0}};function v(t,e,n){return e.indexOf(t)<0&&(n&&n.prepend?e.unshift(t):e.push(t)),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}function b(t,e){t._actions=Object.create(null),t._mutations=Object.create(null),t._wrappedGetters=Object.create(null),t._modulesNamespaceMap=Object.create(null);var n=t.state;_(t,n,[],t._modules.root,!0),w(t,n,e)}function w(t,e,n){var r=t._vm;t.getters={},t._makeLocalGettersCache=Object.create(null);var i=t._wrappedGetters,s={};l(i,(function(e,n){s[n]=h(e,t),Object.defineProperty(t.getters,n,{get:function(){return t._vm[n]},enumerable:!0})}));var a=g.config.silent;g.config.silent=!0,t._vm=new g({data:{$$state:e},computed:s}),g.config.silent=a,t.strict&&C(t),r&&(n&&t._withCommit((function(){r._data.$$state=null})),g.nextTick((function(){return r.$destroy()})))}function _(t,e,n,r,i){var s=!n.length,a=t._modules.getNamespace(n);if(r.namespaced&&(t._modulesNamespaceMap[a],t._modulesNamespaceMap[a]=r),!s&&!i){var o=I(e,n.slice(0,-1)),l=n[n.length-1];t._withCommit((function(){g.set(o,l,r.state)}))}var u=r.context=S(t,a,n);r.forEachMutation((function(e,n){var r=a+n;T(t,r,e,u)})),r.forEachAction((function(e,n){var r=e.root?n:a+n,i=e.handler||e;E(t,r,i,u)})),r.forEachGetter((function(e,n){var r=a+n;A(t,r,e,u)})),r.forEachChild((function(r,s){_(t,e,n.concat(s),r,i)}))}function S(t,e,n){var r=""===e,i={dispatch:r?t.dispatch:function(n,r,i){var s=k(n,r,i),a=s.payload,o=s.options,l=s.type;return o&&o.root||(l=e+l),t.dispatch(l,a)},commit:r?t.commit:function(n,r,i){var s=k(n,r,i),a=s.payload,o=s.options,l=s.type;o&&o.root||(l=e+l),t.commit(l,a,o)}};return Object.defineProperties(i,{getters:{get:r?function(){return t.getters}:function(){return M(t,e)}},state:{get:function(){return I(t.state,n)}}}),i}function M(t,e){if(!t._makeLocalGettersCache[e]){var n={},r=e.length;Object.keys(t.getters).forEach((function(i){if(i.slice(0,r)===e){var s=i.slice(r);Object.defineProperty(n,s,{get:function(){return t.getters[i]},enumerable:!0})}})),t._makeLocalGettersCache[e]=n}return t._makeLocalGettersCache[e]}function T(t,e,n,r){var i=t._mutations[e]||(t._mutations[e]=[]);i.push((function(e){n.call(t,r.state,e)}))}function E(t,e,n,r){var i=t._actions[e]||(t._actions[e]=[]);i.push((function(e){var i=n.call(t,{dispatch:r.dispatch,commit:r.commit,getters:r.getters,state:r.state,rootGetters:t.getters,rootState:t.state},e);return c(i)||(i=Promise.resolve(i)),t._devtoolHook?i.catch((function(e){throw t._devtoolHook.emit("vuex:error",e),e})):i}))}function A(t,e,n,r){t._wrappedGetters[e]||(t._wrappedGetters[e]=function(t){return n(r.state,r.getters,t.state,t.getters)})}function C(t){t._vm.$watch((function(){return this._data.$$state}),(function(){0}),{deep:!0,sync:!0})}function I(t,e){return e.reduce((function(t,e){return t[e]}),t)}function k(t,e,n){return u(t)&&t.type&&(n=e,e=t,t=t.type),{type:t,payload:e,options:n}}function R(t){g&&t===g||(g=t,n(g))}x.state.get=function(){return this._vm._data.$$state},x.state.set=function(t){0},y.prototype.commit=function(t,e,n){var r=this,i=k(t,e,n),s=i.type,a=i.payload,o=(i.options,{type:s,payload:a}),l=this._mutations[s];l&&(this._withCommit((function(){l.forEach((function(t){t(a)}))})),this._subscribers.slice().forEach((function(t){return t(o,r.state)})))},y.prototype.dispatch=function(t,e){var n=this,r=k(t,e),i=r.type,s=r.payload,a={type:i,payload:s},o=this._actions[i];if(o){try{this._actionSubscribers.slice().filter((function(t){return t.before})).forEach((function(t){return t.before(a,n.state)}))}catch(u){0}var l=o.length>1?Promise.all(o.map((function(t){return t(s)}))):o[0](s);return new Promise((function(t,e){l.then((function(e){try{n._actionSubscribers.filter((function(t){return t.after})).forEach((function(t){return t.after(a,n.state)}))}catch(u){0}t(e)}),(function(t){try{n._actionSubscribers.filter((function(t){return t.error})).forEach((function(e){return e.error(a,n.state,t)}))}catch(u){0}e(t)}))}))}},y.prototype.subscribe=function(t,e){return v(t,this._subscribers,e)},y.prototype.subscribeAction=function(t,e){var n="function"===typeof t?{before:t}:t;return v(n,this._actionSubscribers,e)},y.prototype.watch=function(t,e,n){var r=this;return this._watcherVM.$watch((function(){return t(r.state,r.getters)}),e,n)},y.prototype.replaceState=function(t){var e=this;this._withCommit((function(){e._vm._data.$$state=t}))},y.prototype.registerModule=function(t,e,n){void 0===n&&(n={}),"string"===typeof t&&(t=[t]),this._modules.register(t,e),_(this,this.state,t,this._modules.get(t),n.preserveState),w(this,this.state)},y.prototype.unregisterModule=function(t){var e=this;"string"===typeof t&&(t=[t]),this._modules.unregister(t),this._withCommit((function(){var n=I(e.state,t.slice(0,-1));g.delete(n,t[t.length-1])})),b(this)},y.prototype.hasModule=function(t){return"string"===typeof t&&(t=[t]),this._modules.isRegistered(t)},y.prototype.hotUpdate=function(t){this._modules.update(t),b(this,!0)},y.prototype._withCommit=function(t){var e=this._committing;this._committing=!0,t(),this._committing=e},Object.defineProperties(y.prototype,x);var N=B((function(t,e){var n={};return F(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){var e=this.$store.state,n=this.$store.getters;if(t){var r=U(this.$store,"mapState",t);if(!r)return;e=r.context.state,n=r.context.getters}return"function"===typeof i?i.call(this,e,n):e[i]},n[r].vuex=!0})),n})),L=B((function(t,e){var n={};return F(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){var e=[],n=arguments.length;while(n--)e[n]=arguments[n];var r=this.$store.commit;if(t){var s=U(this.$store,"mapMutations",t);if(!s)return;r=s.context.commit}return"function"===typeof i?i.apply(this,[r].concat(e)):r.apply(this.$store,[i].concat(e))}})),n})),D=B((function(t,e){var n={};return F(e).forEach((function(e){var r=e.key,i=e.val;i=t+i,n[r]=function(){if(!t||U(this.$store,"mapGetters",t))return this.$store.getters[i]},n[r].vuex=!0})),n})),P=B((function(t,e){var n={};return F(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){var e=[],n=arguments.length;while(n--)e[n]=arguments[n];var r=this.$store.dispatch;if(t){var s=U(this.$store,"mapActions",t);if(!s)return;r=s.context.dispatch}return"function"===typeof i?i.apply(this,[r].concat(e)):r.apply(this.$store,[i].concat(e))}})),n})),O=function(t){return{mapState:N.bind(null,t),mapGetters:D.bind(null,t),mapMutations:L.bind(null,t),mapActions:P.bind(null,t)}};function F(t){return z(t)?Array.isArray(t)?t.map((function(t){return{key:t,val:t}})):Object.keys(t).map((function(e){return{key:e,val:t[e]}})):[]}function z(t){return Array.isArray(t)||u(t)}function B(t){return function(e,n){return"string"!==typeof e?(n=e,e=""):"/"!==e.charAt(e.length-1)&&(e+="/"),t(e,n)}}function U(t,e,n){var r=t._modulesNamespaceMap[n];return r}function $(t){void 0===t&&(t={});var e=t.collapsed;void 0===e&&(e=!0);var n=t.filter;void 0===n&&(n=function(t,e,n){return!0});var r=t.transformer;void 0===r&&(r=function(t){return t});var i=t.mutationTransformer;void 0===i&&(i=function(t){return t});var s=t.actionFilter;void 0===s&&(s=function(t,e){return!0});var a=t.actionTransformer;void 0===a&&(a=function(t){return t});var l=t.logMutations;void 0===l&&(l=!0);var u=t.logActions;void 0===u&&(u=!0);var c=t.logger;return void 0===c&&(c=console),function(t){var h=o(t.state);"undefined"!==typeof c&&(l&&t.subscribe((function(t,s){var a=o(s);if(n(t,h,a)){var l=H(),u=i(t),d="mutation "+t.type+l;q(c,d,e),c.log("%c prev state","color: #9E9E9E; font-weight: bold",r(h)),c.log("%c mutation","color: #03A9F4; font-weight: bold",u),c.log("%c next state","color: #4CAF50; font-weight: bold",r(a)),V(c)}h=a})),u&&t.subscribeAction((function(t,n){if(s(t,n)){var r=H(),i=a(t),o="action "+t.type+r;q(c,o,e),c.log("%c action","color: #03A9F4; font-weight: bold",i),V(c)}})))}}function q(t,e,n){var r=n?t.groupCollapsed:t.group;try{r.call(t,e)}catch(i){t.log(e)}}function V(t){try{t.groupEnd()}catch(e){t.log("—— log end ——")}}function H(){var t=new Date;return" @ "+G(t.getHours(),2)+":"+G(t.getMinutes(),2)+":"+G(t.getSeconds(),2)+"."+G(t.getMilliseconds(),3)}function W(t,e){return new Array(e+1).join(t)}function G(t,e){return W("0",e-t.toString().length)+t}var j={Store:y,install:R,version:"3.6.2",mapState:N,mapMutations:L,mapGetters:D,mapActions:P,createNamespacedHelpers:O,createLogger:$};e["a"]=j}).call(this,n("c8ba"))},"342f":function(t,e,n){var r=n("d066");t.exports=r("navigator","userAgent")||""},"35a1":function(t,e,n){var r=n("f5df"),i=n("dc4a"),s=n("3f8c"),a=n("b622"),o=a("iterator");t.exports=function(t){if(void 0!=t)return i(t,o)||i(t,"@@iterator")||s[r(t)]}},"37e8":function(t,e,n){var r=n("83ab"),i=n("aed9"),s=n("9bf2"),a=n("825a"),o=n("fc6a"),l=n("df75");e.f=r&&!i?Object.defineProperties:function(t,e){a(t);var n,r=o(e),i=l(e),u=i.length,c=0;while(u>c)s.f(t,n=i[c++],r[n]);return t}},"3a9b":function(t,e,n){var r=n("e330");t.exports=r({}.isPrototypeOf)},"3bbe":function(t,e,n){var r=n("da84"),i=n("1626"),s=r.String,a=r.TypeError;t.exports=function(t){if("object"==typeof t||i(t))return t;throw a("Can't set "+s(t)+" as a prototype")}},"3f8c":function(t,e){t.exports={}},"40d5":function(t,e,n){var r=n("d039");t.exports=!r((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},4362:function(t,e,n){e.nextTick=function(t){var e=Array.prototype.slice.call(arguments);e.shift(),setTimeout((function(){t.apply(null,e)}),0)},e.platform=e.arch=e.execPath=e.title="browser",e.pid=1,e.browser=!0,e.env={},e.argv=[],e.binding=function(t){throw new Error("No such module. (Possibly not yet loaded)")},function(){var t,r="/";e.cwd=function(){return r},e.chdir=function(e){t||(t=n("df7c")),r=t.resolve(e,r)}}(),e.exit=e.kill=e.umask=e.dlopen=e.uptime=e.memoryUsage=e.uvCounters=function(){},e.features={}},"44ad":function(t,e,n){var r=n("da84"),i=n("e330"),s=n("d039"),a=n("c6b6"),o=r.Object,l=i("".split);t.exports=s((function(){return!o("z").propertyIsEnumerable(0)}))?function(t){return"String"==a(t)?l(t,""):o(t)}:o},"44d2":function(t,e,n){var r=n("b622"),i=n("7c73"),s=n("9bf2"),a=r("unscopables"),o=Array.prototype;void 0==o[a]&&s.f(o,a,{configurable:!0,value:i(null)}),t.exports=function(t){o[a][t]=!0}},"44de":function(t,e,n){var r=n("da84");t.exports=function(t,e){var n=r.console;n&&n.error&&(1==arguments.length?n.error(t):n.error(t,e))}},4840:function(t,e,n){var r=n("825a"),i=n("5087"),s=n("b622"),a=s("species");t.exports=function(t,e){var n,s=r(t).constructor;return void 0===s||void 0==(n=r(s)[a])?e:i(n)}},"485a":function(t,e,n){var r=n("da84"),i=n("c65b"),s=n("1626"),a=n("861d"),o=r.TypeError;t.exports=function(t,e){var n,r;if("string"===e&&s(n=t.toString)&&!a(r=i(n,t)))return r;if(s(n=t.valueOf)&&!a(r=i(n,t)))return r;if("string"!==e&&s(n=t.toString)&&!a(r=i(n,t)))return r;throw o("Can't convert object to primitive value")}},4930:function(t,e,n){var r=n("2d00"),i=n("d039");t.exports=!!Object.getOwnPropertySymbols&&!i((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},"4a8d":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("5a89");class i extends r["j"]{constructor(t){super(t)}load(t,e,n,i){const s=this,a=new r["d"](this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(s.withCredentials),a.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(i){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const r=s.parse(n);e&&e(r)}),n,i)}parse(t){return new s(t)}}class s{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],r=a(t,e,this.data);for(let i=0,s=r.length;i<s;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}}function a(t,e,n){const r=Array.from(t),i=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,a=[];let l=0,u=0;for(let c=0;c<r.length;c++){const t=r[c];if("\n"===t)l=0,u-=s;else{const e=o(t,i,l,u,n);l+=e.offsetX,a.push(e.path)}}return a}function o(t,e,n,i,s){const a=s.glyphs[t]||s.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+s.familyName+".");const o=new r["p"];let l,u,c,h,d,p,f,m;if(a.o){const t=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let r=0,s=t.length;r<s;){const s=t[r++];switch(s){case"m":l=t[r++]*e+n,u=t[r++]*e+i,o.moveTo(l,u);break;case"l":l=t[r++]*e+n,u=t[r++]*e+i,o.lineTo(l,u);break;case"q":c=t[r++]*e+n,h=t[r++]*e+i,d=t[r++]*e+n,p=t[r++]*e+i,o.quadraticCurveTo(d,p,c,h);break;case"b":c=t[r++]*e+n,h=t[r++]*e+i,d=t[r++]*e+n,p=t[r++]*e+i,f=t[r++]*e+n,m=t[r++]*e+i,o.bezierCurveTo(d,p,f,m,c,h);break}}}return{offsetX:a.ha*e,path:o}}s.prototype.isFont=!0},"4d64":function(t,e,n){var r=n("fc6a"),i=n("23cb"),s=n("07fa"),a=function(t){return function(e,n,a){var o,l=r(e),u=s(l),c=i(a,u);if(t&&n!=n){while(u>c)if(o=l[c++],o!=o)return!0}else for(;u>c;c++)if((t||c in l)&&l[c]===n)return t||c||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},5087:function(t,e,n){var r=n("da84"),i=n("68ee"),s=n("0d51"),a=r.TypeError;t.exports=function(t){if(i(t))return t;throw a(s(t)+" is not a constructor")}},"50c4":function(t,e,n){var r=n("5926"),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},5692:function(t,e,n){var r=n("c430"),i=n("c6cd");(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.21.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},"56ef":function(t,e,n){var r=n("d066"),i=n("e330"),s=n("241c"),a=n("7418"),o=n("825a"),l=i([].concat);t.exports=r("Reflect","ownKeys")||function(t){var e=s.f(o(t)),n=a.f;return n?l(e,n(t)):e}},"577e":function(t,e,n){var r=n("da84"),i=n("f5df"),s=r.String;t.exports=function(t){if("Symbol"===i(t))throw TypeError("Cannot convert a Symbol value to a string");return s(t)}},5926:function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){var e=+t;return e!==e||0===e?0:(e>0?r:n)(e)}},"598d":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("5a89");class i extends r["c"]{constructor(t,e={}){const n=e.font;if(void 0===n)super();else{const r=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(r,e)}this.type="TextGeometry"}}},"59ed":function(t,e,n){var r=n("da84"),i=n("1626"),s=n("0d51"),a=r.TypeError;t.exports=function(t){if(i(t))return t;throw a(s(t)+" is not a function")}},"5a89":function(t,e,n){"use strict";n.d(e,"a",(function(){return Zr})),n.d(e,"b",(function(){return an})),n.d(e,"c",(function(){return kd})),n.d(e,"d",(function(){return fp})),n.d(e,"e",(function(){return vp})),n.d(e,"f",(function(){return Ld})),n.d(e,"g",(function(){return Yc})),n.d(e,"h",(function(){return nh})),n.d(e,"i",(function(){return Kc})),n.d(e,"j",(function(){return dp})),n.d(e,"k",(function(){return Zn})),n.d(e,"l",(function(){return gi})),n.d(e,"m",(function(){return Ud})),n.d(e,"n",(function(){return Ai})),n.d(e,"o",(function(){return gc})),n.d(e,"p",(function(){return Mf})),n.d(e,"q",(function(){return wn})),n.d(e,"r",(function(){return dc}));
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const r="139",i=0,s=1,a=2,o=1,l=2,u=3,c=0,h=1,d=2,p=1,f=0,m=1,g=2,y=3,x=4,v=5,b=100,w=101,_=102,S=103,M=104,T=200,E=201,A=202,C=203,I=204,k=205,R=206,N=207,L=208,D=209,P=210,O=0,F=1,z=2,B=3,U=4,$=5,q=6,V=7,H=0,W=1,G=2,j=0,X=1,Y=2,K=3,J=4,Z=5,Q=300,tt=301,et=302,nt=303,rt=304,it=306,st=1e3,at=1001,ot=1002,lt=1003,ut=1004,ct=1005,ht=1006,dt=1007,pt=1008,ft=1009,mt=1010,gt=1011,yt=1012,xt=1013,vt=1014,bt=1015,wt=1016,_t=1017,St=1018,Mt=1020,Tt=1021,Et=1022,At=1023,Ct=1024,It=1025,kt=1026,Rt=1027,Nt=1028,Lt=1029,Dt=1030,Pt=1031,Ot=1033,Ft=33776,zt=33777,Bt=33778,Ut=33779,$t=35840,qt=35841,Vt=35842,Ht=35843,Wt=36196,Gt=37492,jt=37496,Xt=37808,Yt=37809,Kt=37810,Jt=37811,Zt=37812,Qt=37813,te=37814,ee=37815,ne=37816,re=37817,ie=37818,se=37819,ae=37820,oe=37821,le=36492,ue=2200,ce=2201,he=2202,de=2300,pe=2301,fe=2302,me=2400,ge=2401,ye=2402,xe=2500,ve=2501,be=0,we=3e3,_e=3001,Se=3200,Me=3201,Te=0,Ee=1,Ae="srgb",Ce="srgb-linear",Ie=7680,ke=519,Re=35044,Ne=35048,Le="300 es",De=1035;class Pe{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners,r=n[t];if(void 0!==r){const t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners,n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,r=e.length;n<r;n++)e[n].call(this,t);t.target=null}}}const Oe=[];for(let Rf=0;Rf<256;Rf++)Oe[Rf]=(Rf<16?"0":"")+Rf.toString(16);const Fe=Math.PI/180,ze=180/Math.PI;function Be(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=Oe[255&t]+Oe[t>>8&255]+Oe[t>>16&255]+Oe[t>>24&255]+"-"+Oe[255&e]+Oe[e>>8&255]+"-"+Oe[e>>16&15|64]+Oe[e>>24&255]+"-"+Oe[63&n|128]+Oe[n>>8&255]+"-"+Oe[n>>16&255]+Oe[n>>24&255]+Oe[255&r]+Oe[r>>8&255]+Oe[r>>16&255]+Oe[r>>24&255];return i.toLowerCase()}function Ue(t,e,n){return Math.max(e,Math.min(n,t))}function $e(t,e){return(t%e+e)%e}function qe(t,e,n){return(1-n)*t+n*e}function Ve(t){return 0===(t&t-1)&&0!==t}function He(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}class We{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const t=Math.atan2(-this.y,-this.x)+Math.PI;return t}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*r+t.x,this.y=i*r+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}We.prototype.isVector2=!0;class Ge{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,a,o,l){const u=this.elements;return u[0]=t,u[1]=r,u[2]=a,u[3]=e,u[4]=i,u[5]=o,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],y=r[1],x=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return i[0]=s*f+a*y+o*b,i[3]=s*m+a*x+o*w,i[6]=s*g+a*v+o*_,i[1]=l*f+u*y+c*b,i[4]=l*m+u*x+c*w,i[7]=l*g+u*v+c*_,i[2]=h*f+d*y+p*b,i[5]=h*m+d*x+p*w,i[8]=h*g+d*v+p*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8];return e*s*u-e*a*l-n*i*u+n*a*o+r*i*l-r*s*o}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=u*s-a*l,h=a*o-u*i,d=l*i-s*o,p=e*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(r*l-u*n)*f,t[2]=(a*n-r*s)*f,t[3]=h*f,t[4]=(u*e-r*o)*f,t[5]=(r*i-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,s,a){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-r*l,r*o,-r*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],s=r[3],a=r[6],o=r[1],l=r[4],u=r[7];return r[0]=e*i+n*o,r[3]=e*s+n*l,r[6]=e*a+n*u,r[1]=-n*i+e*o,r[4]=-n*s+e*l,r[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function je(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}Ge.prototype.isMatrix3=!0;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function Xe(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Ye(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ke(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const Je={[Ae]:{[Ce]:Ye},[Ce]:{[Ae]:Ke}},Ze={legacyMode:!0,get workingColorSpace(){return Ce},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(Je[e]&&void 0!==Je[e][n]){const r=Je[e][n];return t.r=r(t.r),t.g=r(t.g),t.b=r(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Qe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tn={r:0,g:0,b:0},en={h:0,s:0,l:0},nn={h:0,s:0,l:0};function rn(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function sn(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class an{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"===typeof t?this.setHex(t):"string"===typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Ae){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ze.toWorkingColorSpace(this,e),this}setRGB(t,e,n,r=Ce){return this.r=t,this.g=e,this.b=n,Ze.toWorkingColorSpace(this,r),this}setHSL(t,e,n,r=Ce){if(t=$e(t,1),e=Ue(e,0,1),n=Ue(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=rn(i,r,t+1/3),this.g=rn(i,r,t),this.b=rn(i,r,t-1/3)}return Ze.toWorkingColorSpace(this,r),this}setStyle(t,e=Ae){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=r[1],s=r[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,Ze.toWorkingColorSpace(this,e),n(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,Ze.toWorkingColorSpace(this,e),n(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const r=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,s=parseInt(t[3],10)/100;return n(t[4]),this.setHSL(r,i,s,e)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=r[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,Ze.toWorkingColorSpace(this,e),this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,Ze.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Ae){const n=Qe[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ye(t.r),this.g=Ye(t.g),this.b=Ye(t.b),this}copyLinearToSRGB(t){return this.r=Ke(t.r),this.g=Ke(t.g),this.b=Ke(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Ae){return Ze.fromWorkingColorSpace(sn(this,tn),t),Ue(255*tn.r,0,255)<<16^Ue(255*tn.g,0,255)<<8^Ue(255*tn.b,0,255)<<0}getHexString(t=Ae){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ce){Ze.fromWorkingColorSpace(sn(this,tn),e);const n=tn.r,r=tn.g,i=tn.b,s=Math.max(n,r,i),a=Math.min(n,r,i);let o,l;const u=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=u<=.5?t/(s+a):t/(2-s-a),s){case n:o=(r-i)/t+(r<i?6:0);break;case r:o=(i-n)/t+2;break;case i:o=(n-r)/t+4;break}o/=6}return t.h=o,t.s=l,t.l=u,t}getRGB(t,e=Ce){return Ze.fromWorkingColorSpace(sn(this,tn),e),t.r=tn.r,t.g=tn.g,t.b=tn.b,t}getStyle(t=Ae){return Ze.fromWorkingColorSpace(sn(this,tn),t),t!==Ae?`color(${t} ${tn.r} ${tn.g} ${tn.b})`:`rgb(${255*tn.r|0},${255*tn.g|0},${255*tn.b|0})`}offsetHSL(t,e,n){return this.getHSL(en),en.h+=t,en.s+=e,en.l+=n,this.setHSL(en.h,en.s,en.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(en),t.getHSL(nn);const n=qe(en.h,nn.h,e),r=qe(en.s,nn.s,e),i=qe(en.l,nn.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}let on;an.NAMES=Qe,an.prototype.isColor=!0,an.prototype.r=1,an.prototype.g=1,an.prototype.b=1;class ln{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===on&&(on=Xe("canvas")),on.width=t.width,on.height=t.height;const n=on.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=on}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const e=Xe("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const r=n.getImageData(0,0,t.width,t.height),i=r.data;for(let t=0;t<i.length;t++)i[t]=255*Ye(i[t]/255);return n.putImageData(r,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ye(e[t]/255)):e[t]=Ye(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class un{constructor(t=null){this.uuid=Be(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(cn(r[e].image)):t.push(cn(r[e]))}else t=cn(r);n.url=t}return e||(t.images[this.uuid]=n),n}}function cn(t){return"undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap?ln.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}un.prototype.isSource=!0;let hn=0;class dn extends Pe{constructor(t=dn.DEFAULT_IMAGE,e=dn.DEFAULT_MAPPING,n=at,r=at,i=ht,s=pt,a=At,o=ft,l=1,u=we){super(),Object.defineProperty(this,"id",{value:hn++}),this.uuid=Be(),this.name="",this.source=new un(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new We(0,0),this.repeat=new We(1,1),this.center=new We(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ge,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Q)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case st:t.x=t.x-Math.floor(t.x);break;case at:t.x=t.x<0?0:1;break;case ot:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case st:t.y=t.y-Math.floor(t.y);break;case at:t.y=t.y<0?0:1;break;case ot:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}dn.DEFAULT_IMAGE=null,dn.DEFAULT_MAPPING=Q,dn.prototype.isTexture=!0;class pn{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*e+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*e+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*e+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const s=.01,a=.1,o=t.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-f)<s&&Math.abs(p-m)<s){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,y=(g+1)/2,x=(u+h)/4,v=(c+f)/4,b=(p+m)/4;return t>o&&t>y?t<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=x/n,i=v/n):o>y?o<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=x/r,i=b/r):y<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(y),n=v/i,r=b/i),this.set(n,r,i,e),this}let y=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(c-f)/y,this.z=(h-u)/y,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}pn.prototype.isVector4=!0;class fn extends Pe{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new pn(0,0,t,e),this.scissorTest=!1,this.viewport=new pn(0,0,t,e);const r={width:t,height:e,depth:1};this.texture=new dn(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ht,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},t.texture.image),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}fn.prototype.isWebGLRenderTarget=!0;class mn extends dn{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=lt,this.minFilter=lt,this.wrapR=at,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}mn.prototype.isDataArrayTexture=!0;class gn extends fn{constructor(t,e,n){super(t,e),this.depth=n,this.texture=new mn(null,t,e,n),this.texture.isRenderTargetTexture=!0}}gn.prototype.isWebGLArrayRenderTarget=!0;class yn extends dn{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=lt,this.minFilter=lt,this.wrapR=at,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}yn.prototype.isData3DTexture=!0;class xn extends fn{constructor(t,e,n){super(t,e),this.depth=n,this.texture=new yn(null,t,e,n),this.texture.isRenderTargetTexture=!0}}xn.prototype.isWebGL3DRenderTarget=!0;class vn extends fn{constructor(t,e,n,r={}){super(t,e,r);const i=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=i.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=t,this.texture[r].image.height=e,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}vn.prototype.isWebGLMultipleRenderTargets=!0;class bn{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,i,s,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=u,void(t[e+3]=c);if(1===a)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(c!==f||o!==h||l!==d||u!==p){let t=1-a;const e=o*h+l*d+u*p+c*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,a=Math.sin(a*s)/i}const i=a*n;if(o=o*t+h*i,l=l*t+d*i,u=u*t+p*i,c=c*t+f*i,t===1-a){const t=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=t,l*=t,u*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=u,t[e+3]=c}static multiplyQuaternionsFlat(t,e,n,r,i,s){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[s],h=i[s+1],d=i[s+2],p=i[s+3];return t[e]=a*p+u*c+o*d-l*h,t[e+1]=o*p+u*h+l*c-a*d,t[e+2]=l*p+u*d+a*h-o*c,t[e+3]=u*p-a*c-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],s=e[1],a=e[5],o=e[9],l=e[2],u=e[6],c=e[10],h=n+a+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(u-o)*t,this._y=(i-l)*t,this._z=(s-r)*t}else if(n>a&&n>c){const t=2*Math.sqrt(1+n-a-c);this._w=(u-o)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(i+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-n-c);this._w=(i-l)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(o+u)/t}else{const t=2*Math.sqrt(1+c-n-a);this._w=(s-r)/t,this._x=(i+l)/t,this._y=(o+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ue(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,s=t._w,a=e._x,o=e._y,l=e._z,u=e._w;return this._x=n*u+s*a+r*l-i*o,this._y=r*u+s*o+i*a-n*l,this._z=i*u+s*l+n*o-r*a,this._w=s*u-n*a-r*o-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,s=this._w;let a=s*t._w+n*t._x+r*t._y+i*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-e)*u)/l,h=Math.sin(e*u)/l;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(i),n*Math.cos(i),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}bn.prototype.isQuaternion=!0;class wn{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Sn.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Sn.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*r-a*n,u=o*n+a*e-i*r,c=o*r+i*n-s*e,h=-i*e-s*n-a*r;return this.x=l*o+h*-i+u*-a-c*-s,this.y=u*o+h*-s+c*-i-l*-a,this.z=c*o+h*-a+l*-s-u*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return _n.copy(this).projectOnVector(t),this.sub(_n)}reflect(t){return this.sub(_n.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ue(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}wn.prototype.isVector3=!0;const _n=new wn,Sn=new bn;class Mn{constructor(t=new wn(1/0,1/0,1/0),e=new wn(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],u=t[o+1],c=t[o+2];l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),u=t.getY(o),c=t.getZ(o);l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=En.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n)if(e&&void 0!=n.attributes&&void 0!==n.attributes.position){const e=n.attributes.position;for(let n=0,r=e.count;n<r;n++)En.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),this.expandByPoint(En)}else null===n.boundingBox&&n.computeBoundingBox(),An.copy(n.boundingBox),An.applyMatrix4(t.matrixWorld),this.union(An);const r=t.children;for(let i=0,s=r.length;i<s;i++)this.expandByObject(r[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,En),En.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Dn),Pn.subVectors(this.max,Dn),Cn.subVectors(t.a,Dn),In.subVectors(t.b,Dn),kn.subVectors(t.c,Dn),Rn.subVectors(In,Cn),Nn.subVectors(kn,In),Ln.subVectors(Cn,kn);let e=[0,-Rn.z,Rn.y,0,-Nn.z,Nn.y,0,-Ln.z,Ln.y,Rn.z,0,-Rn.x,Nn.z,0,-Nn.x,Ln.z,0,-Ln.x,-Rn.y,Rn.x,0,-Nn.y,Nn.x,0,-Ln.y,Ln.x,0];return!!zn(e,Cn,In,kn,Pn)&&(e=[1,0,0,0,1,0,0,0,1],!!zn(e,Cn,In,kn,Pn)&&(On.crossVectors(Rn,Nn),e=[On.x,On.y,On.z],zn(e,Cn,In,kn,Pn)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){const e=En.copy(t).clamp(this.min,this.max);return e.sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(En).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Tn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Tn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Tn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Tn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Tn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Tn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Tn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Tn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Tn)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Mn.prototype.isBox3=!0;const Tn=[new wn,new wn,new wn,new wn,new wn,new wn,new wn,new wn],En=new wn,An=new Mn,Cn=new wn,In=new wn,kn=new wn,Rn=new wn,Nn=new wn,Ln=new wn,Dn=new wn,Pn=new wn,On=new wn,Fn=new wn;function zn(t,e,n,r,i){for(let s=0,a=t.length-3;s<=a;s+=3){Fn.fromArray(t,s);const a=i.x*Math.abs(Fn.x)+i.y*Math.abs(Fn.y)+i.z*Math.abs(Fn.z),o=e.dot(Fn),l=n.dot(Fn),u=r.dot(Fn);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const Bn=new Mn,Un=new wn,$n=new wn,qn=new wn;class Vn{constructor(t=new wn,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Bn.setFromPoints(t).getCenter(n);let r=0;for(let i=0,s=t.length;i<s;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){qn.subVectors(t,this.center);const e=qn.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(qn.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?$n.set(0,0,1).multiplyScalar(t.radius):$n.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Un.copy(t.center).add($n)),this.expandByPoint(Un.copy(t.center).sub($n)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Hn=new wn,Wn=new wn,Gn=new wn,jn=new wn,Xn=new wn,Yn=new wn,Kn=new wn;class Jn{constructor(t=new wn,e=new wn(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Hn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Hn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Hn.copy(this.direction).multiplyScalar(e).add(this.origin),Hn.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){Wn.copy(t).add(e).multiplyScalar(.5),Gn.copy(e).sub(t).normalize(),jn.copy(this.origin).sub(Wn);const i=.5*t.distanceTo(e),s=-this.direction.dot(Gn),a=jn.dot(this.direction),o=-jn.dot(Gn),l=jn.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=i*u,c>=0)if(h>=-p)if(h<=p){const t=1/u;c*=t,h*=t,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*i+a)),h=c>0?-i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(c=Math.max(0,-(s*i+a)),h=c>0?i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l);else h=s>0?-i:i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(Gn).multiplyScalar(h).add(Wn),d}intersectSphere(t,e){Hn.subVectors(t.center,this.origin);const n=Hn.dot(this.direction),r=Hn.dot(Hn)-n*n,i=t.radius*t.radius;if(r>i)return null;const s=Math.sqrt(i-r),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;const n=t.normal.dot(this.direction);return n*e<0}intersectBox(t,e){let n,r,i,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,r=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,r=(t.min.x-h.x)*l),u>=0?(i=(t.min.y-h.y)*u,s=(t.max.y-h.y)*u):(i=(t.max.y-h.y)*u,s=(t.min.y-h.y)*u),n>s||i>r?null:((i>n||n!==n)&&(n=i),(s<r||r!==r)&&(r=s),c>=0?(a=(t.min.z-h.z)*c,o=(t.max.z-h.z)*c):(a=(t.max.z-h.z)*c,o=(t.min.z-h.z)*c),n>o||a>r?null:((a>n||n!==n)&&(n=a),(o<r||r!==r)&&(r=o),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Hn)}intersectTriangle(t,e,n,r,i){Xn.subVectors(e,t),Yn.subVectors(n,t),Kn.crossVectors(Xn,Yn);let s,a=this.direction.dot(Kn);if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}jn.subVectors(this.origin,t);const o=s*this.direction.dot(Yn.crossVectors(jn,Yn));if(o<0)return null;const l=s*this.direction.dot(Xn.cross(jn));if(l<0)return null;if(o+l>a)return null;const u=-s*jn.dot(Kn);return u<0?null:this.at(u/a,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Zn{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Zn).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Qn.setFromMatrixColumn(t,0).length(),i=1/Qn.setFromMatrixColumn(t,1).length(),s=1/Qn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=-o*c,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-a*o,e[2]=i-t*l,e[6]=r+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t+i*a,e[4]=r*a-n,e[8]=s*l,e[1]=s*c,e[5]=s*u,e[9]=-a,e[2]=n*a-r,e[6]=i+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t-i*a,e[4]=-s*c,e[8]=r+n*a,e[1]=n+r*a,e[5]=s*u,e[9]=i-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=r*l-n,e[8]=t*l+i,e[1]=o*c,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=i-t*c,e[8]=r*c+n,e[1]=c,e[5]=s*u,e[9]=-a*u,e[2]=-l*u,e[6]=n*c+r,e[10]=t-i*c}else if("XZY"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=-c,e[8]=l*u,e[1]=t*c+i,e[5]=s*u,e[9]=n*c-r,e[2]=r*c-n,e[6]=a*u,e[10]=i*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(er,t,nr)}lookAt(t,e,n){const r=this.elements;return sr.subVectors(t,e),0===sr.lengthSq()&&(sr.z=1),sr.normalize(),rr.crossVectors(n,sr),0===rr.lengthSq()&&(1===Math.abs(n.z)?sr.x+=1e-4:sr.z+=1e-4,sr.normalize(),rr.crossVectors(n,sr)),rr.normalize(),ir.crossVectors(sr,rr),r[0]=rr.x,r[4]=ir.x,r[8]=sr.x,r[1]=rr.y,r[5]=ir.y,r[9]=sr.y,r[2]=rr.z,r[6]=ir.z,r[10]=sr.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],x=n[7],v=n[11],b=n[15],w=r[0],_=r[4],S=r[8],M=r[12],T=r[1],E=r[5],A=r[9],C=r[13],I=r[2],k=r[6],R=r[10],N=r[14],L=r[3],D=r[7],P=r[11],O=r[15];return i[0]=s*w+a*T+o*I+l*L,i[4]=s*_+a*E+o*k+l*D,i[8]=s*S+a*A+o*R+l*P,i[12]=s*M+a*C+o*N+l*O,i[1]=u*w+c*T+h*I+d*L,i[5]=u*_+c*E+h*k+d*D,i[9]=u*S+c*A+h*R+d*P,i[13]=u*M+c*C+h*N+d*O,i[2]=p*w+f*T+m*I+g*L,i[6]=p*_+f*E+m*k+g*D,i[10]=p*S+f*A+m*R+g*P,i[14]=p*M+f*C+m*N+g*O,i[3]=y*w+x*T+v*I+b*L,i[7]=y*_+x*E+v*k+b*D,i[11]=y*S+x*A+v*R+b*P,i[15]=y*M+x*C+v*N+b*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],l=t[13],u=t[2],c=t[6],h=t[10],d=t[14],p=t[3],f=t[7],m=t[11],g=t[15];return p*(+i*o*c-r*l*c-i*a*h+n*l*h+r*a*d-n*o*d)+f*(+e*o*d-e*l*h+i*s*h-r*s*d+r*l*u-i*o*u)+m*(+e*l*c-e*a*d-i*s*c+n*s*d+i*a*u-n*l*u)+g*(-r*a*u-e*o*c+e*a*h+r*s*c-n*s*h+n*o*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=t[9],h=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],y=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,x=p*h*l-u*m*l-p*o*d+s*m*d+u*o*g-s*h*g,v=u*f*l-p*c*l+p*a*d-s*f*d-u*a*g+s*c*g,b=p*c*o-u*f*o-p*a*h+s*f*h+u*a*m-s*c*m,w=e*y+n*x+r*v+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return t[0]=y*_,t[1]=(f*h*i-c*m*i-f*r*d+n*m*d+c*r*g-n*h*g)*_,t[2]=(a*m*i-f*o*i+f*r*l-n*m*l-a*r*g+n*o*g)*_,t[3]=(c*o*i-a*h*i-c*r*l+n*h*l+a*r*d-n*o*d)*_,t[4]=x*_,t[5]=(u*m*i-p*h*i+p*r*d-e*m*d-u*r*g+e*h*g)*_,t[6]=(p*o*i-s*m*i-p*r*l+e*m*l+s*r*g-e*o*g)*_,t[7]=(s*h*i-u*o*i+u*r*l-e*h*l-s*r*d+e*o*d)*_,t[8]=v*_,t[9]=(p*c*i-u*f*i-p*n*d+e*f*d+u*n*g-e*c*g)*_,t[10]=(s*f*i-p*a*i+p*n*l-e*f*l-s*n*g+e*a*g)*_,t[11]=(u*a*i-s*c*i-u*n*l+e*c*l+s*n*d-e*a*d)*_,t[12]=b*_,t[13]=(u*f*r-p*c*r+p*n*h-e*f*h-u*n*m+e*c*m)*_,t[14]=(p*a*r-s*f*r-p*n*o+e*f*o+s*n*m-e*a*m)*_,t[15]=(s*c*r-u*a*r+u*n*o-e*c*o-s*n*h+e*a*h)*_,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,l=i*s,u=i*a;return this.set(l*s+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*s,0,l*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,i,s){return this.set(1,n,i,0,t,1,s,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,s=e._y,a=e._z,o=e._w,l=i+i,u=s+s,c=a+a,h=i*l,d=i*u,p=i*c,f=s*u,m=s*c,g=a*c,y=o*l,x=o*u,v=o*c,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(p+x)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Qn.set(r[0],r[1],r[2]).length();const s=Qn.set(r[4],r[5],r[6]).length(),a=Qn.set(r[8],r[9],r[10]).length(),o=this.determinant();o<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],tr.copy(this);const l=1/i,u=1/s,c=1/a;return tr.elements[0]*=l,tr.elements[1]*=l,tr.elements[2]*=l,tr.elements[4]*=u,tr.elements[5]*=u,tr.elements[6]*=u,tr.elements[8]*=c,tr.elements[9]*=c,tr.elements[10]*=c,e.setFromRotationMatrix(tr),n.x=i,n.y=s,n.z=a,this}makePerspective(t,e,n,r,i,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,o=2*i/(e-t),l=2*i/(n-r),u=(e+t)/(e-t),c=(n+r)/(n-r),h=-(s+i)/(s-i),d=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,r,i,s){const a=this.elements,o=1/(e-t),l=1/(n-r),u=1/(s-i),c=(e+t)*o,h=(n+r)*l,d=(s+i)*u;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Zn.prototype.isMatrix4=!0;const Qn=new wn,tr=new Zn,er=new wn(0,0,0),nr=new wn(1,1,1),rr=new wn,ir=new wn,sr=new wn,ar=new Zn,or=new bn;class lr{constructor(t=0,e=0,n=0,r=lr.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,i=r[0],s=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(Ue(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ue(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(Ue(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-Ue(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Ue(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ue(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ar.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ar,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return or.setFromEuler(this),this.setFromQuaternion(or,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}lr.prototype.isEuler=!0,lr.DefaultOrder="XYZ",lr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ur{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return 0!==(this.mask&(1<<t|0))}}let cr=0;const hr=new wn,dr=new bn,pr=new Zn,fr=new wn,mr=new wn,gr=new wn,yr=new bn,xr=new wn(1,0,0),vr=new wn(0,1,0),br=new wn(0,0,1),wr={type:"added"},_r={type:"removed"};class Sr extends Pe{constructor(){super(),Object.defineProperty(this,"id",{value:cr++}),this.uuid=Be(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Sr.DefaultUp.clone();const t=new wn,e=new lr,n=new bn,r=new wn(1,1,1);function i(){n.setFromEuler(e,!1)}function s(){e.setFromQuaternion(n,void 0,!1)}e._onChange(i),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Zn},normalMatrix:{value:new Ge}}),this.matrix=new Zn,this.matrixWorld=new Zn,this.matrixAutoUpdate=Sr.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ur,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return dr.setFromAxisAngle(t,e),this.quaternion.multiply(dr),this}rotateOnWorldAxis(t,e){return dr.setFromAxisAngle(t,e),this.quaternion.premultiply(dr),this}rotateX(t){return this.rotateOnAxis(xr,t)}rotateY(t){return this.rotateOnAxis(vr,t)}rotateZ(t){return this.rotateOnAxis(br,t)}translateOnAxis(t,e){return hr.copy(t).applyQuaternion(this.quaternion),this.position.add(hr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(xr,t)}translateY(t){return this.translateOnAxis(vr,t)}translateZ(t){return this.translateOnAxis(br,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(pr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?fr.copy(t):fr.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),mr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?pr.lookAt(mr,fr,this.up):pr.lookAt(fr,mr,this.up),this.quaternion.setFromRotationMatrix(pr),r&&(pr.extractRotation(r.matrixWorld),dr.setFromRotationMatrix(pr),this.quaternion.premultiply(dr.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(wr)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(_r)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(_r)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),pr.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),pr.multiply(t.parent.matrixWorld)),t.applyMatrix4(pr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n],i=r.getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mr,t,gr),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mr,yr,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"===typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),r=s(t.materials),i=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),u=s(t.animations),c=s(t.nodes);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u),c.length>0&&(n.nodes=c)}return n.object=r,n;function s(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}Sr.DefaultUp=new wn(0,1,0),Sr.DefaultMatrixAutoUpdate=!0,Sr.prototype.isObject3D=!0;const Mr=new wn,Tr=new wn,Er=new wn,Ar=new wn,Cr=new wn,Ir=new wn,kr=new wn,Rr=new wn,Nr=new wn,Lr=new wn;class Dr{constructor(t=new wn,e=new wn,n=new wn){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),Mr.subVectors(t,e),r.cross(Mr);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){Mr.subVectors(r,e),Tr.subVectors(n,e),Er.subVectors(t,e);const s=Mr.dot(Mr),a=Mr.dot(Tr),o=Mr.dot(Er),l=Tr.dot(Tr),u=Tr.dot(Er),c=s*l-a*a;if(0===c)return i.set(-2,-1,-1);const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return i.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,Ar),Ar.x>=0&&Ar.y>=0&&Ar.x+Ar.y<=1}static getUV(t,e,n,r,i,s,a,o){return this.getBarycoord(t,e,n,r,Ar),o.set(0,0),o.addScaledVector(i,Ar.x),o.addScaledVector(s,Ar.y),o.addScaledVector(a,Ar.z),o}static isFrontFacing(t,e,n,r){return Mr.subVectors(n,e),Tr.subVectors(t,e),Mr.cross(Tr).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Mr.subVectors(this.c,this.b),Tr.subVectors(this.a,this.b),.5*Mr.cross(Tr).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Dr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Dr.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return Dr.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Dr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Dr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,i=this.c;let s,a;Cr.subVectors(r,n),Ir.subVectors(i,n),Rr.subVectors(t,n);const o=Cr.dot(Rr),l=Ir.dot(Rr);if(o<=0&&l<=0)return e.copy(n);Nr.subVectors(t,r);const u=Cr.dot(Nr),c=Ir.dot(Nr);if(u>=0&&c<=u)return e.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),e.copy(n).addScaledVector(Cr,s);Lr.subVectors(t,i);const d=Cr.dot(Lr),p=Ir.dot(Lr);if(p>=0&&d<=p)return e.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Ir,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return kr.subVectors(i,r),a=(c-u)/(c-u+(d-p)),e.copy(r).addScaledVector(kr,a);const g=1/(m+f+h);return s=f*g,a=h*g,e.copy(n).addScaledVector(Cr,s).addScaledVector(Ir,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Pr=0;class Or extends Pe{constructor(){super(),Object.defineProperty(this,"id",{value:Pr++}),this.uuid=Be(),this.name="",this.type="Material",this.fog=!0,this.blending=m,this.side=c,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=k,this.blendEquation=b,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=B,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ke,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ie,this.stencilZFail=Ie,this.stencilZPass=Ie,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!==t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===p;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"===typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==m&&(n.blending=this.blending),this.side!==c&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Or.prototype.isMaterial=!0,Or.fromType=function(){return null};class Fr extends Or{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new an(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=H,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Fr.prototype.isMeshBasicMaterial=!0;const zr=new wn,Br=new We;class Ur{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Re,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new an),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new We),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new wn),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new pn),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Br.fromBufferAttribute(this,e),Br.applyMatrix3(t),this.setXY(e,Br.x,Br.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)zr.fromBufferAttribute(this,e),zr.applyMatrix3(t),this.setXYZ(e,zr.x,zr.y,zr.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)zr.fromBufferAttribute(this,e),zr.applyMatrix4(t),this.setXYZ(e,zr.x,zr.y,zr.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)zr.fromBufferAttribute(this,e),zr.applyNormalMatrix(t),this.setXYZ(e,zr.x,zr.y,zr.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)zr.fromBufferAttribute(this,e),zr.transformDirection(t),this.setXYZ(e,zr.x,zr.y,zr.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Re&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Ur.prototype.isBufferAttribute=!0;class $r extends Ur{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class qr extends Ur{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Vr extends Ur{constructor(t,e,n){super(new Uint16Array(t),e,n)}}Vr.prototype.isFloat16BufferAttribute=!0;class Hr extends Ur{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Wr=0;const Gr=new Zn,jr=new Sr,Xr=new wn,Yr=new Mn,Kr=new Mn,Jr=new wn;class Zr extends Pe{constructor(){super(),Object.defineProperty(this,"id",{value:Wr++}),this.uuid=Be(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(je(t)?qr:$r)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Ge).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Gr.makeRotationFromQuaternion(t),this.applyMatrix4(Gr),this}rotateX(t){return Gr.makeRotationX(t),this.applyMatrix4(Gr),this}rotateY(t){return Gr.makeRotationY(t),this.applyMatrix4(Gr),this}rotateZ(t){return Gr.makeRotationZ(t),this.applyMatrix4(Gr),this}translate(t,e,n){return Gr.makeTranslation(t,e,n),this.applyMatrix4(Gr),this}scale(t,e,n){return Gr.makeScale(t,e,n),this.applyMatrix4(Gr),this}lookAt(t){return jr.lookAt(t),jr.updateMatrix(),this.applyMatrix4(jr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Xr).negate(),this.translate(Xr.x,Xr.y,Xr.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Hr(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Mn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new wn(-1/0,-1/0,-1/0),new wn(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const t=e[n];Yr.setFromBufferAttribute(t),this.morphTargetsRelative?(Jr.addVectors(this.boundingBox.min,Yr.min),this.boundingBox.expandByPoint(Jr),Jr.addVectors(this.boundingBox.max,Yr.max),this.boundingBox.expandByPoint(Jr)):(this.boundingBox.expandByPoint(Yr.min),this.boundingBox.expandByPoint(Yr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new wn,1/0);if(t){const n=this.boundingSphere.center;if(Yr.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const n=e[t];Kr.setFromBufferAttribute(n),this.morphTargetsRelative?(Jr.addVectors(Yr.min,Kr.min),Yr.expandByPoint(Jr),Jr.addVectors(Yr.max,Kr.max),Yr.expandByPoint(Jr)):(Yr.expandByPoint(Kr.min),Yr.expandByPoint(Kr.max))}Yr.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)Jr.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(Jr));if(e)for(let i=0,s=e.length;i<s;i++){const s=e[i],a=this.morphTargetsRelative;for(let e=0,i=s.count;e<i;e++)Jr.fromBufferAttribute(s,e),a&&(Xr.fromBufferAttribute(t,e),Jr.add(Xr)),r=Math.max(r,n.distanceToSquared(Jr))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,s=e.uv.array,a=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ur(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],u=[];for(let T=0;T<a;T++)l[T]=new wn,u[T]=new wn;const c=new wn,h=new wn,d=new wn,p=new We,f=new We,m=new We,g=new wn,y=new wn;function x(t,e,n){c.fromArray(r,3*t),h.fromArray(r,3*e),d.fromArray(r,3*n),p.fromArray(s,2*t),f.fromArray(s,2*e),m.fromArray(s,2*n),h.sub(c),d.sub(c),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),y.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),u[t].add(y),u[e].add(y),u[n].add(y))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let T=0,E=v.length;T<E;++T){const t=v[T],e=t.start,r=t.count;for(let i=e,s=e+r;i<s;i+=3)x(n[i+0],n[i+1],n[i+2])}const b=new wn,w=new wn,_=new wn,S=new wn;function M(t){_.fromArray(i,3*t),S.copy(_);const e=l[t];b.copy(e),b.sub(_.multiplyScalar(_.dot(e))).normalize(),w.crossVectors(S,e);const n=w.dot(u[t]),r=n<0?-1:1;o[4*t]=b.x,o[4*t+1]=b.y,o[4*t+2]=b.z,o[4*t+3]=r}for(let T=0,E=v.length;T<E;++T){const t=v[T],e=t.start,r=t.count;for(let i=e,s=e+r;i<s;i+=3)M(n[i+0]),M(n[i+1]),M(n[i+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ur(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new wn,i=new wn,s=new wn,a=new wn,o=new wn,l=new wn,u=new wn,c=new wn;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,d),i.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,h=e.count;t<h;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),n.setXYZ(t+0,u.x,u.y,u.z),n.setXYZ(t+1,u.x,u.y,u.z),n.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r],s=i.array,a=t.attributes[r],o=a.array,l=a.itemSize*e,u=Math.min(o.length,s.length-l);for(let t=0,e=l;t<u;t++,e++)s[e]=o[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Jr.fromBufferAttribute(t,e),Jr.normalize(),t.setXYZ(e,Jr.x,Jr.y,Jr.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,s=new n.constructor(e.length*r);let a=0,o=0;for(let l=0,u=e.length;l<u;l++){a=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*r;for(let t=0;t<r;t++)s[o++]=n[a++]}return new Ur(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Zr,n=this.index.array,r=this.attributes;for(const a in r){const i=r[a],s=t(i,n);e.setAttribute(a,s)}const i=this.morphAttributes;for(const a in i){const r=[],s=i[a];for(let e=0,i=s.length;e<i;e++){const i=s[e],a=t(i,n);r.push(a)}e.morphAttributes[a]=r}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const t=s[a];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const r={};let i=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];n.push(i.toJSON(t.data))}n.length>0&&(r[o]=n,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const l in r){const t=r[l];this.setAttribute(l,t.clone(e))}const i=t.morphAttributes;for(const l in i){const t=[],n=i[l];for(let r=0,i=n.length;r<i;r++)t.push(n[r].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let l=0,u=s.length;l<u;l++){const t=s[l];this.addGroup(t.start,t.count,t.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Zr.prototype.isBufferGeometry=!0;const Qr=new Zn,ti=new Jn,ei=new Vn,ni=new wn,ri=new wn,ii=new wn,si=new wn,ai=new wn,oi=new wn,li=new wn,ui=new wn,ci=new wn,hi=new We,di=new We,pi=new We,fi=new wn,mi=new wn;class gi extends Sr{constructor(t=new Zr,e=new Fr){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ei.copy(n.boundingSphere),ei.applyMatrix4(i),!1===t.ray.intersectsSphere(ei))return;if(Qr.copy(i).invert(),ti.copy(t.ray).applyMatrix4(Qr),null!==n.boundingBox&&!1===ti.intersectsBox(n.boundingBox))return;let s;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,u=n.attributes.uv,c=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const p=h[n],f=r[p.materialIndex],m=Math.max(p.start,d.start),g=Math.min(i.count,Math.min(p.start+p.count,d.start+d.count));for(let n=m,r=g;n<r;n+=3){const r=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);s=xi(this,f,t,ti,a,o,l,u,c,r,h,d),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const n=Math.max(0,d.start),h=Math.min(i.count,d.start+d.count);for(let d=n,p=h;d<p;d+=3){const n=i.getX(d),h=i.getX(d+1),p=i.getX(d+2);s=xi(this,r,t,ti,a,o,l,u,c,n,h,p),s&&(s.faceIndex=Math.floor(d/3),e.push(s))}}else if(void 0!==a)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const i=h[n],p=r[i.materialIndex],f=Math.max(i.start,d.start),m=Math.min(a.count,Math.min(i.start+i.count,d.start+d.count));for(let n=f,r=m;n<r;n+=3){const r=n,h=n+1,d=n+2;s=xi(this,p,t,ti,a,o,l,u,c,r,h,d),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,e.push(s))}}else{const n=Math.max(0,d.start),i=Math.min(a.count,d.start+d.count);for(let h=n,d=i;h<d;h+=3){const n=h,i=h+1,d=h+2;s=xi(this,r,t,ti,a,o,l,u,c,n,i,d),s&&(s.faceIndex=Math.floor(h/3),e.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function yi(t,e,n,r,i,s,a,o){let l;if(l=e.side===h?r.intersectTriangle(a,s,i,!0,o):r.intersectTriangle(i,s,a,e.side!==d,o),null===l)return null;mi.copy(o),mi.applyMatrix4(t.matrixWorld);const u=n.ray.origin.distanceTo(mi);return u<n.near||u>n.far?null:{distance:u,point:mi.clone(),object:t}}function xi(t,e,n,r,i,s,a,o,l,u,c,h){ni.fromBufferAttribute(i,u),ri.fromBufferAttribute(i,c),ii.fromBufferAttribute(i,h);const d=t.morphTargetInfluences;if(s&&d){li.set(0,0,0),ui.set(0,0,0),ci.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],n=s[t];0!==e&&(si.fromBufferAttribute(n,u),ai.fromBufferAttribute(n,c),oi.fromBufferAttribute(n,h),a?(li.addScaledVector(si,e),ui.addScaledVector(ai,e),ci.addScaledVector(oi,e)):(li.addScaledVector(si.sub(ni),e),ui.addScaledVector(ai.sub(ri),e),ci.addScaledVector(oi.sub(ii),e)))}ni.add(li),ri.add(ui),ii.add(ci)}t.isSkinnedMesh&&(t.boneTransform(u,ni),t.boneTransform(c,ri),t.boneTransform(h,ii));const p=yi(t,e,n,r,ni,ri,ii,fi);if(p){o&&(hi.fromBufferAttribute(o,u),di.fromBufferAttribute(o,c),pi.fromBufferAttribute(o,h),p.uv=Dr.getUV(fi,ni,ri,ii,hi,di,pi,new We)),l&&(hi.fromBufferAttribute(l,u),di.fromBufferAttribute(l,c),pi.fromBufferAttribute(l,h),p.uv2=Dr.getUV(fi,ni,ri,ii,hi,di,pi,new We));const t={a:u,b:c,c:h,normal:new wn,materialIndex:0};Dr.getNormal(ni,ri,ii,t.normal),p.face=t}return p}gi.prototype.isMesh=!0;class vi extends Zr{constructor(t=1,e=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const a=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(t,e,n,r,i,s,p,f,m,g,y){const x=s/m,v=p/g,b=s/2,w=p/2,_=f/2,S=m+1,M=g+1;let T=0,E=0;const A=new wn;for(let a=0;a<M;a++){const s=a*v-w;for(let o=0;o<S;o++){const h=o*x-b;A[t]=h*r,A[e]=s*i,A[n]=_,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,u.push(A.x,A.y,A.z),c.push(o/m),c.push(1-a/g),T+=1}}for(let a=0;a<g;a++)for(let t=0;t<m;t++){const e=h+t+S*a,n=h+t+S*(a+1),r=h+(t+1)+S*(a+1),i=h+(t+1)+S*a;o.push(e,n,i),o.push(n,r,i),E+=6}a.addGroup(d,E,y),d+=E,h+=T}p("z","y","x",-1,-1,n,e,t,s,i,0),p("z","y","x",1,-1,n,e,-t,s,i,1),p("x","z","y",1,1,t,n,e,r,s,2),p("x","z","y",1,-1,t,n,-e,r,s,3),p("x","y","z",1,-1,t,e,n,r,i,4),p("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Hr(l,3)),this.setAttribute("normal",new Hr(u,3)),this.setAttribute("uv",new Hr(c,2))}static fromJSON(t){return new vi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function bi(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function wi(t){const e={};for(let n=0;n<t.length;n++){const r=bi(t[n]);for(const t in r)e[t]=r[t]}return e}const _i={clone:bi,merge:wi};var Si="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Mi="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class Ti extends Or{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Si,this.fragmentShader=Mi,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=bi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r],i=n.value;i&&i.isTexture?e.uniforms[r]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[r]={type:"m4",value:i.toArray()}:e.uniforms[r]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)!0===this.extensions[r]&&(n[r]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Ti.prototype.isShaderMaterial=!0;class Ei extends Sr{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Zn,this.projectionMatrix=new Zn,this.projectionMatrixInverse=new Zn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Ei.prototype.isCamera=!0;class Ai extends Ei{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ze*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Fe*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ze*Math.atan(Math.tan(.5*Fe*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Fe*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;i+=s.offsetX*r/t,e-=s.offsetY*n/a,r*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(i+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Ai.prototype.isPerspectiveCamera=!0;const Ci=90,Ii=1;class ki extends Sr{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Ai(Ci,Ii,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new wn(1,0,0)),this.add(r);const i=new Ai(Ci,Ii,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new wn(-1,0,0)),this.add(i);const s=new Ai(Ci,Ii,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new wn(0,1,0)),this.add(s);const a=new Ai(Ci,Ii,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new wn(0,-1,0)),this.add(a);const o=new Ai(Ci,Ii,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new wn(0,0,1)),this.add(o);const l=new Ai(Ci,Ii,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new wn(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,s,a,o,l]=this.children,u=t.getRenderTarget(),c=t.outputEncoding,h=t.toneMapping,d=t.xr.enabled;t.outputEncoding=we,t.toneMapping=j,t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=p,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(u),t.outputEncoding=c,t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Ri extends dn{constructor(t,e,n,r,i,s,a,o,l,u){t=void 0!==t?t:[],e=void 0!==e?e:tt,super(t,e,n,r,i,s,a,o,l,u),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ri.prototype.isCubeTexture=!0;class Ni extends fn{constructor(t,e={}){super(t,t,e);const n={width:t,height:t,depth:1},r=[n,n,n,n,n,n];this.texture=new Ri(r,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:ht}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new vi(5,5,5),i=new Ti({name:"CubemapFromEquirect",uniforms:bi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:h,blending:f});i.uniforms.tEquirect.value=e;const s=new gi(r,i),a=e.minFilter;e.minFilter===pt&&(e.minFilter=ht);const o=new ki(1,10,this);return o.update(t,s),e.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,r);t.setRenderTarget(i)}}Ni.prototype.isWebGLCubeRenderTarget=!0;const Li=new wn,Di=new wn,Pi=new Ge;class Oi{constructor(t=new wn(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=Li.subVectors(n,e).cross(Di.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Li),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Pi.getNormalMatrix(t),r=this.coplanarPoint(Li).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Oi.prototype.isPlane=!0;const Fi=new Vn,zi=new wn;class Bi{constructor(t=new Oi,e=new Oi,n=new Oi,r=new Oi,i=new Oi,s=new Oi){this.planes=[t,e,n,r,i,s]}set(t,e,n,r,i,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],s=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],x=n[15];return e[0].setComponents(a-r,c-o,f-h,x-m).normalize(),e[1].setComponents(a+r,c+o,f+h,x+m).normalize(),e[2].setComponents(a+i,c+l,f+d,x+g).normalize(),e[3].setComponents(a-i,c-l,f-d,x-g).normalize(),e[4].setComponents(a-s,c-u,f-p,x-y).normalize(),e[5].setComponents(a+s,c+u,f+p,x+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Fi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Fi)}intersectsSprite(t){return Fi.center.set(0,0,0),Fi.radius=.7071067811865476,Fi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Fi)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++){const t=e[i].distanceToPoint(n);if(t<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(zi.x=r.normal.x>0?t.max.x:t.min.x,zi.y=r.normal.y>0?t.max.y:t.min.y,zi.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(zi)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Ui(){let t=null,e=!1,n=null,r=null;function i(e,s){n(e,s),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function $i(t,e){const n=e.isWebGL2,r=new WeakMap;function i(e,r){const i=e.array,s=e.usage,a=t.createBuffer();let o;if(t.bindBuffer(r,a),t.bufferData(r,i,s),e.onUploadCallback(),i instanceof Float32Array)o=5126;else if(i instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(i instanceof Int16Array)o=5122;else if(i instanceof Uint32Array)o=5125;else if(i instanceof Int32Array)o=5124;else if(i instanceof Int8Array)o=5120;else if(i instanceof Uint8Array)o=5121;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=5121}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}function s(e,r,i){const s=r.array,a=r.updateRange;t.bindBuffer(i,e),-1===a.count?t.bufferSubData(i,0,s):(n?t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}function a(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)}function o(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))}function l(t,e){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);void 0===n?r.set(t,i(t,e)):n.version<t.version&&(s(n.buffer,t,e),n.version=t.version)}return{get:a,remove:o,update:l}}class qi extends Zr{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,s=e/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=t/a,h=e/o,d=[],p=[],f=[],m=[];for(let g=0;g<u;g++){const t=g*h-s;for(let e=0;e<l;e++){const n=e*c-i;p.push(n,-t,0),f.push(0,0,1),m.push(e/a),m.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<a;t++){const e=t+l*g,n=t+l*(g+1),r=t+1+l*(g+1),i=t+1+l*g;d.push(e,n,i),d.push(n,r,i)}this.setIndex(d),this.setAttribute("position",new Hr(p,3)),this.setAttribute("normal",new Hr(f,3)),this.setAttribute("uv",new Hr(m,2))}static fromJSON(t){return new qi(t.width,t.height,t.widthSegments,t.heightSegments)}}var Vi="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",Hi="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",Wi="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",Gi="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",ji="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",Xi="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",Yi="vec3 transformed = vec3( position );",Ki="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",Ji="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",Zi="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",Qi="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",ts="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",es="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",ns="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",rs="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",is="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",ss="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",as="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",os="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",ls="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",us="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",cs="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",hs="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",ds="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",ps="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",fs="gl_FragColor = linearToOutputTexel( gl_FragColor );",ms="vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",gs="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",ys="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",xs="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",vs="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",bs="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",ws="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",_s="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",Ss="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Ms="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Ts="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",Es="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",As="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",Cs="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",Is="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",ks="#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",Rs="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",Ns="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",Ls="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Ds="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",Ps="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",Os="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",Fs="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",zs="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",Bs="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",Us="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",$s="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",qs="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",Vs="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",Hs="#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",Ws="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",Gs="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",js="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",Xs="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",Ys="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",Ks="#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",Js="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",Zs="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",Qs="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",ta="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",ea="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",na="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",ra="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",ia="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",sa="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",aa="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",oa="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",la="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",ua="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",ca="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",ha="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",da="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",pa="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",fa="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",ma="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",ga="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",ya="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",xa="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",va="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",ba="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",wa="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",_a="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",Sa="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",Ma="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",Ta="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",Ea="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",Aa="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",Ca="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",Ia="#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",ka="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",Ra="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",Na="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",La="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",Da="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",Pa="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",Oa="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",Fa="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";const za="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",Ba="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Ua="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",$a="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",qa="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",Va="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",Ha="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",Wa="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",Ga="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",ja="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Xa="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Ya="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",Ka="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",Ja="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Za="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",Qa="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",to="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",eo="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",no="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",ro="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",io="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",so="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",ao="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",oo="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",lo="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",uo="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",co="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",ho="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",po="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fo="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",mo="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",go="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",yo={alphamap_fragment:Vi,alphamap_pars_fragment:Hi,alphatest_fragment:Wi,alphatest_pars_fragment:Gi,aomap_fragment:ji,aomap_pars_fragment:Xi,begin_vertex:Yi,beginnormal_vertex:Ki,bsdfs:Ji,bumpmap_pars_fragment:Zi,clipping_planes_fragment:Qi,clipping_planes_pars_fragment:ts,clipping_planes_pars_vertex:es,clipping_planes_vertex:ns,color_fragment:rs,color_pars_fragment:is,color_pars_vertex:ss,color_vertex:as,common:os,cube_uv_reflection_fragment:ls,defaultnormal_vertex:us,displacementmap_pars_vertex:cs,displacementmap_vertex:hs,emissivemap_fragment:ds,emissivemap_pars_fragment:ps,encodings_fragment:fs,encodings_pars_fragment:ms,envmap_fragment:gs,envmap_common_pars_fragment:ys,envmap_pars_fragment:xs,envmap_pars_vertex:vs,envmap_physical_pars_fragment:ks,envmap_vertex:bs,fog_vertex:ws,fog_pars_vertex:_s,fog_fragment:Ss,fog_pars_fragment:Ms,gradientmap_pars_fragment:Ts,lightmap_fragment:Es,lightmap_pars_fragment:As,lights_lambert_vertex:Cs,lights_pars_begin:Is,lights_toon_fragment:Rs,lights_toon_pars_fragment:Ns,lights_phong_fragment:Ls,lights_phong_pars_fragment:Ds,lights_physical_fragment:Ps,lights_physical_pars_fragment:Os,lights_fragment_begin:Fs,lights_fragment_maps:zs,lights_fragment_end:Bs,logdepthbuf_fragment:Us,logdepthbuf_pars_fragment:$s,logdepthbuf_pars_vertex:qs,logdepthbuf_vertex:Vs,map_fragment:Hs,map_pars_fragment:Ws,map_particle_fragment:Gs,map_particle_pars_fragment:js,metalnessmap_fragment:Xs,metalnessmap_pars_fragment:Ys,morphcolor_vertex:Ks,morphnormal_vertex:Js,morphtarget_pars_vertex:Zs,morphtarget_vertex:Qs,normal_fragment_begin:ta,normal_fragment_maps:ea,normal_pars_fragment:na,normal_pars_vertex:ra,normal_vertex:ia,normalmap_pars_fragment:sa,clearcoat_normal_fragment_begin:aa,clearcoat_normal_fragment_maps:oa,clearcoat_pars_fragment:la,output_fragment:ua,packing:ca,premultiplied_alpha_fragment:ha,project_vertex:da,dithering_fragment:pa,dithering_pars_fragment:fa,roughnessmap_fragment:ma,roughnessmap_pars_fragment:ga,shadowmap_pars_fragment:ya,shadowmap_pars_vertex:xa,shadowmap_vertex:va,shadowmask_pars_fragment:ba,skinbase_vertex:wa,skinning_pars_vertex:_a,skinning_vertex:Sa,skinnormal_vertex:Ma,specularmap_fragment:Ta,specularmap_pars_fragment:Ea,tonemapping_fragment:Aa,tonemapping_pars_fragment:Ca,transmission_fragment:Ia,transmission_pars_fragment:ka,uv_pars_fragment:Ra,uv_pars_vertex:Na,uv_vertex:La,uv2_pars_fragment:Da,uv2_pars_vertex:Pa,uv2_vertex:Oa,worldpos_vertex:Fa,background_vert:za,background_frag:Ba,cube_vert:Ua,cube_frag:$a,depth_vert:qa,depth_frag:Va,distanceRGBA_vert:Ha,distanceRGBA_frag:Wa,equirect_vert:Ga,equirect_frag:ja,linedashed_vert:Xa,linedashed_frag:Ya,meshbasic_vert:Ka,meshbasic_frag:Ja,meshlambert_vert:Za,meshlambert_frag:Qa,meshmatcap_vert:to,meshmatcap_frag:eo,meshnormal_vert:no,meshnormal_frag:ro,meshphong_vert:io,meshphong_frag:so,meshphysical_vert:ao,meshphysical_frag:oo,meshtoon_vert:lo,meshtoon_frag:uo,points_vert:co,points_frag:ho,shadow_vert:po,shadow_frag:fo,sprite_vert:mo,sprite_frag:go},xo={common:{diffuse:{value:new an(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ge},uv2Transform:{value:new Ge},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new We(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new an(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new an(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ge}},sprite:{diffuse:{value:new an(16777215)},opacity:{value:1},center:{value:new We(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ge}}},vo={basic:{uniforms:wi([xo.common,xo.specularmap,xo.envmap,xo.aomap,xo.lightmap,xo.fog]),vertexShader:yo.meshbasic_vert,fragmentShader:yo.meshbasic_frag},lambert:{uniforms:wi([xo.common,xo.specularmap,xo.envmap,xo.aomap,xo.lightmap,xo.emissivemap,xo.fog,xo.lights,{emissive:{value:new an(0)}}]),vertexShader:yo.meshlambert_vert,fragmentShader:yo.meshlambert_frag},phong:{uniforms:wi([xo.common,xo.specularmap,xo.envmap,xo.aomap,xo.lightmap,xo.emissivemap,xo.bumpmap,xo.normalmap,xo.displacementmap,xo.fog,xo.lights,{emissive:{value:new an(0)},specular:{value:new an(1118481)},shininess:{value:30}}]),vertexShader:yo.meshphong_vert,fragmentShader:yo.meshphong_frag},standard:{uniforms:wi([xo.common,xo.envmap,xo.aomap,xo.lightmap,xo.emissivemap,xo.bumpmap,xo.normalmap,xo.displacementmap,xo.roughnessmap,xo.metalnessmap,xo.fog,xo.lights,{emissive:{value:new an(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:yo.meshphysical_vert,fragmentShader:yo.meshphysical_frag},toon:{uniforms:wi([xo.common,xo.aomap,xo.lightmap,xo.emissivemap,xo.bumpmap,xo.normalmap,xo.displacementmap,xo.gradientmap,xo.fog,xo.lights,{emissive:{value:new an(0)}}]),vertexShader:yo.meshtoon_vert,fragmentShader:yo.meshtoon_frag},matcap:{uniforms:wi([xo.common,xo.bumpmap,xo.normalmap,xo.displacementmap,xo.fog,{matcap:{value:null}}]),vertexShader:yo.meshmatcap_vert,fragmentShader:yo.meshmatcap_frag},points:{uniforms:wi([xo.points,xo.fog]),vertexShader:yo.points_vert,fragmentShader:yo.points_frag},dashed:{uniforms:wi([xo.common,xo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:yo.linedashed_vert,fragmentShader:yo.linedashed_frag},depth:{uniforms:wi([xo.common,xo.displacementmap]),vertexShader:yo.depth_vert,fragmentShader:yo.depth_frag},normal:{uniforms:wi([xo.common,xo.bumpmap,xo.normalmap,xo.displacementmap,{opacity:{value:1}}]),vertexShader:yo.meshnormal_vert,fragmentShader:yo.meshnormal_frag},sprite:{uniforms:wi([xo.sprite,xo.fog]),vertexShader:yo.sprite_vert,fragmentShader:yo.sprite_frag},background:{uniforms:{uvTransform:{value:new Ge},t2D:{value:null}},vertexShader:yo.background_vert,fragmentShader:yo.background_frag},cube:{uniforms:wi([xo.envmap,{opacity:{value:1}}]),vertexShader:yo.cube_vert,fragmentShader:yo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:yo.equirect_vert,fragmentShader:yo.equirect_frag},distanceRGBA:{uniforms:wi([xo.common,xo.displacementmap,{referencePosition:{value:new wn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:yo.distanceRGBA_vert,fragmentShader:yo.distanceRGBA_frag},shadow:{uniforms:wi([xo.lights,xo.fog,{color:{value:new an(0)},opacity:{value:1}}]),vertexShader:yo.shadow_vert,fragmentShader:yo.shadow_frag}};function bo(t,e,n,r,i,s){const a=new an(0);let o,l,u=!0===i?0:1,d=null,p=0,f=null;function m(n,i){let s=!1,m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=e.get(m));const y=t.xr,x=y.getSession&&y.getSession();x&&"additive"===x.environmentBlendMode&&(m=null),null===m?g(a,u):m&&m.isColor&&(g(m,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.mapping===it)?(void 0===l&&(l=new gi(new vi(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:bi(vo.cube.uniforms),vertexShader:vo.cube.vertexShader,fragmentShader:vo.cube.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,d===m&&p===m.version&&f===t.toneMapping||(l.material.needsUpdate=!0,d=m,p=m.version,f=t.toneMapping),n.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new gi(new qi(2,2),new Ti({name:"BackgroundMaterial",uniforms:bi(vo.background.uniforms),vertexShader:vo.background.vertexShader,fragmentShader:vo.background.fragmentShader,side:c,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),d===m&&p===m.version&&f===t.toneMapping||(o.material.needsUpdate=!0,d=m,p=m.version,f=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}function g(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),u=e,g(a,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,g(a,u)},render:m}}function wo(t,e,n,r){const i=t.getParameter(34921),s=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||null!==s,o={},l=g(null);let u=l,c=!1;function h(e,r,i,s,o){let l=!1;if(a){const t=m(s,i,r);u!==t&&(u=t,p(u.object)),l=y(s,o),l&&x(s,o)}else{const t=!0===r.wireframe;u.geometry===s.id&&u.program===i.id&&u.wireframe===t||(u.geometry=s.id,u.program=i.id,u.wireframe=t,l=!0)}!0===e.isInstancedMesh&&(l=!0),null!==o&&n.update(o,34963),(l||c)&&(c=!1,M(e,r,i,s),null!==o&&t.bindBuffer(34963,n.get(o).buffer))}function d(){return r.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function p(e){return r.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function f(e){return r.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function m(t,e,n){const r=!0===n.wireframe;let i=o[t.id];void 0===i&&(i={},o[t.id]=i);let s=i[e.id];void 0===s&&(s={},i[e.id]=s);let a=s[r];return void 0===a&&(a=g(d()),s[r]=a),a}function g(t){const e=[],n=[],r=[];for(let s=0;s<i;s++)e[s]=0,n[s]=0,r[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function y(t,e){const n=u.attributes,r=t.attributes;let i=0;for(const s in r){const t=n[s],e=r[s];if(void 0===t)return!0;if(t.attribute!==e)return!0;if(t.data!==e.data)return!0;i++}return u.attributesNum!==i||u.index!==e}function x(t,e){const n={},r=t.attributes;let i=0;for(const s in r){const t=r[s],e={};e.attribute=t,t.data&&(e.data=t.data),n[s]=e,i++}u.attributes=n,u.attributesNum=i,u.index=e}function v(){const t=u.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function b(t){w(t,0)}function w(n,i){const s=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;if(s[n]=1,0===a[n]&&(t.enableVertexAttribArray(n),a[n]=1),o[n]!==i){const s=r.isWebGL2?t:e.get("ANGLE_instanced_arrays");s[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i}}function _(){const e=u.newAttributes,n=u.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function S(e,n,i,s,a,o){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,s,a,o):t.vertexAttribIPointer(e,n,i,a,o)}function M(i,s,a,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;v();const l=o.attributes,u=a.getAttributes(),c=s.defaultAttributeValues;for(const e in u){const r=u[e];if(r.location>=0){let s=l[e];if(void 0===s&&("instanceMatrix"===e&&i.instanceMatrix&&(s=i.instanceMatrix),"instanceColor"===e&&i.instanceColor&&(s=i.instanceColor)),void 0!==s){const e=s.normalized,a=s.itemSize,l=n.get(s);if(void 0===l)continue;const u=l.buffer,c=l.type,h=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,l=n.stride,d=s.offset;if(n.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)w(r.location+t,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<r.locationSize;t++)b(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)S(r.location+t,a/r.locationSize,c,e,l*h,(d+a/r.locationSize*t)*h)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)w(r.location+t,s.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<r.locationSize;t++)b(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)S(r.location+t,a/r.locationSize,c,e,a*h,a/r.locationSize*t*h)}}else if(void 0!==c){const n=c[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}_()}function T(){C();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)f(n[t].object),delete n[t];delete e[t]}delete o[t]}}function E(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)f(t[e].object),delete t[e];delete e[n]}delete o[t.id]}function A(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)f(r[t].object),delete r[t];delete n[t.id]}}function C(){I(),c=!0,u!==l&&(u=l,p(u.object))}function I(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:C,resetDefaultState:I,dispose:T,releaseStatesOfGeometry:E,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:b,disableUnusedAttributes:_}}function _o(t,e,n,r){const i=r.isWebGL2;let s;function a(t){s=t}function o(e,r){t.drawArrays(s,e,r),n.update(r,s,1)}function l(r,a,o){if(0===o)return;let l,u;if(i)l=t,u="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](s,r,a,o),n.update(a,s,o)}this.setMode=a,this.render=o,this.renderInstances=l}function So(t,e,n){let r;function i(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!==typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=a||e.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),d=t.getParameter(35660),p=t.getParameter(3379),f=t.getParameter(34076),m=t.getParameter(34921),g=t.getParameter(36347),y=t.getParameter(36348),x=t.getParameter(36349),v=d>0,b=a||e.has("OES_texture_float"),w=v&&b,_=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:i,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:f,maxAttributes:m,maxVertexUniforms:g,maxVaryings:y,maxFragmentUniforms:x,vertexTextures:v,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:_}}function Mo(t){const e=this;let n=null,r=0,i=!1,s=!1;const a=new Oi,o=new Ge,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(t,n,r,i){const s=null!==t?t.length:0;let u=null;if(0!==s){if(u=l.value,!0!==i||null===u){const e=r+4*s,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<e)&&(u=new Float32Array(e));for(let n=0,l=r;n!==s;++n,l+=4)a.copy(t[n]).applyMatrix4(i,o),a.normal.toArray(u,l),u[l+3]=a.constant}l.value=u,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const a=0!==t.length||e||0!==r||i;return i=e,n=c(t,s,0),r=t.length,a},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,u()},this.setState=function(e,a,o){const h=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!i||null===h||0===h.length||s&&!p)s?c(null):u();else{const t=s?0:r,e=4*t;let i=f.clippingState||null;l.value=i,i=c(h,a,e,o);for(let r=0;r!==e;++r)i[r]=n[r];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function To(t){let e=new WeakMap;function n(t,e){return e===nt?t.mapping=tt:e===rt&&(t.mapping=et),t}function r(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const s=r.mapping;if(s===nt||s===rt){if(e.has(r)){const t=e.get(r).texture;return n(t,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=new Ni(s.height/2);return a.fromEquirectangularTexture(t,r),e.set(r,a),r.addEventListener("dispose",i),n(a.texture,r.mapping)}return null}}}return r}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}function s(){e=new WeakMap}return{get:r,dispose:s}}vo.physical={uniforms:wi([vo.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new We(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new an(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new We},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new an(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new an(1,1,1)},specularColorMap:{value:null}}]),vertexShader:yo.meshphysical_vert,fragmentShader:yo.meshphysical_frag};class Eo extends Ei{constructor(t=-1,e=1,n=1,r=-1,i=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,s=n+t,a=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,s=i+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(i,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Eo.prototype.isOrthographicCamera=!0;const Ao=4,Co=[.125,.215,.35,.446,.526,.582],Io=20,ko=new Eo,Ro=new an;let No=null;const Lo=(1+Math.sqrt(5))/2,Do=1/Lo,Po=[new wn(1,1,1),new wn(-1,1,1),new wn(1,1,-1),new wn(-1,1,-1),new wn(0,Lo,Do),new wn(0,Lo,-Do),new wn(Do,0,Lo),new wn(-Do,0,Lo),new wn(Lo,Do,0),new wn(-Lo,Do,0)];class Oo{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){No=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=qo(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=$o(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(No),t.scissorTest=!1,Bo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===tt||t.mapping===et?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),No=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize-32,n={magFilter:ht,minFilter:ht,generateMipmaps:!1,type:wt,format:At,encoding:we,depthBuffer:!1},r=zo(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=zo(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Fo(r)),this._blurMaterial=Uo(r,t,e)}return r}_compileMaterial(t){const e=new gi(this._lodPlanes[0],t);this._renderer.compile(e,ko)}_sceneToCubeUV(t,e,n,r){const i=90,s=1,a=new Ai(i,s,e,n),o=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,c=u.autoClear,d=u.toneMapping;u.getClearColor(Ro),u.toneMapping=j,u.autoClear=!1;const p=new Fr({name:"PMREM.Background",side:h,depthWrite:!1,depthTest:!1}),f=new gi(new vi,p);let m=!1;const g=t.background;g?g.isColor&&(p.color.copy(g),t.background=null,m=!0):(p.color.copy(Ro),m=!0);for(let h=0;h<6;h++){const e=h%3;0===e?(a.up.set(0,o[h],0),a.lookAt(l[h],0,0)):1===e?(a.up.set(0,0,o[h]),a.lookAt(0,l[h],0)):(a.up.set(0,o[h],0),a.lookAt(0,0,l[h]));const n=this._cubeSize;Bo(r,e*n,h>2?n:0,n,n),u.setRenderTarget(r),m&&u.render(f,a),u.render(t,a)}f.geometry.dispose(),f.material.dispose(),u.toneMapping=d,u.autoClear=c,t.background=g}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===tt||t.mapping===et;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=qo()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=$o());const i=r?this._cubemapMaterial:this._equirectMaterial,s=new gi(this._lodPlanes[0],i),a=i.uniforms;a["envMap"].value=t;const o=this._cubeSize;Bo(e,0,0,3*o,2*o),n.setRenderTarget(e),n.render(s,ko)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const e=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),n=Po[(r-1)%Po.length];this._blur(t,r-1,r,e,n)}e.autoClear=n}_blur(t,e,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,r,"latitudinal",i),this._halfBlur(s,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,c=new gi(this._lodPlanes[r],l),h=l.uniforms,d=this._sizeLods[n]-1,p=isFinite(i)?Math.PI/(2*d):2*Math.PI/(2*Io-1),f=i/p,m=isFinite(i)?1+Math.floor(u*f):Io;m>Io&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Io}`);const g=[];let y=0;for(let _=0;_<Io;++_){const t=_/f,e=Math.exp(-t*t/2);g.push(e),0===_?y+=e:_<m&&(y+=2*e)}for(let _=0;_<g.length;_++)g[_]=g[_]/y;h["envMap"].value=t.texture,h["samples"].value=m,h["weights"].value=g,h["latitudinal"].value="latitudinal"===s,a&&(h["poleAxis"].value=a);const{_lodMax:x}=this;h["dTheta"].value=p,h["mipInt"].value=x-n;const v=this._sizeLods[r],b=3*v*(r>x-Ao?r-x+Ao:0),w=4*(this._cubeSize-v);Bo(e,b,w,3*v,2*v),o.setRenderTarget(e),o.render(c,ko)}}function Fo(t){const e=[],n=[],r=[];let i=t;const s=t-Ao+1+Co.length;for(let a=0;a<s;a++){const s=Math.pow(2,i);n.push(s);let o=1/s;a>t-Ao?o=Co[a-t+Ao-1]:0===a&&(o=0),r.push(o);const l=1/(s-1),u=-l/2,c=1+l/2,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,f=3,m=2,g=1,y=new Float32Array(f*p*d),x=new Float32Array(m*p*d),v=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];y.set(r,f*p*t),x.set(h,m*p*t);const i=[t,t,t,t,t,t];v.set(i,g*p*t)}const b=new Zr;b.setAttribute("position",new Ur(y,f)),b.setAttribute("uv",new Ur(x,m)),b.setAttribute("faceIndex",new Ur(v,g)),e.push(b),i>Ao&&i--}return{lodPlanes:e,sizeLods:n,sigmas:r}}function zo(t,e,n){const r=new fn(t,e,n);return r.texture.mapping=it,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Bo(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function Uo(t,e,n){const r=new Float32Array(Io),i=new wn(0,1,0),s=new Ti({name:"SphericalGaussianBlur",defines:{n:Io,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:t+".0"},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Vo(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:f,depthTest:!1,depthWrite:!1});return s}function $o(){return new Ti({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Vo(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:f,depthTest:!1,depthWrite:!1})}function qo(){return new Ti({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Vo(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:f,depthTest:!1,depthWrite:!1})}function Vo(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Ho(t){let e=new WeakMap,n=null;function r(r){if(r&&r.isTexture){const a=r.mapping,o=a===nt||a===rt,l=a===tt||a===et;if(o||l){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=e.get(r);return null===n&&(n=new Oo(t)),i=o?n.fromEquirectangular(r,i):n.fromCubemap(r,i),e.set(r,i),i.texture}if(e.has(r))return e.get(r).texture;{const a=r.image;if(o&&a&&a.height>0||l&&a&&i(a)){null===n&&(n=new Oo(t));const i=o?n.fromEquirectangular(r):n.fromCubemap(r);return e.set(r,i),r.addEventListener("dispose",s),i.texture}return null}}}return r}function i(t){let e=0;const n=6;for(let r=0;r<n;r++)void 0!==t[r]&&e++;return e===n}function s(t){const n=t.target;n.removeEventListener("dispose",s);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}function a(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}return{get:r,dispose:a}}function Wo(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Go(t,e,n,r){const i={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);o.removeEventListener("dispose",a),delete i[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t,e){return!0===i[e.id]||(e.addEventListener("dispose",a),i[e.id]=!0,n.memory.geometries++),e}function l(t){const n=t.attributes;for(const i in n)e.update(n[i],34962);const r=t.morphAttributes;for(const i in r){const t=r[i];for(let n=0,r=t.length;n<r;n++)e.update(t[n],34962)}}function u(t){const n=[],r=t.index,i=t.attributes.position;let a=0;if(null!==r){const t=r.array;a=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],s=t[e+2];n.push(r,i,i,s,s,r)}}else{const t=i.array;a=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const o=new(je(n)?qr:$r)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}function c(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&u(t)}else u(t);return s.get(t)}return{get:o,update:l,getWireframeAttribute:c}}function jo(t,e,n,r){const i=r.isWebGL2;let s,a,o;function l(t){s=t}function u(t){a=t.type,o=t.bytesPerElement}function c(e,r){t.drawElements(s,r,a,e*o),n.update(r,s,1)}function h(r,l,u){if(0===u)return;let c,h;if(i)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,l,a,r*o,u),n.update(l,s,u)}this.setMode=l,this.setIndex=u,this.render=c,this.renderInstances=h}function Xo(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function r(t,e,r){switch(n.calls++,e){case 4:n.triangles+=r*(t/3);break;case 1:n.lines+=r*(t/2);break;case 3:n.lines+=r*(t-1);break;case 2:n.lines+=r*t;break;case 0:n.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e);break}}function i(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:i,update:r}}function Yo(t,e){return t[0]-e[0]}function Ko(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Jo(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function Zo(t,e,n){const r={},i=new Float32Array(8),s=new WeakMap,a=new pn,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(l,u,c,h){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const r=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,i=void 0!==r?r.length:0;let o=s.get(u);if(void 0===o||o.count!==i){void 0!==o&&o.texture.dispose();const t=void 0!==u.morphAttributes.position,n=void 0!==u.morphAttributes.normal,r=void 0!==u.morphAttributes.color,l=u.morphAttributes.position||[],c=u.morphAttributes.normal||[],h=u.morphAttributes.color||[];let d=0;!0===t&&(d=1),!0===n&&(d=2),!0===r&&(d=3);let f=u.attributes.position.count*d,m=1;f>e.maxTextureSize&&(m=Math.ceil(f/e.maxTextureSize),f=e.maxTextureSize);const g=new Float32Array(f*m*4*i),y=new mn(g,f,m,i);y.type=bt,y.needsUpdate=!0;const x=4*d;for(let e=0;e<i;e++){const i=l[e],s=c[e],o=h[e],u=f*m*4*e;for(let e=0;e<i.count;e++){const l=e*x;!0===t&&(a.fromBufferAttribute(i,e),!0===i.normalized&&Jo(a,i),g[u+l+0]=a.x,g[u+l+1]=a.y,g[u+l+2]=a.z,g[u+l+3]=0),!0===n&&(a.fromBufferAttribute(s,e),!0===s.normalized&&Jo(a,s),g[u+l+4]=a.x,g[u+l+5]=a.y,g[u+l+6]=a.z,g[u+l+7]=0),!0===r&&(a.fromBufferAttribute(o,e),!0===o.normalized&&Jo(a,o),g[u+l+8]=a.x,g[u+l+9]=a.y,g[u+l+10]=a.z,g[u+l+11]=4===o.itemSize?a.w:1)}}function p(){y.dispose(),s.delete(u),u.removeEventListener("dispose",p)}o={count:i,texture:y,size:new We(f,m)},s.set(u,o),u.addEventListener("dispose",p)}let l=0;for(let t=0;t<d.length;t++)l+=d[t];const c=u.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",c),h.getUniforms().setValue(t,"morphTargetInfluences",d),h.getUniforms().setValue(t,"morphTargetsTexture",o.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",o.size)}else{const e=void 0===d?0:d.length;let n=r[u.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];r[u.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=d[t]}n.sort(Ko);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(Yo);const s=u.morphAttributes.position,a=u.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],r=e[1];n!==Number.MAX_SAFE_INTEGER&&r?(s&&u.getAttribute("morphTarget"+t)!==s[n]&&u.setAttribute("morphTarget"+t,s[n]),a&&u.getAttribute("morphNormal"+t)!==a[n]&&u.setAttribute("morphNormal"+t,a[n]),i[t]=r,l+=r):(s&&!0===u.hasAttribute("morphTarget"+t)&&u.deleteAttribute("morphTarget"+t),a&&!0===u.hasAttribute("morphNormal"+t)&&u.deleteAttribute("morphNormal"+t),i[t]=0)}const c=u.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",c),h.getUniforms().setValue(t,"morphTargetInfluences",i)}}return{update:l}}function Qo(t,e,n,r){let i=new WeakMap;function s(t){const s=r.render.frame,a=t.geometry,l=e.get(t,a);return i.get(l)!==s&&(e.update(l),i.set(l,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",o)&&t.addEventListener("dispose",o),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l}function a(){i=new WeakMap}function o(t){const e=t.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:s,dispose:a}}const tl=new dn,el=new mn,nl=new yn,rl=new Ri,il=[],sl=[],al=new Float32Array(16),ol=new Float32Array(9),ll=new Float32Array(4);function ul(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let s=il[i];if(void 0===s&&(s=new Float32Array(i),il[i]=s),0!==e){r.toArray(s,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(s,i)}return s}function cl(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function hl(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function dl(t,e){let n=sl[e];void 0===n&&(n=new Int32Array(e),sl[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function pl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function fl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(cl(n,e))return;t.uniform2fv(this.addr,e),hl(n,e)}}function ml(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(cl(n,e))return;t.uniform3fv(this.addr,e),hl(n,e)}}function gl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(cl(n,e))return;t.uniform4fv(this.addr,e),hl(n,e)}}function yl(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(cl(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),hl(n,e)}else{if(cl(n,r))return;ll.set(r),t.uniformMatrix2fv(this.addr,!1,ll),hl(n,r)}}function xl(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(cl(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),hl(n,e)}else{if(cl(n,r))return;ol.set(r),t.uniformMatrix3fv(this.addr,!1,ol),hl(n,r)}}function vl(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(cl(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),hl(n,e)}else{if(cl(n,r))return;al.set(r),t.uniformMatrix4fv(this.addr,!1,al),hl(n,r)}}function bl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function wl(t,e){const n=this.cache;cl(n,e)||(t.uniform2iv(this.addr,e),hl(n,e))}function _l(t,e){const n=this.cache;cl(n,e)||(t.uniform3iv(this.addr,e),hl(n,e))}function Sl(t,e){const n=this.cache;cl(n,e)||(t.uniform4iv(this.addr,e),hl(n,e))}function Ml(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Tl(t,e){const n=this.cache;cl(n,e)||(t.uniform2uiv(this.addr,e),hl(n,e))}function El(t,e){const n=this.cache;cl(n,e)||(t.uniform3uiv(this.addr,e),hl(n,e))}function Al(t,e){const n=this.cache;cl(n,e)||(t.uniform4uiv(this.addr,e),hl(n,e))}function Cl(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(e||tl,i)}function Il(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||nl,i)}function kl(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(e||rl,i)}function Rl(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||el,i)}function Nl(t){switch(t){case 5126:return pl;case 35664:return fl;case 35665:return ml;case 35666:return gl;case 35674:return yl;case 35675:return xl;case 35676:return vl;case 5124:case 35670:return bl;case 35667:case 35671:return wl;case 35668:case 35672:return _l;case 35669:case 35673:return Sl;case 5125:return Ml;case 36294:return Tl;case 36295:return El;case 36296:return Al;case 35678:case 36198:case 36298:case 36306:case 35682:return Cl;case 35679:case 36299:case 36307:return Il;case 35680:case 36300:case 36308:case 36293:return kl;case 36289:case 36303:case 36311:case 36292:return Rl}}function Ll(t,e){t.uniform1fv(this.addr,e)}function Dl(t,e){const n=ul(e,this.size,2);t.uniform2fv(this.addr,n)}function Pl(t,e){const n=ul(e,this.size,3);t.uniform3fv(this.addr,n)}function Ol(t,e){const n=ul(e,this.size,4);t.uniform4fv(this.addr,n)}function Fl(t,e){const n=ul(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function zl(t,e){const n=ul(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Bl(t,e){const n=ul(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ul(t,e){t.uniform1iv(this.addr,e)}function $l(t,e){t.uniform2iv(this.addr,e)}function ql(t,e){t.uniform3iv(this.addr,e)}function Vl(t,e){t.uniform4iv(this.addr,e)}function Hl(t,e){t.uniform1uiv(this.addr,e)}function Wl(t,e){t.uniform2uiv(this.addr,e)}function Gl(t,e){t.uniform3uiv(this.addr,e)}function jl(t,e){t.uniform4uiv(this.addr,e)}function Xl(t,e,n){const r=e.length,i=dl(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTexture2D(e[s]||tl,i[s])}function Yl(t,e,n){const r=e.length,i=dl(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTexture3D(e[s]||nl,i[s])}function Kl(t,e,n){const r=e.length,i=dl(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTextureCube(e[s]||rl,i[s])}function Jl(t,e,n){const r=e.length,i=dl(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTexture2DArray(e[s]||el,i[s])}function Zl(t){switch(t){case 5126:return Ll;case 35664:return Dl;case 35665:return Pl;case 35666:return Ol;case 35674:return Fl;case 35675:return zl;case 35676:return Bl;case 5124:case 35670:return Ul;case 35667:case 35671:return $l;case 35668:case 35672:return ql;case 35669:case 35673:return Vl;case 5125:return Hl;case 36294:return Wl;case 36295:return Gl;case 36296:return jl;case 35678:case 36198:case 36298:case 36306:case 35682:return Xl;case 35679:case 36299:case 36307:return Yl;case 35680:case 36300:case 36308:case 36293:return Kl;case 36289:case 36303:case 36311:case 36292:return Jl}}function Ql(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Nl(e.type)}function tu(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Zl(e.type)}function eu(t){this.id=t,this.seq=[],this.map={}}tu.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),hl(e,t)},eu.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(t,e[s.id],n)}};const nu=/(\w+)(\])?(\[|\.)?/g;function ru(t,e){t.seq.push(e),t.map[e.id]=e}function iu(t,e,n){const r=t.name,i=r.length;nu.lastIndex=0;while(1){const s=nu.exec(r),a=nu.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===i){ru(n,void 0===u?new Ql(o,t,e):new tu(o,t,e));break}{const t=n.map;let e=t[o];void 0===e&&(e=new eu(o),ru(n,e)),n=e}}}function su(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r),i=t.getUniformLocation(e,n.name);iu(n,i,this)}}function au(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}su.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},su.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},su.upload=function(t,e,n,r){for(let i=0,s=e.length;i!==s;++i){const s=e[i],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,r)}},su.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let ou=0;function lu(t,e){const n=t.split("\n"),r=[],i=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let a=i;a<s;a++)r.push(a+1+": "+n[a]);return r.join("\n")}function uu(t){switch(t){case we:return["Linear","( value )"];case _e:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function cu(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();if(r&&""===i)return"";const s=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+lu(t.getShaderSource(e),s)}function hu(t,e){const n=uu(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function du(t,e){let n;switch(e){case X:n="Linear";break;case Y:n="Reinhard";break;case K:n="OptimizedCineon";break;case J:n="ACESFilmic";break;case Z:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function pu(t){const e=[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return e.filter(gu).join("\n")}function fu(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}function mu(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),s=r.name;let a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[s]={type:r.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}function gu(t){return""!==t}function yu(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function xu(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const vu=/^[ \t]*#include +<([\w\d./]+)>/gm;function bu(t){return t.replace(vu,wu)}function wu(t,e){const n=yo[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return bu(n)}const _u=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Su=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Mu(t){return t.replace(Su,Eu).replace(_u,Tu)}function Tu(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Eu(t,e,n,r)}function Eu(t,e,n,r){let i="";for(let s=parseInt(e);s<parseInt(n);s++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Au(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Cu(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===o?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===l?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===u&&(e="SHADOWMAP_TYPE_VSM"),e}function Iu(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case tt:case et:e="ENVMAP_TYPE_CUBE";break;case it:e="ENVMAP_TYPE_CUBE_UV";break}return e}function ku(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case et:e="ENVMAP_MODE_REFRACTION";break}return e}function Ru(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case H:e="ENVMAP_BLENDING_MULTIPLY";break;case W:e="ENVMAP_BLENDING_MIX";break;case G:e="ENVMAP_BLENDING_ADD";break}return e}function Nu(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e/32+1)+3,r=1/e,i=1/(3*Math.max(Math.pow(2,n),112));return{texelWidth:i,texelHeight:r,maxMip:n}}function Lu(t,e,n,r){const i=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=Cu(n),u=Iu(n),c=ku(n),h=Ru(n),d=Nu(n),p=n.isWebGL2?"":pu(n),f=fu(s),m=i.createProgram();let g,y,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(gu).join("\n"),g.length>0&&(g+="\n"),y=[p,f].filter(gu).join("\n"),y.length>0&&(y+="\n")):(g=[Au(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(gu).join("\n"),y=[p,Au(n),"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==j?"#define TONE_MAPPING":"",n.toneMapping!==j?yo["tonemapping_pars_fragment"]:"",n.toneMapping!==j?du("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",yo["encodings_pars_fragment"],hu("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(gu).join("\n")),a=bu(a),a=yu(a,n),a=xu(a,n),o=bu(o),o=yu(o,n),o=xu(o,n),a=Mu(a),o=Mu(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in",n.glslVersion===Le?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Le?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const v=x+g+a,b=x+y+o,w=au(i,35633,v),_=au(i,35632,b);if(i.attachShader(m,w),i.attachShader(m,_),void 0!==n.index0AttributeName?i.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(m).trim(),e=i.getShaderInfoLog(w).trim(),n=i.getShaderInfoLog(_).trim();let r=!0,s=!0;if(!1===i.getProgramParameter(m,35714)){r=!1;const e=cu(i,w,"vertex"),n=cu(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(s=!1);s&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:y}})}let S,M;return i.deleteShader(w),i.deleteShader(_),this.getUniforms=function(){return void 0===S&&(S=new su(i,m)),S},this.getAttributes=function(){return void 0===M&&(M=mu(i,m)),M},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=ou++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=w,this.fragmentShader=_,this}let Du=0;class Pu{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const n=new Ou(t);e.set(t,n)}return e.get(t)}}class Ou{constructor(t){this.id=Du++,this.code=t,this.usedTimes=0}}function Fu(t,e,n,r,i,s,a){const o=new ur,l=new Pu,u=[],c=i.isWebGL2,p=i.logarithmicDepthBuffer,f=i.floatVertexTextures,g=i.maxVertexUniforms,y=i.vertexTextures;let x=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(t){const e=t.skeleton,n=e.bones;if(f)return 1024;{const t=g,e=Math.floor((t-20)/4),r=Math.min(e,n.length);return r<n.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+r+"."),0):r}}function w(s,o,u,g,w){const _=g.fog,S=w.geometry,M=s.isMeshStandardMaterial?g.environment:null,T=(s.isMeshStandardMaterial?n:e).get(s.envMap||M),E=T&&T.mapping===it?T.image.height:null,A=v[s.type],C=w.isSkinnedMesh?b(w):0;null!==s.precision&&(x=i.getMaxPrecision(s.precision),x!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",x,"instead."));const I=S.morphAttributes.position||S.morphAttributes.normal||S.morphAttributes.color,k=void 0!==I?I.length:0;let R,N,L,D,P=0;if(void 0!==S.morphAttributes.position&&(P=1),void 0!==S.morphAttributes.normal&&(P=2),void 0!==S.morphAttributes.color&&(P=3),A){const t=vo[A];R=t.vertexShader,N=t.fragmentShader}else R=s.vertexShader,N=s.fragmentShader,l.update(s),L=l.getVertexShaderID(s),D=l.getFragmentShaderID(s);const O=t.getRenderTarget(),F=s.alphaTest>0,z=s.clearcoat>0,B={isWebGL2:c,shaderID:A,shaderName:s.type,vertexShader:R,fragmentShader:N,defines:s.defines,customVertexShaderID:L,customFragmentShaderID:D,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:x,instancing:!0===w.isInstancedMesh,instancingColor:!0===w.isInstancedMesh&&null!==w.instanceColor,supportsVertexTextures:y,outputEncoding:null===O?t.outputEncoding:!0===O.isXRRenderTarget?O.texture.encoding:we,map:!!s.map,matcap:!!s.matcap,envMap:!!T,envMapMode:T&&T.mapping,envMapCubeUVHeight:E,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===Ee,tangentSpaceNormalMap:s.normalMapType===Te,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===_e,clearcoat:z,clearcoatMap:z&&!!s.clearcoatMap,clearcoatRoughnessMap:z&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:z&&!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&s.blending===m,alphaMap:!!s.alphaMap,alphaTest:F,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!S.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!S.attributes.color&&4===S.attributes.color.itemSize,vertexUvs:!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatMap||!!s.clearcoatRoughnessMap||!!s.clearcoatNormalMap||!!s.displacementMap||!!s.transmissionMap||!!s.thicknessMap||!!s.specularIntensityMap||!!s.specularColorMap||!!s.sheenColorMap||!!s.sheenRoughnessMap,uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap)&&!!s.displacementMap,fog:!!_,useFog:s.fog,fogExp2:_&&_.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:p,skinning:!0===w.isSkinnedMesh&&C>0,maxBones:C,useVertexTexture:f,morphTargets:void 0!==S.morphAttributes.position,morphNormals:void 0!==S.morphAttributes.normal,morphColors:void 0!==S.morphAttributes.color,morphTargetsCount:k,morphTextureStride:P,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:j,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===d,flipSided:s.side===h,depthPacking:void 0!==s.depthPacking&&s.depthPacking,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()};return B}function _(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(S(n,e),M(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()}function S(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.maxBones),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection)}function M(t,e){o.disableAll(),e.isWebGL2&&o.enable(0),e.supportsVertexTextures&&o.enable(1),e.instancing&&o.enable(2),e.instancingColor&&o.enable(3),e.map&&o.enable(4),e.matcap&&o.enable(5),e.envMap&&o.enable(6),e.lightMap&&o.enable(7),e.aoMap&&o.enable(8),e.emissiveMap&&o.enable(9),e.bumpMap&&o.enable(10),e.normalMap&&o.enable(11),e.objectSpaceNormalMap&&o.enable(12),e.tangentSpaceNormalMap&&o.enable(13),e.clearcoat&&o.enable(14),e.clearcoatMap&&o.enable(15),e.clearcoatRoughnessMap&&o.enable(16),e.clearcoatNormalMap&&o.enable(17),e.displacementMap&&o.enable(18),e.specularMap&&o.enable(19),e.roughnessMap&&o.enable(20),e.metalnessMap&&o.enable(21),e.gradientMap&&o.enable(22),e.alphaMap&&o.enable(23),e.alphaTest&&o.enable(24),e.vertexColors&&o.enable(25),e.vertexAlphas&&o.enable(26),e.vertexUvs&&o.enable(27),e.vertexTangents&&o.enable(28),e.uvsVertexOnly&&o.enable(29),e.fog&&o.enable(30),t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0),e.flatShading&&o.enable(1),e.logarithmicDepthBuffer&&o.enable(2),e.skinning&&o.enable(3),e.useVertexTexture&&o.enable(4),e.morphTargets&&o.enable(5),e.morphNormals&&o.enable(6),e.morphColors&&o.enable(7),e.premultipliedAlpha&&o.enable(8),e.shadowMapEnabled&&o.enable(9),e.physicallyCorrectLights&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.depthPacking&&o.enable(13),e.dithering&&o.enable(14),e.specularIntensityMap&&o.enable(15),e.specularColorMap&&o.enable(16),e.transmission&&o.enable(17),e.transmissionMap&&o.enable(18),e.thicknessMap&&o.enable(19),e.sheen&&o.enable(20),e.sheenColorMap&&o.enable(21),e.sheenRoughnessMap&&o.enable(22),e.decodeVideoTexture&&o.enable(23),e.opaque&&o.enable(24),t.push(o.mask)}function T(t){const e=v[t.type];let n;if(e){const t=vo[e];n=_i.clone(t.uniforms)}else n=t.uniforms;return n}function E(e,n){let r;for(let t=0,i=u.length;t<i;t++){const e=u[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Lu(t,n,e,s),u.push(r)),r}function A(t){if(0===--t.usedTimes){const e=u.indexOf(t);u[e]=u[u.length-1],u.pop(),t.destroy()}}function C(t){l.remove(t)}function I(){l.dispose()}return{getParameters:w,getProgramCacheKey:_,getUniforms:T,acquireProgram:E,releaseProgram:A,releaseShaderCache:C,programs:u,dispose:I}}function zu(){let t=new WeakMap;function e(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n}function n(e){t.delete(e)}function r(e,n,r){t.get(e)[n]=r}function i(){t=new WeakMap}return{get:e,remove:n,update:r,dispose:i}}function Bu(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Uu(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function $u(){const t=[];let e=0;const n=[],r=[],i=[];function s(){e=0,n.length=0,r.length=0,i.length=0}function a(n,r,i,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}function o(t,e,s,o,l,u){const c=a(t,e,s,o,l,u);s.transmission>0?r.push(c):!0===s.transparent?i.push(c):n.push(c)}function l(t,e,s,o,l,u){const c=a(t,e,s,o,l,u);s.transmission>0?r.unshift(c):!0===s.transparent?i.unshift(c):n.unshift(c)}function u(t,e){n.length>1&&n.sort(t||Bu),r.length>1&&r.sort(e||Uu),i.length>1&&i.sort(e||Uu)}function c(){for(let n=e,r=t.length;n<r;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}}return{opaque:n,transmissive:r,transparent:i,init:s,push:o,unshift:l,finish:c,sort:u}}function qu(){let t=new WeakMap;function e(e,n){let r;return!1===t.has(e)?(r=new $u,t.set(e,[r])):n>=t.get(e).length?(r=new $u,t.get(e).push(r)):r=t.get(e)[n],r}function n(){t=new WeakMap}return{get:e,dispose:n}}function Vu(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new wn,color:new an};break;case"SpotLight":n={position:new wn,direction:new wn,color:new an,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new wn,color:new an,distance:0,decay:0};break;case"HemisphereLight":n={direction:new wn,skyColor:new an,groundColor:new an};break;case"RectAreaLight":n={color:new an,position:new wn,halfWidth:new wn,halfHeight:new wn};break}return t[e.id]=n,n}}}function Hu(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new We};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new We};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new We,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let Wu=0;function Gu(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ju(t,e){const n=new Vu,r=Hu(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let c=0;c<9;c++)i.probe.push(new wn);const s=new wn,a=new Zn,o=new Zn;function l(s,a){let o=0,l=0,u=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let c=0,h=0,d=0,p=0,f=0,m=0,g=0,y=0;s.sort(Gu);const x=!0!==a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,v=e.intensity,b=e.distance,w=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*v*x,l+=a.g*v*x,u+=a.b*v*x;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=w,i.directionalShadowMatrix[c]=e.shadow.matrix,m++}i.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(v*x),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[d]=n,i.spotShadowMap[d]=w,i.spotShadowMatrix[d]=e.shadow.matrix,y++}i.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(a).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=w,i.pointShadowMatrix[h]=e.shadow.matrix,g++}i.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v*x),t.groundColor.copy(e.groundColor).multiplyScalar(v*x),i.hemi[f]=t,f++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=xo.LTC_FLOAT_1,i.rectAreaLTC2=xo.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=xo.LTC_HALF_1,i.rectAreaLTC2=xo.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=u;const v=i.hash;v.directionalLength===c&&v.pointLength===h&&v.spotLength===d&&v.rectAreaLength===p&&v.hemiLength===f&&v.numDirectionalShadows===m&&v.numPointShadows===g&&v.numSpotShadows===y||(i.directional.length=c,i.spot.length=d,i.rectArea.length=p,i.point.length=h,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=y,v.directionalLength=c,v.pointLength=h,v.spotLength=d,v.rectAreaLength=p,v.hemiLength=f,v.numDirectionalShadows=m,v.numPointShadows=g,v.numSpotShadows=y,i.version=Wu++)}function u(t,e){let n=0,r=0,l=0,u=0,c=0;const h=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),n++}else if(e.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),l++}else if(e.isRectAreaLight){const t=i.rectArea[u];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),o.identity(),a.copy(e.matrixWorld),a.premultiply(h),o.extractRotation(a),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),u++}else if(e.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),r++}else if(e.isHemisphereLight){const t=i.hemi[c];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(h),t.direction.normalize(),c++}}}return{setup:l,setupView:u,state:i}}function Xu(t,e){const n=new ju(t,e),r=[],i=[];function s(){r.length=0,i.length=0}function a(t){r.push(t)}function o(t){i.push(t)}function l(t){n.setup(r,t)}function u(t){n.setupView(r,t)}const c={lightsArray:r,shadowsArray:i,lights:n};return{init:s,state:c,setupLights:l,setupLightsView:u,pushLight:a,pushShadow:o}}function Yu(t,e){let n=new WeakMap;function r(r,i=0){let s;return!1===n.has(r)?(s=new Xu(t,e),n.set(r,[s])):i>=n.get(r).length?(s=new Xu(t,e),n.get(r).push(s)):s=n.get(r)[i],s}function i(){n=new WeakMap}return{get:r,dispose:i}}class Ku extends Or{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=Se,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Ku.prototype.isMeshDepthMaterial=!0;class Ju extends Or{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new wn,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}Ju.prototype.isMeshDistanceMaterial=!0;const Zu="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",Qu="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function tc(t,e,n){let r=new Bi;const i=new We,s=new We,a=new pn,l=new Ku({depthPacking:Me}),p=new Ju,m={},g=n.maxTextureSize,y={0:h,1:c,2:d},x=new Ti({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new We},radius:{value:4}},vertexShader:Zu,fragmentShader:Qu}),v=x.clone();v.defines.HORIZONTAL_PASS=1;const b=new Zr;b.setAttribute("position",new Ur(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new gi(b,x),_=this;function S(n,r){const i=e.update(w);x.defines.VSM_SAMPLES!==n.blurSamples&&(x.defines.VSM_SAMPLES=n.blurSamples,v.defines.VSM_SAMPLES=n.blurSamples,x.needsUpdate=!0,v.needsUpdate=!0),x.uniforms.shadow_pass.value=n.map.texture,x.uniforms.resolution.value=n.mapSize,x.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,x,w,null),v.uniforms.shadow_pass.value=n.mapPass.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,v,w,null)}function M(e,n,r,i,s,a){let o=null;const c=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(o=void 0!==c?c:!0===r.isPointLight?p:l,t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const t=o.uuid,e=n.uuid;let r=m[t];void 0===r&&(r={},m[t]=r);let i=r[e];void 0===i&&(i=o.clone(),r[e]=i),o=i}return o.visible=n.visible,o.wireframe=n.wireframe,o.side=a===u?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:y[n.side],o.alphaMap=n.alphaMap,o.alphaTest=n.alphaTest,o.clipShadows=n.clipShadows,o.clippingPlanes=n.clippingPlanes,o.clipIntersection=n.clipIntersection,o.displacementMap=n.displacementMap,o.displacementScale=n.displacementScale,o.displacementBias=n.displacementBias,o.wireframeLinewidth=n.wireframeLinewidth,o.linewidth=n.linewidth,!0===r.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(r.matrixWorld),o.nearDistance=i,o.farDistance=s),o}function T(n,i,s,a,o){if(!1===n.visible)return;const l=n.layers.test(i.layers);if(l&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===u)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let l=0,u=e.length;l<u;l++){const u=e[l],c=i[u.materialIndex];if(c&&c.visible){const e=M(n,c,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,u)}}}else if(i.visible){const e=M(n,i,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)T(c[t],i,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=o,this.render=function(e,n,o){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(f),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let p=0,f=e.length;p<f;p++){const l=e[p],c=l.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;i.copy(c.mapSize);const h=c.getFrameExtents();if(i.multiply(h),s.copy(c.mapSize),(i.x>g||i.y>g)&&(i.x>g&&(s.x=Math.floor(g/h.x),i.x=s.x*h.x,c.mapSize.x=s.x),i.y>g&&(s.y=Math.floor(g/h.y),i.y=s.y*h.y,c.mapSize.y=s.y)),null!==c.map||c.isPointLightShadow||this.type!==u||(c.map=new fn(i.x,i.y),c.map.texture.name=l.name+".shadowMap",c.mapPass=new fn(i.x,i.y),c.camera.updateProjectionMatrix()),null===c.map){const t={minFilter:lt,magFilter:lt,format:At};c.map=new fn(i.x,i.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const f=c.getViewportCount();for(let t=0;t<f;t++){const e=c.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),c.updateMatrices(l,t),r=c.getFrustum(),T(n,o,c.camera,l,this.type)}c.isPointLightShadow||this.type!==u||S(c,o),c.needsUpdate=!1}_.needsUpdate=!1,t.setRenderTarget(l,c,h)}}function ec(t,e,n){const r=n.isWebGL2;function o(){let e=!1;const n=new pn;let r=null;const i=new pn(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,s,a,o){!0===o&&(e*=a,r*=a,s*=a),n.set(e,r,s,a),!1===i.equals(n)&&(t.clearColor(e,r,s,a),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}}function l(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?_t(2929):St(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case O:t.depthFunc(512);break;case F:t.depthFunc(519);break;case z:t.depthFunc(513);break;case B:t.depthFunc(515);break;case U:t.depthFunc(514);break;case $:t.depthFunc(518);break;case q:t.depthFunc(516);break;case V:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}}function u(){let e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(t){e||(t?_t(2960):St(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,a){r===e&&i===n&&s===a||(t.stencilFunc(e,n,a),r=e,i=n,s=a)},setOp:function(e,n,r){a===e&&o===n&&l===r||(t.stencilOp(e,n,r),a=e,o=n,l=r)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null}}}const c=new o,p=new l,H=new u;let W={},G={},j=new WeakMap,X=[],Y=null,K=!1,J=null,Z=null,Q=null,tt=null,et=null,nt=null,rt=null,it=!1,st=null,at=null,ot=null,lt=null,ut=null;const ct=t.getParameter(35661);let ht=!1,dt=0;const pt=t.getParameter(7938);-1!==pt.indexOf("WebGL")?(dt=parseFloat(/^WebGL (\d)/.exec(pt)[1]),ht=dt>=1):-1!==pt.indexOf("OpenGL ES")&&(dt=parseFloat(/^OpenGL ES (\d)/.exec(pt)[1]),ht=dt>=2);let ft=null,mt={};const gt=t.getParameter(3088),yt=t.getParameter(2978),xt=(new pn).fromArray(gt),vt=(new pn).fromArray(yt);function bt(e,n,r){const i=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let a=0;a<r;a++)t.texImage2D(n+a,0,6408,1,1,0,6408,5121,i);return s}const wt={};function _t(e){!0!==W[e]&&(t.enable(e),W[e]=!0)}function St(e){!1!==W[e]&&(t.disable(e),W[e]=!1)}function Mt(e,n){return G[e]!==n&&(t.bindFramebuffer(e,n),G[e]=n,r&&(36009===e&&(G[36160]=n),36160===e&&(G[36009]=n)),!0)}function Tt(r,i){let s=X,a=!1;if(r)if(s=j.get(i),void 0===s&&(s=[],j.set(i,s)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(s.length!==t.length||36064!==s[0]){for(let e=0,n=t.length;e<n;e++)s[e]=36064+e;s.length=t.length,a=!0}}else 36064!==s[0]&&(s[0]=36064,a=!0);else 1029!==s[0]&&(s[0]=1029,a=!0);a&&(n.isWebGL2?t.drawBuffers(s):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))}function Et(e){return Y!==e&&(t.useProgram(e),Y=e,!0)}wt[3553]=bt(3553,3553,1),wt[34067]=bt(34067,34069,6),c.setClear(0,0,0,1),p.setClear(1),H.setClear(0),_t(2929),p.setFunc(B),Rt(!1),Nt(s),_t(2884),It(f);const At={[b]:32774,[w]:32778,[_]:32779};if(r)At[S]=32775,At[M]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(At[S]=t.MIN_EXT,At[M]=t.MAX_EXT)}const Ct={[T]:0,[E]:1,[A]:768,[I]:770,[P]:776,[L]:774,[R]:772,[C]:769,[k]:771,[D]:775,[N]:773};function It(e,n,r,i,s,a,o,l){if(e!==f){if(!1===K&&(_t(3042),K=!0),e===v)s=s||n,a=a||r,o=o||i,n===Z&&s===et||(t.blendEquationSeparate(At[n],At[s]),Z=n,et=s),r===Q&&i===tt&&a===nt&&o===rt||(t.blendFuncSeparate(Ct[r],Ct[i],Ct[a],Ct[o]),Q=r,tt=i,nt=a,rt=o),J=e,it=null;else if(e!==J||l!==it){if(Z===b&&et===b||(t.blendEquation(32774),Z=b,et=b),l)switch(e){case m:t.blendFuncSeparate(1,771,1,771);break;case g:t.blendFunc(1,1);break;case y:t.blendFuncSeparate(0,769,0,1);break;case x:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case m:t.blendFuncSeparate(770,771,1,771);break;case g:t.blendFunc(770,1);break;case y:t.blendFuncSeparate(0,769,0,1);break;case x:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}Q=null,tt=null,nt=null,rt=null,J=e,it=l}}else!0===K&&(St(3042),K=!1)}function kt(t,e){t.side===d?St(2884):_t(2884);let n=t.side===h;e&&(n=!n),Rt(n),t.blending===m&&!1===t.transparent?It(f):It(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),p.setFunc(t.depthFunc),p.setTest(t.depthTest),p.setMask(t.depthWrite),c.setMask(t.colorWrite);const r=t.stencilWrite;H.setTest(r),r&&(H.setMask(t.stencilWriteMask),H.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),H.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Dt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?_t(32926):St(32926)}function Rt(e){st!==e&&(e?t.frontFace(2304):t.frontFace(2305),st=e)}function Nt(e){e!==i?(_t(2884),e!==at&&(e===s?t.cullFace(1029):e===a?t.cullFace(1028):t.cullFace(1032))):St(2884),at=e}function Lt(e){e!==ot&&(ht&&t.lineWidth(e),ot=e)}function Dt(e,n,r){e?(_t(32823),lt===n&&ut===r||(t.polygonOffset(n,r),lt=n,ut=r)):St(32823)}function Pt(t){t?_t(3089):St(3089)}function Ot(e){void 0===e&&(e=33984+ct-1),ft!==e&&(t.activeTexture(e),ft=e)}function Ft(e,n){null===ft&&Ot();let r=mt[ft];void 0===r&&(r={type:void 0,texture:void 0},mt[ft]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||wt[e]),r.type=e,r.texture=n)}function zt(){const e=mt[ft];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)}function Bt(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ut(){try{t.texSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function $t(){try{t.texSubImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function qt(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Vt(){try{t.texStorage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ht(){try{t.texStorage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Wt(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Gt(){try{t.texImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function jt(e){!1===xt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),xt.copy(e))}function Xt(e){!1===vt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),vt.copy(e))}function Yt(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),W={},ft=null,mt={},G={},j=new WeakMap,X=[],Y=null,K=!1,J=null,Z=null,Q=null,tt=null,et=null,nt=null,rt=null,it=!1,st=null,at=null,ot=null,lt=null,ut=null,xt.set(0,0,t.canvas.width,t.canvas.height),vt.set(0,0,t.canvas.width,t.canvas.height),c.reset(),p.reset(),H.reset()}return{buffers:{color:c,depth:p,stencil:H},enable:_t,disable:St,bindFramebuffer:Mt,drawBuffers:Tt,useProgram:Et,setBlending:It,setMaterial:kt,setFlipSided:Rt,setCullFace:Nt,setLineWidth:Lt,setPolygonOffset:Dt,setScissorTest:Pt,activeTexture:Ot,bindTexture:Ft,unbindTexture:zt,compressedTexImage2D:Bt,texImage2D:Wt,texImage3D:Gt,texStorage2D:Vt,texStorage3D:Ht,texSubImage2D:Ut,texSubImage3D:$t,compressedTexSubImage2D:qt,scissor:jt,viewport:Xt,reset:Yt}}function nc(t,e,n,r,i,s,a){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let m;const g=new WeakMap;let y=!1;try{y="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(it){}function x(t,e){return y?new OffscreenCanvas(t,e):Xe("canvas")}function v(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?He:Math.floor,s=r(i*t.width),a=r(i*t.height);void 0===m&&(m=x(s,a));const o=n?x(s,a):m;o.width=s,o.height=a;const l=o.getContext("2d");return l.drawImage(t,0,0,s,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+a+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function b(t){return Ve(t.width)&&Ve(t.height)}function w(t){return!o&&(t.wrapS!==at||t.wrapT!==at||t.minFilter!==lt&&t.minFilter!==ht)}function _(t,e){return t.generateMipmaps&&e&&t.minFilter!==lt&&t.minFilter!==ht}function S(e){t.generateMipmap(e)}function M(n,r,i,s,a=!1){if(!1===o)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;return 6403===r&&(5126===i&&(l=33326),5131===i&&(l=33325),5121===i&&(l=33321)),33319===r&&(5126===i&&(l=33328),5131===i&&(l=33327),5121===i&&(l=33323)),6408===r&&(5126===i&&(l=34836),5131===i&&(l=34842),5121===i&&(l=s===_e&&!1===a?35907:32856),32819===i&&(l=32854),32820===i&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function T(t,e,n){return!0===_(t,n)||t.isFramebufferTexture&&t.minFilter!==lt&&t.minFilter!==ht?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function E(t){return t===lt||t===ut||t===ct?9728:9729}function A(t){const e=t.target;e.removeEventListener("dispose",A),I(e),e.isVideoTexture&&f.delete(e)}function C(t){const e=t.target;e.removeEventListener("dispose",C),R(e)}function I(t){const e=r.get(t);if(void 0===e.__webglInit)return;const n=t.source,i=g.get(n);if(i){const r=i[e.__cacheKey];r.usedTimes--,0===r.usedTimes&&k(t),0===Object.keys(i).length&&g.delete(n)}r.remove(t)}function k(e){const n=r.get(e);t.deleteTexture(n.__webglTexture);const i=e.source,s=g.get(i);delete s[n.__cacheKey],a.memory.textures--}function R(e){const n=e.texture,i=r.get(e),s=r.get(n);if(void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let r=0;r<6;r++)t.deleteFramebuffer(i.__webglFramebuffer[r]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[r]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let o=0,l=n.length;o<l;o++){const e=r.get(n[o]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),a.memory.textures--),r.remove(n[o])}r.remove(n),r.remove(e)}let N=0;function L(){N=0}function D(){const t=N;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),N+=1,t}function P(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}function O(t,e){const i=r.get(t);if(t.isVideoTexture&&nt(t),!1===t.isRenderTargetTexture&&t.version>0&&i.__version!==t.version){const n=t.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void H(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function F(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?H(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))}function z(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?H(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))}function B(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?W(i,t,e):(n.activeTexture(33984+e),n.bindTexture(34067,i.__webglTexture))}const U={[st]:10497,[at]:33071,[ot]:33648},$={[lt]:9728,[ut]:9984,[ct]:9986,[ht]:9729,[dt]:9985,[pt]:9987};function q(n,s,a){if(a?(t.texParameteri(n,10242,U[s.wrapS]),t.texParameteri(n,10243,U[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,U[s.wrapR]),t.texParameteri(n,10240,$[s.magFilter]),t.texParameteri(n,10241,$[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===at&&s.wrapT===at||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,E(s.magFilter)),t.texParameteri(n,10241,E(s.minFilter)),s.minFilter!==lt&&s.minFilter!==ht&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const a=e.get("EXT_texture_filter_anisotropic");if(s.type===bt&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&s.type===wt&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||r.get(s).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy)}}function V(e,n){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",A));const i=n.source;let s=g.get(i);void 0===s&&(s={},g.set(i,s));const o=P(n);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,r=!0),s[o].usedTimes++;const i=s[e.__cacheKey];void 0!==i&&(s[e.__cacheKey].usedTimes--,0===i.usedTimes&&k(n)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return r}function H(e,r,i){let a=3553;r.isDataArrayTexture&&(a=35866),r.isData3DTexture&&(a=32879);const l=V(e,r),u=r.source;if(n.activeTexture(33984+i),n.bindTexture(a,e.__webglTexture),u.version!==u.__currentVersion||!0===l){t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const i=w(r)&&!1===b(r.image);let l=v(r.image,i,!1,c);l=rt(r,l);const h=b(l)||o,d=s.convert(r.format,r.encoding);let p,f=s.convert(r.type),m=M(r.internalFormat,d,f,r.encoding,r.isVideoTexture);q(a,r,h);const g=r.mipmaps,y=o&&!0!==r.isVideoTexture,x=void 0===e.__version,E=T(r,l,h);if(r.isDepthTexture)m=6402,o?m=r.type===bt?36012:r.type===vt?33190:r.type===Mt?35056:33189:r.type===bt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===kt&&6402===m&&r.type!==yt&&r.type!==vt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=yt,f=s.convert(r.type)),r.format===Rt&&6402===m&&(m=34041,r.type!==Mt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Mt,f=s.convert(r.type))),y&&x?n.texStorage2D(3553,1,m,l.width,l.height):n.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(r.isDataTexture)if(g.length>0&&h){y&&x&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],y?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1}else y?(x&&n.texStorage2D(3553,E,m,l.width,l.height),n.texSubImage2D(3553,0,0,0,l.width,l.height,d,f,l.data)):n.texImage2D(3553,0,m,l.width,l.height,0,d,f,l.data);else if(r.isCompressedTexture){y&&x&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],r.format!==At?null!==d?y?n.compressedTexSubImage2D(3553,t,0,0,p.width,p.height,d,p.data):n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):y?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data)}else if(r.isDataArrayTexture)y?(x&&n.texStorage3D(35866,E,m,l.width,l.height,l.depth),n.texSubImage3D(35866,0,0,0,0,l.width,l.height,l.depth,d,f,l.data)):n.texImage3D(35866,0,m,l.width,l.height,l.depth,0,d,f,l.data);else if(r.isData3DTexture)y?(x&&n.texStorage3D(32879,E,m,l.width,l.height,l.depth),n.texSubImage3D(32879,0,0,0,0,l.width,l.height,l.depth,d,f,l.data)):n.texImage3D(32879,0,m,l.width,l.height,l.depth,0,d,f,l.data);else if(r.isFramebufferTexture)y&&x?n.texStorage2D(3553,E,m,l.width,l.height):n.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(g.length>0&&h){y&&x&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],y?n.texSubImage2D(3553,t,0,0,d,f,p):n.texImage2D(3553,t,m,d,f,p);r.generateMipmaps=!1}else y?(x&&n.texStorage2D(3553,E,m,l.width,l.height),n.texSubImage2D(3553,0,0,0,d,f,l)):n.texImage2D(3553,0,m,d,f,l);_(r,h)&&S(a),u.__currentVersion=u.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function W(e,r,i){if(6!==r.image.length)return;const a=V(e,r),l=r.source;if(n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),l.version!==l.__currentVersion||!0===a){t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const i=r.isCompressedTexture||r.image[0].isCompressedTexture,a=r.image[0]&&r.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=i||a?a?r.image[t].image:r.image[t]:v(r.image[t],!1,!0,u),c[t]=rt(r,c[t]);const h=c[0],d=b(h)||o,p=s.convert(r.format,r.encoding),f=s.convert(r.type),m=M(r.internalFormat,p,f,r.encoding),g=o&&!0!==r.isVideoTexture,y=void 0===e.__version;let x,w=T(r,h,d);if(q(34067,r,d),i){g&&y&&n.texStorage2D(34067,w,m,h.width,h.height);for(let t=0;t<6;t++){x=c[t].mipmaps;for(let e=0;e<x.length;e++){const i=x[e];r.format!==At?null!==p?g?n.compressedTexSubImage2D(34069+t,e,0,0,i.width,i.height,p,i.data):n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?n.texSubImage2D(34069+t,e,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e,m,i.width,i.height,0,p,f,i.data)}}}else{x=r.mipmaps,g&&y&&(x.length>0&&w++,n.texStorage2D(34067,w,m,c[0].width,c[0].height));for(let t=0;t<6;t++)if(a){g?n.texSubImage2D(34069+t,0,0,0,c[t].width,c[t].height,p,f,c[t].data):n.texImage2D(34069+t,0,m,c[t].width,c[t].height,0,p,f,c[t].data);for(let e=0;e<x.length;e++){const r=x[e],i=r.image[t].image;g?n.texSubImage2D(34069+t,e+1,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e+1,m,i.width,i.height,0,p,f,i.data)}}else{g?n.texSubImage2D(34069+t,0,0,0,p,f,c[t]):n.texImage2D(34069+t,0,m,p,f,c[t]);for(let e=0;e<x.length;e++){const r=x[e];g?n.texSubImage2D(34069+t,e+1,0,0,p,f,r.image[t]):n.texImage2D(34069+t,e+1,m,p,f,r.image[t])}}}_(r,d)&&S(34067),l.__currentVersion=l.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function G(e,i,a,o,l){const u=s.convert(a.format,a.encoding),c=s.convert(a.type),h=M(a.internalFormat,u,c,a.encoding),p=r.get(i);p.__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,i.width,i.height,i.depth,0,u,c,null):n.texImage2D(l,0,h,i.width,i.height,0,u,c,null)),n.bindFramebuffer(36160,e),et(i)?d.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(a).__webglTexture,0,tt(i)):t.framebufferTexture2D(36160,o,l,r.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function j(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||et(n)){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===bt?i=36012:e.type===vt&&(i=33190));const r=tt(n);et(n)?d.renderbufferStorageMultisampleEXT(36161,r,i,n.width,n.height):t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const i=tt(n);r&&!1===et(n)?t.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):et(n)?d.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,i=s.convert(e.format,e.encoding),a=s.convert(e.type),o=M(e.internalFormat,i,a,e.encoding),l=tt(n);r&&!1===et(n)?t.renderbufferStorageMultisample(36161,l,o,n.width,n.height):et(n)?d.renderbufferStorageMultisampleEXT(36161,l,o,n.width,n.height):t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function X(e,i){const s=i&&i.isWebGLCubeRenderTarget;if(s)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),O(i.depthTexture,0);const a=r.get(i.depthTexture).__webglTexture,o=tt(i);if(i.depthTexture.format===kt)et(i)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,o):t.framebufferTexture2D(36160,36096,3553,a,0);else{if(i.depthTexture.format!==Rt)throw new Error("Unknown depthTexture format");et(i)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,o):t.framebufferTexture2D(36160,33306,3553,a,0)}}function Y(e){const i=r.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");X(i.__webglFramebuffer,e)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),j(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),j(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function K(t,e,n){const i=r.get(t);void 0!==e&&G(i.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&Y(t)}function J(e){const l=e.texture,u=r.get(e),c=r.get(l);e.addEventListener("dispose",C),!0!==e.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=t.createTexture()),c.__version=l.version,a.memory.textures++);const h=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=b(e)||o;if(h){u.__webglFramebuffer=[];for(let e=0;e<6;e++)u.__webglFramebuffer[e]=t.createFramebuffer()}else if(u.__webglFramebuffer=t.createFramebuffer(),d)if(i.drawBuffers){const n=e.texture;for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&e.samples>0&&!1===et(e)){u.__webglMultisampledFramebuffer=t.createFramebuffer(),u.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,u.__webglColorRenderbuffer);const r=s.convert(l.format,l.encoding),i=s.convert(l.type),a=M(l.internalFormat,r,i,l.encoding),o=tt(e);t.renderbufferStorageMultisample(36161,o,a,e.width,e.height),n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,u.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(u.__webglDepthRenderbuffer=t.createRenderbuffer(),j(u.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}if(h){n.bindTexture(34067,c.__webglTexture),q(34067,l,p);for(let t=0;t<6;t++)G(u.__webglFramebuffer[t],e,l,36064,34069+t);_(l,p)&&S(34067),n.unbindTexture()}else if(d){const t=e.texture;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=r.get(s);n.bindTexture(3553,a.__webglTexture),q(3553,s,p),G(u.__webglFramebuffer,e,s,36064+i,3553),_(s,p)&&S(3553)}n.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(o?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(t,c.__webglTexture),q(t,l,p),G(u.__webglFramebuffer,e,l,36064,t),_(l,p)&&S(t),n.unbindTexture()}e.depthBuffer&&Y(e)}function Z(t){const e=b(t)||o,i=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,a=i.length;s<a;s++){const a=i[s];if(_(a,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,i=r.get(a).__webglTexture;n.bindTexture(e,i),S(e),n.unbindTexture()}}}function Q(e){if(o&&e.samples>0&&!1===et(e)){const i=e.width,s=e.height;let a=16384;const o=[36064],l=e.stencilBuffer?33306:36096;e.depthBuffer&&o.push(l);const u=r.get(e),c=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;!1===c&&(e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024)),n.bindFramebuffer(36008,u.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,u.__webglFramebuffer),!0===c&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),t.blitFramebuffer(0,0,i,s,0,0,i,s,a,9728),p&&t.invalidateFramebuffer(36008,o),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,u.__webglMultisampledFramebuffer)}}function tt(t){return Math.min(h,t.samples)}function et(t){const n=r.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function nt(t){const e=a.render.frame;f.get(t)!==e&&(f.set(t,e),t.update())}function rt(t,n){const r=t.encoding,i=t.format,s=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===De||r!==we&&(r===_e?!1===o?!0===e.has("EXT_sRGB")&&i===At?(t.format=De,t.minFilter=ht,t.generateMipmaps=!1):n=ln.sRGBToLinear(n):i===At&&s===ft||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),n}this.allocateTextureUnit=D,this.resetTextureUnits=L,this.setTexture2D=O,this.setTexture2DArray=F,this.setTexture3D=z,this.setTextureCube=B,this.rebindTextures=K,this.setupRenderTarget=J,this.updateRenderTargetMipmap=Z,this.updateMultisampleRenderTarget=Q,this.setupDepthRenderbuffer=Y,this.setupFrameBufferTexture=G,this.useMultisampledRTT=et}function rc(t,e,n){const r=n.isWebGL2;function i(t,n=null){let i;if(t===ft)return 5121;if(t===_t)return 32819;if(t===St)return 32820;if(t===mt)return 5120;if(t===gt)return 5122;if(t===yt)return 5123;if(t===xt)return 5124;if(t===vt)return 5125;if(t===bt)return 5126;if(t===wt)return r?5131:(i=e.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(t===Tt)return 6406;if(t===At)return 6408;if(t===Ct)return 6409;if(t===It)return 6410;if(t===kt)return 6402;if(t===Rt)return 34041;if(t===Nt)return 6403;if(t===Et)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(t===De)return i=e.get("EXT_sRGB"),null!==i?i.SRGB_ALPHA_EXT:null;if(t===Lt)return 36244;if(t===Dt)return 33319;if(t===Pt)return 33320;if(t===Ot)return 36249;if(t===Ft||t===zt||t===Bt||t===Ut)if(n===_e){if(i=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(t===Ft)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===zt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===Bt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===Ut)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=e.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(t===Ft)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===zt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Bt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Ut)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===$t||t===qt||t===Vt||t===Ht){if(i=e.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(t===$t)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===qt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Vt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Ht)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Wt)return i=e.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(t===Gt||t===jt){if(i=e.get("WEBGL_compressed_texture_etc"),null===i)return null;if(t===Gt)return n===_e?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(t===jt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(t===Xt||t===Yt||t===Kt||t===Jt||t===Zt||t===Qt||t===te||t===ee||t===ne||t===re||t===ie||t===se||t===ae||t===oe){if(i=e.get("WEBGL_compressed_texture_astc"),null===i)return null;if(t===Xt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===Yt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===Kt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===Jt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===Zt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===Qt)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===te)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===ee)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===ne)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===re)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===ie)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===se)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===ae)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===oe)return n===_e?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(t===le){if(i=e.get("EXT_texture_compression_bptc"),null===i)return null;if(t===le)return n===_e?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}return t===Mt?r?34042:(i=e.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}return{convert:i}}class ic extends Ai{constructor(t=[]){super(),this.cameras=t}}ic.prototype.isArrayCamera=!0;class sc extends Sr{constructor(){super(),this.type="Group"}}sc.prototype.isGroup=!0;const ac={type:"move"};class oc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new sc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new sc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new wn,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new wn),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new sc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new wn,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new wn),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==a&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ac))),l&&t.hand){s=!0;for(const s of t.hand.values()){const t=e.getJointPose(s,n);if(void 0===l.joints[s.jointName]){const t=new sc;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[s.jointName]=t,l.add(t)}const r=l.joints[s.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],a=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),this}}class lc extends dn{constructor(t,e,n,r,i,s,a,o,l,u){if(u=void 0!==u?u:kt,u!==kt&&u!==Rt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===kt&&(n=yt),void 0===n&&u===Rt&&(n=Mt),super(null,r,i,s,a,o,u,n,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:lt,this.minFilter=void 0!==o?o:lt,this.flipY=!1,this.generateMipmaps=!1}}lc.prototype.isDepthTexture=!0;class uc extends Pe{constructor(t,e){super();const n=this;let r=null,i=1,s=null,a="local-floor",o=null,l=null,u=null,c=null,h=null;const d=e.getContextAttributes();let p=null,f=null;const m=[],g=new Map,y=new Ai;y.layers.enable(1),y.viewport=new pn;const x=new Ai;x.layers.enable(2),x.viewport=new pn;const v=[y,x],b=new ic;b.layers.enable(1),b.layers.enable(2);let w=null,_=null;function S(t){const e=g.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function M(){g.forEach((function(t,e){t.disconnect(e)})),g.clear(),w=null,_=null,t.setRenderTarget(p),c=null,u=null,l=null,r=null,f=null,N.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function T(t){const e=r.inputSources;for(let n=0;n<m.length;n++)g.set(e[n],m[n]);for(let n=0;n<t.removed.length;n++){const e=t.removed[n],r=g.get(e);r&&(r.dispatchEvent({type:"disconnected",data:e}),g.delete(e))}for(let n=0;n<t.added.length;n++){const e=t.added[n],r=g.get(e);r&&r.dispatchEvent({type:"connected",data:e})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=m[t];return void 0===e&&(e=new oc,m[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=m[t];return void 0===e&&(e=new oc,m[t]=e),e.getGripSpace()},this.getHand=function(t){let e=m[t];return void 0===e&&(e=new oc,m[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return null!==u?u:c},this.getBinding=function(){return l},this.getFrame=function(){return h},this.getSession=function(){return r},this.setSession=async function(o){if(r=o,null!==r){if(p=t.getRenderTarget(),r.addEventListener("select",S),r.addEventListener("selectstart",S),r.addEventListener("selectend",S),r.addEventListener("squeeze",S),r.addEventListener("squeezestart",S),r.addEventListener("squeezeend",S),r.addEventListener("end",M),r.addEventListener("inputsourceschange",T),!0!==d.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||d.antialias,alpha:d.alpha,depth:d.depth,stencil:d.stencil,framebufferScaleFactor:i};c=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:c}),f=new fn(c.framebufferWidth,c.framebufferHeight,{format:At,type:ft,encoding:t.outputEncoding})}else{let n=null,s=null,a=null;d.depth&&(a=d.stencil?35056:33190,n=d.stencil?Rt:kt,s=d.stencil?Mt:yt);const o={colorFormat:t.outputEncoding===_e?35907:32856,depthFormat:a,scaleFactor:i};l=new XRWebGLBinding(r,e),u=l.createProjectionLayer(o),r.updateRenderState({layers:[u]}),f=new fn(u.textureWidth,u.textureHeight,{format:At,type:ft,depthTexture:new lc(u.textureWidth,u.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:d.stencil,encoding:t.outputEncoding,samples:d.antialias?4:0});const c=t.properties.get(f);c.__ignoreDepthValues=u.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),s=await r.requestReferenceSpace(a),N.setContext(r),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const E=new wn,A=new wn;function C(t,e,n){E.setFromMatrixPosition(e.matrixWorld),A.setFromMatrixPosition(n.matrixWorld);const r=E.distanceTo(A),i=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+f,y=o+f,x=d-m,v=p+(r-m),b=l*o/y*g,w=u*o/y*g;t.projectionMatrix.makePerspective(x,v,b,w,g,y)}function I(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;b.near=x.near=y.near=t.near,b.far=x.far=y.far=t.far,w===b.near&&_===b.far||(r.updateRenderState({depthNear:b.near,depthFar:b.far}),w=b.near,_=b.far);const e=t.parent,n=b.cameras;I(b,e);for(let r=0;r<n.length;r++)I(n[r],e);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),t.position.copy(b.position),t.quaternion.copy(b.quaternion),t.scale.copy(b.scale),t.matrix.copy(b.matrix),t.matrixWorld.copy(b.matrixWorld);const i=t.children;for(let r=0,s=i.length;r<s;r++)i[r].updateMatrixWorld(!0);2===n.length?C(b,y,x):b.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=t)};let k=null;function R(e,n){if(o=n.getViewerPose(s),h=n,null!==o){const e=o.views;null!==c&&(t.setRenderTargetFramebuffer(f,c.framebuffer),t.setRenderTarget(f));let n=!1;e.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let s=null;if(null!==c)s=c.getViewport(i);else{const e=l.getViewSubImage(u,i);s=e.viewport,0===r&&(t.setRenderTargetTextures(f,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(f))}const a=v[r];a.matrix.fromArray(i.transform.matrix),a.projectionMatrix.fromArray(i.projectionMatrix),a.viewport.set(s.x,s.y,s.width,s.height),0===r&&b.matrix.copy(a.matrix),!0===n&&b.cameras.push(a)}}const i=r.inputSources;for(let t=0;t<m.length;t++){const e=m[t],r=i[t];e.update(r,n,s)}k&&k(e,n),h=null}const N=new Ui;N.setAnimationLoop(R),this.setAnimationLoop=function(t){k=t},this.dispose=function(){}}}function cc(t,e){function n(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}function r(t,e,n,r,h){e.isMeshBasicMaterial||e.isMeshLambertMaterial?i(t,e):e.isMeshToonMaterial?(i(t,e),c(t,e)):e.isMeshPhongMaterial?(i(t,e),u(t,e)):e.isMeshStandardMaterial?(i(t,e),d(t,e),e.isMeshPhysicalMaterial&&p(t,e,h)):e.isMeshMatcapMaterial?(i(t,e),f(t,e)):e.isMeshDepthMaterial?i(t,e):e.isMeshDistanceMaterial?(i(t,e),m(t,e)):e.isMeshNormalMaterial?i(t,e):e.isLineBasicMaterial?(s(t,e),e.isLineDashedMaterial&&a(t,e)):e.isPointsMaterial?o(t,e,n,r):e.isSpriteMaterial?l(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}function i(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map),r.alphaMap&&(n.alphaMap.value=r.alphaMap),r.bumpMap&&(n.bumpMap.value=r.bumpMap,n.bumpScale.value=r.bumpScale,r.side===h&&(n.bumpScale.value*=-1)),r.displacementMap&&(n.displacementMap.value=r.displacementMap,n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap),r.normalMap&&(n.normalMap.value=r.normalMap,n.normalScale.value.copy(r.normalScale),r.side===h&&n.normalScale.value.negate()),r.specularMap&&(n.specularMap.value=r.specularMap),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);const i=e.get(r).envMap;if(i&&(n.envMap.value=i,n.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*e}let s,a;r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity),r.map?s=r.map:r.specularMap?s=r.specularMap:r.displacementMap?s=r.displacementMap:r.normalMap?s=r.normalMap:r.bumpMap?s=r.bumpMap:r.roughnessMap?s=r.roughnessMap:r.metalnessMap?s=r.metalnessMap:r.alphaMap?s=r.alphaMap:r.emissiveMap?s=r.emissiveMap:r.clearcoatMap?s=r.clearcoatMap:r.clearcoatNormalMap?s=r.clearcoatNormalMap:r.clearcoatRoughnessMap?s=r.clearcoatRoughnessMap:r.specularIntensityMap?s=r.specularIntensityMap:r.specularColorMap?s=r.specularColorMap:r.transmissionMap?s=r.transmissionMap:r.thicknessMap?s=r.thicknessMap:r.sheenColorMap?s=r.sheenColorMap:r.sheenRoughnessMap&&(s=r.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uvTransform.value.copy(s.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))}function s(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}function a(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function o(t,e,n,r){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}function l(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function u(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}function c(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}function d(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap);const r=e.get(n).envMap;r&&(t.envMapIntensity.value=n.envMapIntensity)}function p(t,e,n){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===h&&t.clearcoatNormalScale.value.negate())),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}function f(t,e){e.matcap&&(t.matcap.value=e.matcap)}function m(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function hc(){const t=Xe("canvas");return t.style.display="block",t}function dc(t={}){const e=void 0!==t.canvas?t.canvas:hc(),n=void 0!==t.context?t.context:null,i=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,u=void 0!==t.powerPreference?t.powerPreference:"default",p=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let f;f=void 0!==t.context?n.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let m=null,g=null;const y=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=we,this.physicallyCorrectLights=!1,this.toneMapping=j,this.toneMappingExposure=1;const v=this;let b=!1,w=0,_=0,S=null,M=-1,T=null;const E=new pn,A=new pn;let C=null,I=e.width,k=e.height,R=1,N=null,L=null;const D=new pn(0,0,I,k),P=new pn(0,0,I,k);let O=!1;const F=new Bi;let z=!1,B=!1,U=null;const $=new Zn,q=new We,V=new wn,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function W(){return null===S?R:1}let G,X,Y,K,J,Z,Q,tt,et,nt,rt,it,st,at,ot,lt,ut,ct,ht,dt,mt,gt,yt,xt=n;function vt(t,n){for(let r=0;r<t.length;r++){const i=t[r],s=e.getContext(i,n);if(null!==s)return s}return null}try{const t={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:p};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r"+r),e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",Tt,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===v.isWebGL1Renderer&&e.shift(),xt=vt(e,t),null===xt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Wt){throw console.error("THREE.WebGLRenderer: "+Wt.message),Wt}function _t(){G=new Wo(xt),X=new So(xt,G,t),G.init(X),gt=new rc(xt,G,X),Y=new ec(xt,G,X),K=new Xo(xt),J=new zu,Z=new nc(xt,G,Y,J,X,gt,K),Q=new To(v),tt=new Ho(v),et=new $i(xt,X),yt=new wo(xt,G,et,X),nt=new Go(xt,et,K,yt),rt=new Qo(xt,nt,et,K),ht=new Zo(xt,X,Z),lt=new Mo(J),it=new Fu(v,Q,tt,G,X,yt,lt),st=new cc(v,J),at=new qu,ot=new Yu(G,X),ct=new bo(v,Q,Y,rt,f,o),ut=new tc(v,rt,X),dt=new _o(xt,G,K,X),mt=new jo(xt,G,K,X),K.programs=it.programs,v.capabilities=X,v.extensions=G,v.properties=J,v.renderLists=at,v.shadowMap=ut,v.state=Y,v.info=K}_t();const St=new uc(v,xt);function Mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Tt(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const t=K.autoReset,e=ut.enabled,n=ut.autoUpdate,r=ut.needsUpdate,i=ut.type;_t(),K.autoReset=t,ut.enabled=e,ut.autoUpdate=n,ut.needsUpdate=r,ut.type=i}function Et(t){const e=t.target;e.removeEventListener("dispose",Et),Ct(e)}function Ct(t){It(t),J.remove(t)}function It(t){const e=J.get(t).programs;void 0!==e&&(e.forEach((function(t){it.releaseProgram(t)})),t.isShaderMaterial&&it.releaseShaderCache(t))}this.xr=St,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=G.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=G.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(t){void 0!==t&&(R=t,this.setSize(I,k,!1))},this.getSize=function(t){return t.set(I,k)},this.setSize=function(t,n,r){St.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(I=t,k=n,e.width=Math.floor(t*R),e.height=Math.floor(n*R),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(I*R,k*R).floor()},this.setDrawingBufferSize=function(t,n,r){I=t,k=n,R=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(D)},this.setViewport=function(t,e,n,r){t.isVector4?D.set(t.x,t.y,t.z,t.w):D.set(t,e,n,r),Y.viewport(E.copy(D).multiplyScalar(R).floor())},this.getScissor=function(t){return t.copy(P)},this.setScissor=function(t,e,n,r){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,n,r),Y.scissor(A.copy(P).multiplyScalar(R).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){Y.setScissorTest(O=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){L=t},this.getClearColor=function(t){return t.copy(ct.getClearColor())},this.setClearColor=function(){ct.setClearColor.apply(ct,arguments)},this.getClearAlpha=function(){return ct.getClearAlpha()},this.setClearAlpha=function(){ct.setClearAlpha.apply(ct,arguments)},this.clear=function(t=!0,e=!0,n=!0){let r=0;t&&(r|=16384),e&&(r|=256),n&&(r|=1024),xt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",Tt,!1),at.dispose(),ot.dispose(),J.dispose(),Q.dispose(),tt.dispose(),rt.dispose(),yt.dispose(),it.dispose(),St.dispose(),St.removeEventListener("sessionstart",Nt),St.removeEventListener("sessionend",Lt),U&&(U.dispose(),U=null),Dt.stop()},this.renderBufferDirect=function(t,e,n,r,i,s){null===e&&(e=H);const a=i.isMesh&&i.matrixWorld.determinant()<0,o=qt(t,e,n,r,i);Y.setMaterial(r,a);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=nt.getWireframeAttribute(n),h=2),yt.setup(i,r,o,n,l);let d=dt;null!==l&&(c=et.get(l),d=mt,d.setIndex(c));const p=null!==l?l.count:u.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==s?s.start*h:0,y=null!==s?s.count*h:1/0,x=Math.max(f,g),v=Math.min(p,f+m,g+y)-1,b=Math.max(0,v-x+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(Y.setLineWidth(r.wireframeLinewidth*W()),d.setMode(1)):d.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),Y.setLineWidth(t*W()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(x,b,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(x,b,t)}else d.render(x,b)}},this.compile=function(t,e){g=ot.get(t),g.init(),x.push(g),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(g.pushLight(t),t.castShadow&&g.pushShadow(t))})),g.setupLights(v.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){const i=n[r];Ut(i,t,e)}else Ut(n,t,e)})),x.pop(),g=null};let kt=null;function Rt(t){kt&&kt(t)}function Nt(){Dt.stop()}function Lt(){Dt.start()}const Dt=new Ui;function Pt(t,e,n,r){if(!1===t.visible)return;const i=t.layers.test(e.layers);if(i)if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)g.pushLight(t),t.castShadow&&g.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4($);const e=rt.update(t),i=t.material;i.visible&&m.push(t,e,i,n,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==K.render.frame&&(t.skeleton.update(),t.skeleton.frame=K.render.frame),!t.frustumCulled||F.intersectsObject(t))){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4($);const e=rt.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i[a.materialIndex];o&&o.visible&&m.push(t,e,o,n,V.z,a)}}else i.visible&&m.push(t,e,i,n,V.z,null)}const s=t.children;for(let a=0,o=s.length;a<o;a++)Pt(s[a],e,n,r)}function Ot(t,e,n,r){const i=t.opaque,s=t.transmissive,a=t.transparent;g.setupLightsView(n),s.length>0&&Ft(i,e,n),r&&Y.viewport(E.copy(r)),i.length>0&&zt(i,e,n),s.length>0&&zt(s,e,n),a.length>0&&zt(a,e,n),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Ft(t,e,n){const r=X.isWebGL2;null===U&&(U=new fn(1,1,{generateMipmaps:!0,type:null!==gt.convert(wt)?wt:ft,minFilter:pt,samples:r&&!0===a?4:0})),v.getDrawingBufferSize(q),r?U.setSize(q.x,q.y):U.setSize(He(q.x),He(q.y));const i=v.getRenderTarget();v.setRenderTarget(U),v.clear();const s=v.toneMapping;v.toneMapping=j,zt(t,e,n),v.toneMapping=s,Z.updateMultisampleRenderTarget(U),Z.updateRenderTargetMipmap(U),v.setRenderTarget(i)}function zt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=s.object,o=s.geometry,l=null===r?s.material:r,u=s.group;a.layers.test(n.layers)&&Bt(a,e,n,o,l,u)}}function Bt(t,e,n,r,i,s){t.onBeforeRender(v,e,n,r,i,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),i.onBeforeRender(v,e,n,r,t,s),!0===i.transparent&&i.side===d?(i.side=h,i.needsUpdate=!0,v.renderBufferDirect(n,e,r,i,t,s),i.side=c,i.needsUpdate=!0,v.renderBufferDirect(n,e,r,i,t,s),i.side=d):v.renderBufferDirect(n,e,r,i,t,s),t.onAfterRender(v,e,n,r,i,s)}function Ut(t,e,n){!0!==e.isScene&&(e=H);const r=J.get(t),i=g.state.lights,s=g.state.shadowsArray,a=i.state.version,o=it.getParameters(t,i.state,s,e,n),l=it.getProgramCacheKey(o);let u=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?tt:Q).get(t.envMap||r.environment),void 0===u&&(t.addEventListener("dispose",Et),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return $t(t,o),c}else o.uniforms=it.getUniforms(t),t.onBuild(n,o,v),t.onBeforeCompile(o,v),c=it.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=lt.uniform),$t(t,o),r.needsLights=Ht(t),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=c.getUniforms(),p=su.seqWithValue(d.seq,h);return r.currentProgram=c,r.uniformsList=p,c}function $t(t,e){const n=J.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}function qt(t,e,n,r,i){!0!==e.isScene&&(e=H),Z.resetTextureUnits();const s=e.fog,a=r.isMeshStandardMaterial?e.environment:null,o=null===S?v.outputEncoding:!0===S.isXRRenderTarget?S.texture.encoding:we,l=(r.isMeshStandardMaterial?tt:Q).get(r.envMap||a),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!r.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color,f=r.toneMapped?v.toneMapping:j,m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,y=void 0!==m?m.length:0,x=J.get(r),b=g.state.lights;if(!0===z&&(!0===B||t!==T)){const e=t===T&&r.id===M;lt.setState(r,t,e)}let w=!1;r.version===x.__version?x.needsLights&&x.lightsStateVersion!==b.state.version||x.outputEncoding!==o||i.isInstancedMesh&&!1===x.instancing?w=!0:i.isInstancedMesh||!0!==x.instancing?i.isSkinnedMesh&&!1===x.skinning?w=!0:i.isSkinnedMesh||!0!==x.skinning?x.envMap!==l||r.fog&&x.fog!==s?w=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===lt.numPlanes&&x.numIntersection===lt.numIntersection?(x.vertexAlphas!==u||x.vertexTangents!==c||x.morphTargets!==h||x.morphNormals!==d||x.morphColors!==p||x.toneMapping!==f||!0===X.isWebGL2&&x.morphTargetsCount!==y)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,x.__version=r.version);let _=x.currentProgram;!0===w&&(_=Ut(r,e,i));let E=!1,A=!1,C=!1;const I=_.getUniforms(),N=x.uniforms;if(Y.useProgram(_.program)&&(E=!0,A=!0,C=!0),r.id!==M&&(M=r.id,A=!0),E||T!==t){if(I.setValue(xt,"projectionMatrix",t.projectionMatrix),X.logarithmicDepthBuffer&&I.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,A=!0,C=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=I.map.cameraPosition;void 0!==e&&e.setValue(xt,V.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&I.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&I.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(i.isSkinnedMesh){I.setOptional(xt,i,"bindMatrix"),I.setOptional(xt,i,"bindMatrixInverse");const t=i.skeleton;t&&(X.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),I.setValue(xt,"boneTexture",t.boneTexture,Z),I.setValue(xt,"boneTextureSize",t.boneTextureSize)):I.setOptional(xt,t,"boneMatrices"))}const L=n.morphAttributes;return(void 0!==L.position||void 0!==L.normal||void 0!==L.color&&!0===X.isWebGL2)&&ht.update(i,n,r,_),(A||x.receiveShadow!==i.receiveShadow)&&(x.receiveShadow=i.receiveShadow,I.setValue(xt,"receiveShadow",i.receiveShadow)),A&&(I.setValue(xt,"toneMappingExposure",v.toneMappingExposure),x.needsLights&&Vt(N,C),s&&r.fog&&st.refreshFogUniforms(N,s),st.refreshMaterialUniforms(N,r,R,k,U),su.upload(xt,x.uniformsList,N,Z)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(su.upload(xt,x.uniformsList,N,Z),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&I.setValue(xt,"center",i.center),I.setValue(xt,"modelViewMatrix",i.modelViewMatrix),I.setValue(xt,"normalMatrix",i.normalMatrix),I.setValue(xt,"modelMatrix",i.matrixWorld),_}function Vt(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function Ht(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}Dt.setAnimationLoop(Rt),"undefined"!==typeof self&&Dt.setContext(self),this.setAnimationLoop=function(t){kt=t,St.setAnimationLoop(t),null===t?Dt.stop():Dt.start()},St.addEventListener("sessionstart",Nt),St.addEventListener("sessionend",Lt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===St.enabled&&!0===St.isPresenting&&(!0===St.cameraAutoUpdate&&St.updateCamera(e),e=St.getCamera()),!0===t.isScene&&t.onBeforeRender(v,t,e,S),g=ot.get(t,x.length),g.init(),x.push(g),$.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix($),B=this.localClippingEnabled,z=lt.init(this.clippingPlanes,B,e),m=at.get(t,y.length),m.init(),y.push(m),Pt(t,e,0,v.sortObjects),m.finish(),!0===v.sortObjects&&m.sort(N,L),!0===z&&lt.beginShadows();const n=g.state.shadowsArray;if(ut.render(n,t,e),!0===z&&lt.endShadows(),!0===this.info.autoReset&&this.info.reset(),ct.render(m,t),g.setupLights(v.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,r=n.length;e<r;e++){const r=n[e];Ot(m,t,r,r.viewport)}}else Ot(m,t,e);null!==S&&(Z.updateMultisampleRenderTarget(S),Z.updateRenderTargetMipmap(S)),!0===t.isScene&&t.onAfterRender(v,t,e),yt.resetDefaultState(),M=-1,T=null,x.pop(),g=x.length>0?x[x.length-1]:null,y.pop(),m=y.length>0?y[y.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(t,e,n){J.get(t.texture).__webglTexture=e,J.get(t.depthTexture).__webglTexture=n;const r=J.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===G.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const n=J.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){S=t,w=e,_=n;let r=!0;if(t){const e=J.get(t);void 0!==e.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?Z.setupRenderTarget(t):e.__hasExternalTextures&&Z.rebindTextures(t,J.get(t.texture).__webglTexture,J.get(t.depthTexture).__webglTexture)}let i=null,s=!1,a=!1;if(t){const n=t.texture;(n.isData3DTexture||n.isDataArrayTexture)&&(a=!0);const r=J.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=r[e],s=!0):i=X.isWebGL2&&t.samples>0&&!1===Z.useMultisampledRTT(t)?J.get(t).__webglMultisampledFramebuffer:r,E.copy(t.viewport),A.copy(t.scissor),C=t.scissorTest}else E.copy(D).multiplyScalar(R).floor(),A.copy(P).multiplyScalar(R).floor(),C=O;const o=Y.bindFramebuffer(36160,i);if(o&&X.drawBuffers&&r&&Y.drawBuffers(t,i),Y.viewport(E),Y.scissor(A),Y.setScissorTest(C),s){const r=J.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(a){const r=J.get(t.texture),i=e||0;xt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}M=-1},this.readRenderTargetPixels=function(t,e,n,r,i,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=J.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Y.bindFramebuffer(36160,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==At&&gt.convert(o)!==xt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===wt&&(G.has("EXT_color_buffer_half_float")||X.isWebGL2&&G.has("EXT_color_buffer_float"));if(l!==ft&&gt.convert(l)!==xt.getParameter(35738)&&(l!==bt||!(X.isWebGL2||G.has("OES_texture_float")||G.has("WEBGL_color_buffer_float")))&&!u)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&xt.readPixels(e,n,r,i,gt.convert(o),gt.convert(l),s)}finally{const t=null!==S?J.get(S).__webglFramebuffer:null;Y.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){if(!0!==e.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),s=Math.floor(e.image.height*r);Z.setTexture2D(e,0),xt.copyTexSubImage2D(3553,n,0,0,t.x,t.y,i,s),Y.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,s=e.image.height,a=gt.convert(n.format),o=gt.convert(n.type);Z.setTexture2D(n,0),xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,r,t.x,t.y,i,s,a,o,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):xt.texSubImage2D(3553,r,t.x,t.y,a,o,e.image),0===r&&n.generateMipmaps&&xt.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(v.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=gt.convert(r.format),u=gt.convert(r.type);let c;if(r.isData3DTexture)Z.setTexture3D(r,0),c=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Z.setTexture2DArray(r,0),c=35866}xt.pixelStorei(37440,r.flipY),xt.pixelStorei(37441,r.premultiplyAlpha),xt.pixelStorei(3317,r.unpackAlignment);const h=xt.getParameter(3314),d=xt.getParameter(32878),p=xt.getParameter(3316),f=xt.getParameter(3315),m=xt.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;xt.pixelStorei(3314,g.width),xt.pixelStorei(32878,g.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isData3DTexture?xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,g.data)):xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,g),xt.pixelStorei(3314,h),xt.pixelStorei(32878,d),xt.pixelStorei(3316,p),xt.pixelStorei(3315,f),xt.pixelStorei(32877,m),0===i&&r.generateMipmaps&&xt.generateMipmap(c),Y.unbindTexture()},this.initTexture=function(t){Z.setTexture2D(t,0),Y.unbindTexture()},this.resetState=function(){w=0,_=0,S=null,Y.reset(),yt.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}dc.prototype.isWebGLRenderer=!0;class pc extends dc{}pc.prototype.isWebGL1Renderer=!0;class fc{constructor(t,e=25e-5){this.name="",this.color=new an(t),this.density=e}clone(){return new fc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}fc.prototype.isFogExp2=!0;class mc{constructor(t,e=1,n=1e3){this.name="",this.color=new an(t),this.near=e,this.far=n}clone(){return new mc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}mc.prototype.isFog=!0;class gc extends Sr{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}gc.prototype.isScene=!0;class yc{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Re,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Be()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Be()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Be()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}yc.prototype.isInterleavedBuffer=!0;const xc=new wn;class vc{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)xc.fromBufferAttribute(this,e),xc.applyMatrix4(t),this.setXYZ(e,xc.x,xc.y,xc.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)xc.fromBufferAttribute(this,e),xc.applyNormalMatrix(t),this.setXYZ(e,xc.x,xc.y,xc.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)xc.fromBufferAttribute(this,e),xc.transformDirection(t),this.setXYZ(e,xc.x,xc.y,xc.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ur(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new vc(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}vc.prototype.isInterleavedBufferAttribute=!0;class bc extends Or{constructor(t){super(),this.type="SpriteMaterial",this.color=new an(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let wc;bc.prototype.isSpriteMaterial=!0;const _c=new wn,Sc=new wn,Mc=new wn,Tc=new We,Ec=new We,Ac=new Zn,Cc=new wn,Ic=new wn,kc=new wn,Rc=new We,Nc=new We,Lc=new We;class Dc extends Sr{constructor(t){if(super(),this.type="Sprite",void 0===wc){wc=new Zr;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new yc(t,5);wc.setIndex([0,1,2,0,2,3]),wc.setAttribute("position",new vc(e,3,0,!1)),wc.setAttribute("uv",new vc(e,2,3,!1))}this.geometry=wc,this.material=void 0!==t?t:new bc,this.center=new We(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Sc.setFromMatrixScale(this.matrixWorld),Ac.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Mc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Sc.multiplyScalar(-Mc.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const s=this.center;Pc(Cc.set(-.5,-.5,0),Mc,s,Sc,r,i),Pc(Ic.set(.5,-.5,0),Mc,s,Sc,r,i),Pc(kc.set(.5,.5,0),Mc,s,Sc,r,i),Rc.set(0,0),Nc.set(1,0),Lc.set(1,1);let a=t.ray.intersectTriangle(Cc,Ic,kc,!1,_c);if(null===a&&(Pc(Ic.set(-.5,.5,0),Mc,s,Sc,r,i),Nc.set(0,1),a=t.ray.intersectTriangle(Cc,kc,Ic,!1,_c),null===a))return;const o=t.ray.origin.distanceTo(_c);o<t.near||o>t.far||e.push({distance:o,point:_c.clone(),uv:Dr.getUV(_c,Cc,Ic,kc,Rc,Nc,Lc,new We),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Pc(t,e,n,r,i,s){Tc.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(Ec.x=s*Tc.x-i*Tc.y,Ec.y=i*Tc.x+s*Tc.y):Ec.copy(Tc),t.copy(e),t.x+=Ec.x,t.y+=Ec.y,t.applyMatrix4(Ac)}Dc.prototype.isSprite=!0;const Oc=new wn,Fc=new pn,zc=new pn,Bc=new wn,Uc=new Zn;class $c extends gi{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Zn,this.bindMatrixInverse=new Zn}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new pn,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Fc.fromBufferAttribute(r.attributes.skinIndex,t),zc.fromBufferAttribute(r.attributes.skinWeight,t),Oc.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let i=0;i<4;i++){const t=zc.getComponent(i);if(0!==t){const r=Fc.getComponent(i);Uc.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Bc.copy(Oc).applyMatrix4(Uc),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}$c.prototype.isSkinnedMesh=!0;class qc extends Sr{constructor(){super(),this.type="Bone"}}qc.prototype.isBone=!0;class Vc extends dn{constructor(t=null,e=1,n=1,r,i,s,a,o,l=lt,u=lt,c,h){super(null,s,a,o,l,u,r,i,c,h),this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Vc.prototype.isDataTexture=!0;class Hc extends Ur{constructor(t,e,n,r=1){"number"===typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}Hc.prototype.isInstancedBufferAttribute=!0;const Wc=new Zn,Gc=new Zn,jc=[],Xc=new gi;class Yc extends gi{constructor(t,e,n){super(t,e),this.instanceMatrix=new Hc(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(Xc.geometry=this.geometry,Xc.material=this.material,void 0!==Xc.material)for(let i=0;i<r;i++){this.getMatrixAt(i,Wc),Gc.multiplyMatrices(n,Wc),Xc.matrixWorld=Gc,Xc.raycast(t,jc);for(let t=0,n=jc.length;t<n;t++){const n=jc[t];n.instanceId=i,n.object=this,e.push(n)}jc.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Hc(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Yc.prototype.isInstancedMesh=!0;class Kc extends Or{constructor(t){super(),this.type="LineBasicMaterial",this.color=new an(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}Kc.prototype.isLineBasicMaterial=!0;const Jc=new wn,Zc=new wn,Qc=new Zn,th=new Jn,eh=new Vn;class nh extends Sr{constructor(t=new Zr,e=new Kc){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)Jc.fromBufferAttribute(e,t-1),Zc.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Jc.distanceTo(Zc);t.setAttribute("lineDistance",new Hr(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),eh.copy(n.boundingSphere),eh.applyMatrix4(r),eh.radius+=i,!1===t.ray.intersectsSphere(eh))return;Qc.copy(r).invert(),th.copy(t.ray).applyMatrix4(Qc);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new wn,u=new wn,c=new wn,h=new wn,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes,a=i.position;if(null!==r){const n=Math.max(0,s.start),i=Math.min(r.count,s.start+s.count);for(let s=n,p=i-1;s<p;s+=d){const n=r.getX(s),i=r.getX(s+1);l.fromBufferAttribute(a,n),u.fromBufferAttribute(a,i);const d=th.distanceSqToSegment(l,u,h,c);if(d>o)continue;h.applyMatrix4(this.matrixWorld);const p=t.ray.origin.distanceTo(h);p<t.near||p>t.far||e.push({distance:p,point:c.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this})}}else{const n=Math.max(0,s.start),r=Math.min(a.count,s.start+s.count);for(let i=n,s=r-1;i<s;i+=d){l.fromBufferAttribute(a,i),u.fromBufferAttribute(a,i+1);const n=th.distanceSqToSegment(l,u,h,c);if(n>o)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}nh.prototype.isLine=!0;const rh=new wn,ih=new wn;class sh extends nh{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)rh.fromBufferAttribute(e,t),ih.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+rh.distanceTo(ih);t.setAttribute("lineDistance",new Hr(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}sh.prototype.isLineSegments=!0;class ah extends nh{constructor(t,e){super(t,e),this.type="LineLoop"}}ah.prototype.isLineLoop=!0;class oh extends Or{constructor(t){super(),this.type="PointsMaterial",this.color=new an(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}oh.prototype.isPointsMaterial=!0;const lh=new Zn,uh=new Jn,ch=new Vn,hh=new wn;class dh extends Sr{constructor(t=new Zr,e=new oh){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ch.copy(n.boundingSphere),ch.applyMatrix4(r),ch.radius+=i,!1===t.ray.intersectsSphere(ch))return;lh.copy(r).invert(),uh.copy(t.ray).applyMatrix4(lh);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){const i=n.index,a=n.attributes,l=a.position;if(null!==i){const n=Math.max(0,s.start),a=Math.min(i.count,s.start+s.count);for(let s=n,u=a;s<u;s++){const n=i.getX(s);hh.fromBufferAttribute(l,n),ph(hh,n,o,r,t,e,this)}}else{const n=Math.max(0,s.start),i=Math.min(l.count,s.start+s.count);for(let s=n,a=i;s<a;s++)hh.fromBufferAttribute(l,s),ph(hh,s,o,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ph(t,e,n,r,i,s,a){const o=uh.distanceSqToPoint(t);if(o<n){const n=new wn;uh.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:a})}}dh.prototype.isPoints=!0;class fh extends dn{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.minFilter=void 0!==s?s:ht,this.magFilter=void 0!==i?i:ht,this.generateMipmaps=!1;const u=this;function c(){u.needsUpdate=!0,t.requestVideoFrameCallback(c)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(c)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image,e="requestVideoFrameCallback"in t;!1===e&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}fh.prototype.isVideoTexture=!0;class mh extends dn{constructor(t,e,n){super({width:t,height:e}),this.format=n,this.magFilter=lt,this.minFilter=lt,this.generateMipmaps=!1,this.needsUpdate=!0}}mh.prototype.isFramebufferTexture=!0;class gh extends dn{constructor(t,e,n,r,i,s,a,o,l,u,c,h){super(null,s,a,o,l,u,r,i,c,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}gh.prototype.isCompressedTexture=!0;class yh extends dn{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.needsUpdate=!0}}yh.prototype.isCanvasTexture=!0;class xh{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let s;s=e||t*n[i-1];let a,o=0,l=i-1;while(o<=l)if(r=Math.floor(o+(l-o)/2),a=n[r]-s,a<0)o=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(r=l,n[r]===s)return r/(i-1);const u=n[r],c=n[r+1],h=c-u,d=(s-u)/h,p=(r+d)/(i-1);return p}getTangent(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const s=this.getPoint(r),a=this.getPoint(i),o=e||(s.isVector2?new We:new wn);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new wn,r=[],i=[],s=[],a=new wn,o=new Zn;for(let d=0;d<=t;d++){const e=d/t;r[d]=this.getTangentAt(e,new wn)}i[0]=new wn,s[0]=new wn;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],a),s[0].crossVectors(r[0],i[0]);for(let d=1;d<=t;d++){if(i[d]=i[d-1].clone(),s[d]=s[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(Ue(r[d-1].dot(r[d]),-1,1));i[d].applyMatrix4(o.makeRotationAxis(a,t))}s[d].crossVectors(r[d],i[d])}if(!0===e){let e=Math.acos(Ue(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(a.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],e*n)),s[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class vh extends xh{constructor(t=0,e=0,n=1,r=1,i=0,s=2*Math.PI,a=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new We,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const s=Math.abs(i)<Number.EPSILON;while(i<0)i+=r;while(i>r)i-=r;i<Number.EPSILON&&(i=s?0:r),!0!==this.aClockwise||s||(i===r?i=-r:i-=r);const a=this.aStartAngle+t*i;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}vh.prototype.isEllipseCurve=!0;class bh extends vh{constructor(t,e,n,r,i,s){super(t,e,n,n,r,i,s),this.type="ArcCurve"}}function wh(){let t=0,e=0,n=0,r=0;function i(i,s,a,o){t=i,e=a,n=-3*i+3*s-2*a-o,r=2*i-2*s+a+o}return{initCatmullRom:function(t,e,n,r,s){i(e,n,s*(n-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,u=(n-e)/a-(r-e)/(a+o)+(r-n)/o;l*=a,u*=a,i(e,n,l,u)},calc:function(i){const s=i*i,a=s*i;return t+e*i+n*s+r*a}}}bh.prototype.isArcCurve=!0;const _h=new wn,Sh=new wh,Mh=new wh,Th=new wh;class Eh extends xh{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new wn){const n=e,r=this.points,i=r.length,s=(i-(this.closed?0:1))*t;let a,o,l=Math.floor(s),u=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===u&&l===i-1&&(l=i-2,u=1),this.closed||l>0?a=r[(l-1)%i]:(_h.subVectors(r[0],r[1]).add(r[0]),a=_h);const c=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(_h.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=_h),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(c),t),n=Math.pow(c.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Sh.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,e,n,r),Mh.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,e,n,r),Th.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,e,n,r)}else"catmullrom"===this.curveType&&(Sh.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Mh.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),Th.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return n.set(Sh.calc(u),Mh.calc(u),Th.calc(u)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new wn).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ah(t,e,n,r,i){const s=.5*(r-e),a=.5*(i-n),o=t*t,l=t*o;return(2*n-2*r+s+a)*l+(-3*n+3*r-2*s-a)*o+s*t+n}function Ch(t,e){const n=1-t;return n*n*e}function Ih(t,e){return 2*(1-t)*t*e}function kh(t,e){return t*t*e}function Rh(t,e,n,r){return Ch(t,e)+Ih(t,n)+kh(t,r)}function Nh(t,e){const n=1-t;return n*n*n*e}function Lh(t,e){const n=1-t;return 3*n*n*t*e}function Dh(t,e){return 3*(1-t)*t*t*e}function Ph(t,e){return t*t*t*e}function Oh(t,e,n,r,i){return Nh(t,e)+Lh(t,n)+Dh(t,r)+Ph(t,i)}Eh.prototype.isCatmullRomCurve3=!0;class Fh extends xh{constructor(t=new We,e=new We,n=new We,r=new We){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new We){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Oh(t,r.x,i.x,s.x,a.x),Oh(t,r.y,i.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Fh.prototype.isCubicBezierCurve=!0;class zh extends xh{constructor(t=new wn,e=new wn,n=new wn,r=new wn){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new wn){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Oh(t,r.x,i.x,s.x,a.x),Oh(t,r.y,i.y,s.y,a.y),Oh(t,r.z,i.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}zh.prototype.isCubicBezierCurve3=!0;class Bh extends xh{constructor(t=new We,e=new We){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new We){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new We;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Bh.prototype.isLineCurve=!0;class Uh extends xh{constructor(t=new wn,e=new wn){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new wn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class $h extends xh{constructor(t=new We,e=new We,n=new We){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new We){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Rh(t,r.x,i.x,s.x),Rh(t,r.y,i.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}$h.prototype.isQuadraticBezierCurve=!0;class qh extends xh{constructor(t=new wn,e=new wn,n=new wn){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new wn){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Rh(t,r.x,i.x,s.x),Rh(t,r.y,i.y,s.y),Rh(t,r.z,i.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}qh.prototype.isQuadraticBezierCurve3=!0;class Vh extends xh{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new We){const n=e,r=this.points,i=(r.length-1)*t,s=Math.floor(i),a=i-s,o=r[0===s?s:s-1],l=r[s],u=r[s>r.length-2?r.length-1:s+1],c=r[s>r.length-3?r.length-1:s+2];return n.set(Ah(a,o.x,l.x,u.x,c.x),Ah(a,o.y,l.y,u.y,c.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new We).fromArray(n))}return this}}Vh.prototype.isSplineCurve=!0;var Hh=Object.freeze({__proto__:null,ArcCurve:bh,CatmullRomCurve3:Eh,CubicBezierCurve:Fh,CubicBezierCurve3:zh,EllipseCurve:vh,LineCurve:Bh,LineCurve3:Uh,QuadraticBezierCurve:$h,QuadraticBezierCurve3:qh,SplineCurve:Vh});class Wh extends xh{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Bh(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;while(i<r.length){if(r[i]>=n){const t=r[i]-n,s=this.curves[i],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const s=i[r],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const r=o[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Hh[n.type]).fromJSON(n))}return this}}class Gh extends Wh{constructor(t){super(),this.type="Path",this.currentPoint=new We,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Bh(this.currentPoint.clone(),new We(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new $h(this.currentPoint.clone(),new We(t,e),new We(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,s){const a=new Fh(this.currentPoint.clone(),new We(t,e),new We(n,r),new We(i,s));return this.curves.push(a),this.currentPoint.set(i,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Vh(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,r,i,s),this}absarc(t,e,n,r,i,s){return this.absellipse(t,e,n,n,r,i,s),this}ellipse(t,e,n,r,i,s,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+l,e+u,n,r,i,s,a,o),this}absellipse(t,e,n,r,i,s,a,o){const l=new vh(t,e,n,r,i,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class jh extends Zr{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],s=[];function a(t){const n=new wn,r=new wn,i=new wn;for(let s=0;s<e.length;s+=3)d(e[s+0],n),d(e[s+1],r),d(e[s+2],i),o(n,r,i,t)}function o(t,e,n,r){const i=r+1,s=[];for(let a=0;a<=i;a++){s[a]=[];const r=t.clone().lerp(n,a/i),o=e.clone().lerp(n,a/i),l=i-a;for(let t=0;t<=l;t++)s[a][t]=0===t&&a===i?r:r.clone().lerp(o,t/l)}for(let a=0;a<i;a++)for(let t=0;t<2*(i-a)-1;t++){const e=Math.floor(t/2);t%2===0?(h(s[a][e+1]),h(s[a+1][e]),h(s[a][e])):(h(s[a][e+1]),h(s[a+1][e+1]),h(s[a+1][e]))}}function l(t){const e=new wn;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}function u(){const t=new wn;for(let e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];const n=m(t)/2/Math.PI+.5,r=g(t)/Math.PI+.5;s.push(n,1-r)}p(),c()}function c(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],r=s[t+4],i=Math.max(e,n,r),a=Math.min(e,n,r);i>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}function h(t){i.push(t.x,t.y,t.z)}function d(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function p(){const t=new wn,e=new wn,n=new wn,r=new wn,a=new We,o=new We,l=new We;for(let u=0,c=0;u<i.length;u+=9,c+=6){t.set(i[u+0],i[u+1],i[u+2]),e.set(i[u+3],i[u+4],i[u+5]),n.set(i[u+6],i[u+7],i[u+8]),a.set(s[c+0],s[c+1]),o.set(s[c+2],s[c+3]),l.set(s[c+4],s[c+5]),r.copy(t).add(e).add(n).divideScalar(3);const h=m(r);f(a,c+0,t,h),f(o,c+2,e,h),f(l,c+4,n,h)}}function f(t,e,n,r){r<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=r/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}function g(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}a(r),l(n),u(),this.setAttribute("position",new Hr(i,3)),this.setAttribute("normal",new Hr(i.slice(),3)),this.setAttribute("uv",new Hr(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new jh(t.vertices,t.indices,t.radius,t.details)}}new wn,new wn,new wn,new Dr;class Xh extends Gh{constructor(t){super(t),this.uuid=Be(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Gh).fromJSON(n))}return this}}const Yh={triangulate:function(t,e,n=2){const r=e&&e.length,i=r?e[0]*n:t.length;let s=Kh(t,0,i,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u,c,h,d,p;if(r&&(s=rd(t,e,s,n)),t.length>80*n){o=u=t[0],l=c=t[1];for(let e=n;e<i;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>u&&(u=h),d>c&&(c=d);p=Math.max(u-o,c-l),p=0!==p?1/p:0}return Zh(s,a,n,o,l,p),a}};function Kh(t,e,n,r,i){let s,a;if(i===Ed(t,e,n,r)>0)for(s=e;s<n;s+=r)a=Sd(s,t[s],t[s+1],a);else for(s=n-r;s>=e;s-=r)a=Sd(s,t[s],t[s+1],a);return a&&md(a,a.next)&&(Md(a),a=a.next),a}function Jh(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!md(r,r.next)&&0!==fd(r.prev,r,r.next))r=r.next;else{if(Md(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function Zh(t,e,n,r,i,s,a){if(!t)return;!a&&s&&ld(t,r,i,s);let o,l,u=t;while(t.prev!==t.next)if(o=t.prev,l=t.next,s?td(t,r,i,s):Qh(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),Md(t),t=l.next,u=l.next;else if(t=l,t===u){a?1===a?(t=ed(Jh(t),e,n),Zh(t,e,n,r,i,s,2)):2===a&&nd(t,e,n,r,i,s):Zh(Jh(t),e,n,r,i,s,1);break}}function Qh(t){const e=t.prev,n=t,r=t.next;if(fd(e,n,r)>=0)return!1;let i=t.next.next;while(i!==t.prev){if(dd(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&fd(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function td(t,e,n,r){const i=t.prev,s=t,a=t.next;if(fd(i,s,a)>=0)return!1;const o=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,l=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,u=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,c=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,h=cd(o,l,e,n,r),d=cd(u,c,e,n,r);let p=t.prevZ,f=t.nextZ;while(p&&p.z>=h&&f&&f.z<=d){if(p!==t.prev&&p!==t.next&&dd(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&fd(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&dd(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&fd(f.prev,f,f.next)>=0)return!1;f=f.nextZ}while(p&&p.z>=h){if(p!==t.prev&&p!==t.next&&dd(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&fd(p.prev,p,p.next)>=0)return!1;p=p.prevZ}while(f&&f.z<=d){if(f!==t.prev&&f!==t.next&&dd(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&fd(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function ed(t,e,n){let r=t;do{const i=r.prev,s=r.next.next;!md(i,s)&&gd(i,r,r.next,s)&&bd(i,s)&&bd(s,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(s.i/n),Md(r),Md(r.next),r=t=s),r=r.next}while(r!==t);return Jh(r)}function nd(t,e,n,r,i,s){let a=t;do{let t=a.next.next;while(t!==a.prev){if(a.i!==t.i&&pd(a,t)){let o=_d(a,t);return a=Jh(a,a.next),o=Jh(o,o.next),Zh(a,e,n,r,i,s),void Zh(o,e,n,r,i,s)}t=t.next}a=a.next}while(a!==t)}function rd(t,e,n,r){const i=[];let s,a,o,l,u;for(s=0,a=e.length;s<a;s++)o=e[s]*r,l=s<a-1?e[s+1]*r:t.length,u=Kh(t,o,l,r,!1),u===u.next&&(u.steiner=!0),i.push(hd(u));for(i.sort(id),s=0;s<i.length;s++)sd(i[s],n),n=Jh(n,n.next);return n}function id(t,e){return t.x-e.x}function sd(t,e){if(e=ad(t,e),e){const n=_d(e,t);Jh(e,e.next),Jh(n,n.next)}}function ad(t,e){let n=e;const r=t.x,i=t.y;let s,a=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>a){if(a=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(r===a)return s;const o=s,l=s.x,u=s.y;let c,h=1/0;n=s;do{r>=n.x&&n.x>=l&&r!==n.x&&dd(i<u?r:a,i,l,u,i<u?a:r,i,n.x,n.y)&&(c=Math.abs(i-n.y)/(r-n.x),bd(n,t)&&(c<h||c===h&&(n.x>s.x||n.x===s.x&&od(s,n)))&&(s=n,h=c)),n=n.next}while(n!==o);return s}function od(t,e){return fd(t.prev,t,e.prev)<0&&fd(e.next,t,t.next)<0}function ld(t,e,n,r){let i=t;do{null===i.z&&(i.z=cd(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,ud(i)}function ud(t){let e,n,r,i,s,a,o,l,u=1;do{n=t,t=null,s=null,a=0;while(n){for(a++,r=n,o=0,e=0;e<u;e++)if(o++,r=r.nextZ,!r)break;l=u;while(o>0||l>0&&r)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),s?s.nextZ=i:t=i,i.prevZ=s,s=i;n=r}s.nextZ=null,u*=2}while(a>1);return t}function cd(t,e,n,r,i){return t=32767*(t-n)*i,e=32767*(e-r)*i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function hd(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function dd(t,e,n,r,i,s,a,o){return(i-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(r-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(i-a)*(r-o)>=0}function pd(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!vd(t,e)&&(bd(t,e)&&bd(e,t)&&wd(t,e)&&(fd(t.prev,t,e.prev)||fd(t,e.prev,e))||md(t,e)&&fd(t.prev,t,t.next)>0&&fd(e.prev,e,e.next)>0)}function fd(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function md(t,e){return t.x===e.x&&t.y===e.y}function gd(t,e,n,r){const i=xd(fd(t,e,n)),s=xd(fd(t,e,r)),a=xd(fd(n,r,t)),o=xd(fd(n,r,e));return i!==s&&a!==o||(!(0!==i||!yd(t,n,e))||(!(0!==s||!yd(t,r,e))||(!(0!==a||!yd(n,t,r))||!(0!==o||!yd(n,e,r)))))}function yd(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function xd(t){return t>0?1:t<0?-1:0}function vd(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&gd(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function bd(t,e){return fd(t.prev,t,t.next)<0?fd(t,e,t.next)>=0&&fd(t,t.prev,e)>=0:fd(t,e,t.prev)<0||fd(t,t.next,e)<0}function wd(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!==n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}function _d(t,e){const n=new Td(t.i,t.x,t.y),r=new Td(e.i,e.x,e.y),i=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,s.next=r,r.prev=s,r}function Sd(t,e,n,r){const i=new Td(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Md(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Td(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Ed(t,e,n,r){let i=0;for(let s=e,a=n-r;s<n;s+=r)i+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return i}class Ad{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return Ad.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];Cd(t),Id(n,t);let s=t.length;e.forEach(Cd);for(let o=0;o<e.length;o++)r.push(s),s+=e[o].length,Id(n,e[o]);const a=Yh.triangulate(n,r);for(let o=0;o<a.length;o+=3)i.push(a.slice(o,o+3));return i}}function Cd(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Id(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class kd extends Zr{constructor(t=new Xh([new We(.5,.5),new We(-.5,.5),new We(-.5,-.5),new We(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let a=0,o=t.length;a<o;a++){const e=t[a];s(e)}function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,u=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:c-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Rd;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let g,y,x,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,y=f.computeFrenetFrames(o,!1),x=new wn,v=new wn,b=new wn),u||(p=0,c=0,h=0,d=0);const _=t.extractPoints(a);let S=_.shape;const M=_.holes,T=!Ad.isClockWise(S);if(T){S=S.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];Ad.isClockWise(e)&&(M[t]=e.reverse())}}const E=Ad.triangulateShape(S,M),A=S;for(let e=0,n=M.length;e<n;e++){const t=M[e];S=S.concat(t)}function C(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const I=S.length,k=E.length;function R(t,e,n){let r,i,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,u=n.y-t.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=e.x-o/h,f=e.y+a/h,m=n.x-u/d,g=n.y+l/d,y=((m-p)*u-(g-f)*l)/(a*u-o*l);r=p+a*y-t.x,i=f+o*y-t.y;const x=r*r+i*i;if(x<=2)return new We(r,i);s=Math.sqrt(x/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(u)&&(t=!0),t?(r=-o,i=a,s=Math.sqrt(c)):(r=a,i=o,s=Math.sqrt(c/2))}return new We(r/s,i/s)}const N=[];for(let e=0,n=A.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),N[e]=R(A[e],A[r],A[i]);const L=[];let D,P=N.concat();for(let e=0,n=M.length;e<n;e++){const t=M[e];D=[];for(let e=0,n=t.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[e]=R(t[e],t[r],t[i]);L.push(D),P=P.concat(D)}for(let e=0;e<p;e++){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],N[e],r);U(t.x,t.y,-n)}for(let e=0,i=M.length;e<i;e++){const t=M[e];D=L[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],D[e],r);U(i.x,i.y,-n)}}}const O=h+d;for(let e=0;e<I;e++){const t=u?C(S[e],P[e],O):S[e];w?(v.copy(y.normals[0]).multiplyScalar(t.x),x.copy(y.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(v).add(x),U(b.x,b.y,b.z)):U(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<I;t++){const n=u?C(S[t],P[t],O):S[t];w?(v.copy(y.normals[e]).multiplyScalar(n.x),x.copy(y.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(v).add(x),U(b.x,b.y,b.z)):U(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],N[e],r);U(t.x,t.y,l+n)}for(let e=0,i=M.length;e<i;e++){const t=M[e];D=L[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],D[e],r);w?U(i.x,i.y+g[o-1].y,g[o-1].x+n):U(i.x,i.y,l+n)}}}function F(){const t=r.length/3;if(u){let t=0,e=I*t;for(let n=0;n<k;n++){const t=E[n];$(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=I*t;for(let n=0;n<k;n++){const t=E[n];$(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<k;t++){const e=E[t];$(e[2],e[1],e[0])}for(let t=0;t<k;t++){const e=E[t];$(e[0]+I*o,e[1]+I*o,e[2]+I*o)}}n.addGroup(t,r.length/3-t,0)}function z(){const t=r.length/3;let e=0;B(A,e),e+=A.length;for(let n=0,r=M.length;n<r;n++){const t=M[n];B(t,e),e+=t.length}n.addGroup(t,r.length/3-t,1)}function B(t,e){let n=t.length;while(--n>=0){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=I*t,s=I*(t+1),a=e+r+n,o=e+i+n,l=e+i+s,u=e+r+s;q(a,o,l,u)}}}function U(t,e,n){s.push(t),s.push(e),s.push(n)}function $(t,e,i){V(t),V(e),V(i);const s=r.length/3,a=m.generateTopUV(n,r,s-3,s-2,s-1);H(a[0]),H(a[1]),H(a[2])}function q(t,e,i,s){V(t),V(e),V(s),V(e),V(i),V(s);const a=r.length/3,o=m.generateSideWallUV(n,r,a-6,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function V(t){r.push(s[3*t+0]),r.push(s[3*t+1]),r.push(s[3*t+2])}function H(t){i.push(t.x),i.push(t.y)}F(),z()}this.setAttribute("position",new Hr(r,3)),this.setAttribute("uv",new Hr(i,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return Nd(e,n,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const r=e[t.shapes[i]];n.push(r)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new Hh[r.type]).fromJSON(r)),new kd(n,t.options)}}const Rd={generateTopUV:function(t,e,n,r,i){const s=e[3*n],a=e[3*n+1],o=e[3*r],l=e[3*r+1],u=e[3*i],c=e[3*i+1];return[new We(s,a),new We(o,l),new We(u,c)]},generateSideWallUV:function(t,e,n,r,i,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],u=e[3*r],c=e[3*r+1],h=e[3*r+2],d=e[3*i],p=e[3*i+1],f=e[3*i+2],m=e[3*s],g=e[3*s+1],y=e[3*s+2];return Math.abs(o-c)<Math.abs(a-u)?[new We(a,1-l),new We(u,1-h),new We(d,1-f),new We(m,1-y)]:[new We(o,1-l),new We(c,1-h),new We(p,1-f),new We(g,1-y)]}};function Nd(t,e,n){if(n.shapes=[],Array.isArray(t))for(let r=0,i=t.length;r<i;r++){const e=t[r];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Ld extends jh{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,i,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ld(t.radius,t.detail)}}class Dd extends Zr{constructor(t=new Xh([new We(0,.5),new We(-.5,-.5),new We(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let u=0;u<t.length;u++)l(t[u]),this.addGroup(a,o,u),a+=o,o=0;function l(t){const a=r.length/3,l=t.extractPoints(e);let u=l.shape;const c=l.holes;!1===Ad.isClockWise(u)&&(u=u.reverse());for(let e=0,n=c.length;e<n;e++){const t=c[e];!0===Ad.isClockWise(t)&&(c[e]=t.reverse())}const h=Ad.triangulateShape(u,c);for(let e=0,n=c.length;e<n;e++){const t=c[e];u=u.concat(t)}for(let e=0,n=u.length;e<n;e++){const t=u[e];r.push(t.x,t.y,0),i.push(0,0,1),s.push(t.x,t.y)}for(let e=0,r=h.length;e<r;e++){const t=h[e],r=t[0]+a,i=t[1]+a,s=t[2]+a;n.push(r,i,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Hr(r,3)),this.setAttribute("normal",new Hr(i,3)),this.setAttribute("uv",new Hr(s,2))}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return Pd(e,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}return new Dd(n,t.curveSegments)}}function Pd(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class Od extends Or{constructor(t){super(),this.type="ShadowMaterial",this.color=new an(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}Od.prototype.isShadowMaterial=!0;class Fd extends Ti{constructor(t){super(t),this.type="RawShaderMaterial"}}Fd.prototype.isRawShaderMaterial=!0;class zd extends Or{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new an(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new an(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Te,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}zd.prototype.isMeshStandardMaterial=!0;class Bd extends zd{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new We(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ue(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new an(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new an(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new an(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!==t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!==t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!==t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}Bd.prototype.isMeshPhysicalMaterial=!0;class Ud extends Or{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new an(16777215),this.specular=new an(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new an(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Te,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=H,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Ud.prototype.isMeshPhongMaterial=!0;class $d extends Or{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new an(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new an(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Te,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}$d.prototype.isMeshToonMaterial=!0;class qd extends Or{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Te,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}qd.prototype.isMeshNormalMaterial=!0;class Vd extends Or{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new an(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new an(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=H,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Vd.prototype.isMeshLambertMaterial=!0;class Hd extends Or{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new an(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Te,this.normalScale=new We(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}Hd.prototype.isMeshMatcapMaterial=!0;class Wd extends Kc{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}Wd.prototype.isLineDashedMaterial=!0;const Gd={ShadowMaterial:Od,SpriteMaterial:bc,RawShaderMaterial:Fd,ShaderMaterial:Ti,PointsMaterial:oh,MeshPhysicalMaterial:Bd,MeshStandardMaterial:zd,MeshPhongMaterial:Ud,MeshToonMaterial:$d,MeshNormalMaterial:qd,MeshLambertMaterial:Vd,MeshDepthMaterial:Ku,MeshDistanceMaterial:Ju,MeshBasicMaterial:Fr,MeshMatcapMaterial:Hd,LineDashedMaterial:Wd,LineBasicMaterial:Kc,Material:Or};Or.fromType=function(t){return new Gd[t]};const jd={arraySlice:function(t,e,n){return jd.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"===typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(e,n){return t[e]-t[n]}const n=t.length,r=new Array(n);for(let i=0;i!==n;++i)r[i]=i;return r.sort(e),r},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let s=0,a=0;a!==r;++s){const r=n[s]*e;for(let n=0;n!==e;++n)i[a++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,s=t[0];while(void 0!==s&&void 0===s[r])s=t[i++];if(void 0===s)return;let a=s[r];if(void 0!==a)if(Array.isArray(a))do{a=s[r],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[i++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[r],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[i++]}while(void 0!==s);else do{a=s[r],void 0!==a&&(e.push(s.time),n.push(a)),s=t[i++]}while(void 0!==s)},subclip:function(t,e,n,r,i=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const t=s.tracks[l],e=t.getValueSize(),o=[],u=[];for(let s=0;s<t.times.length;++s){const a=t.times[s]*i;if(!(a<n||a>=r)){o.push(t.times[s]);for(let n=0;n<e;++n)u.push(t.values[s*e+n])}}0!==o.length&&(t.times=jd.convertArray(o,t.times.constructor),t.values=jd.convertArray(u,t.values.constructor),a.push(t))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,s=e/r;for(let a=0;a<i;++a){const e=n.tracks[a],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const i=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===r}));if(void 0===i)continue;let o=0;const l=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=e.times.length-1;let d;if(s<=e.times[0]){const t=o,n=l-o;d=jd.arraySlice(e.values,t,n)}else if(s>=e.times[h]){const t=h*l+o,n=t+l-o;d=jd.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=o,r=l-o;t.evaluate(s),d=jd.arraySlice(t.resultBuffer,n,r)}if("quaternion"===r){const t=(new bn).fromArray(d).normalize().conjugate();t.toArray(d)}const p=i.times.length;for(let t=0;t<p;++t){const e=t*c+u;if("quaternion"===r)bn.multiplyQuaternionsFlat(i.values,e,d,0,i.values,e);else{const t=c-2*u;for(let n=0;n<t;++n)i.values[e+n]-=d[n]}}}return t.blendMode=ve,t}};class Xd{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let s;n:{r:if(!(t<r)){for(let s=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===s)break;if(i=r,r=e[++n],t<r)break e}s=e.length;break n}if(t>=i)break t;{const a=e[1];t<a&&(n=2,i=a);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===s)break;if(r=i,i=e[--n-1],t>=i)break e}s=n,n=0}}while(n<s){const r=n+s>>>1;t<e[r]?s=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let s=0;s!==r;++s)e[s]=n[i+s];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Xd.prototype.beforeStart_=Xd.prototype.copySampleValue_,Xd.prototype.afterEnd_=Xd.prototype.copySampleValue_;class Yd extends Xd{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:me,endingEnd:me}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,s=t+1,a=r[i],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case ge:i=t,a=2*e-n;break;case ye:i=r.length-2,a=e+r[i]-r[i+1];break;default:i=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case ge:s=t,o=2*n-e;break;case ye:s=1,o=n+r[1]-r[0];break;default:s=t-1,o=e}const l=.5*(n-e),u=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=s*u}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let b=0;b!==a;++b)i[b]=g*s[u+b]+y*s[l+b]+x*s[o+b]+v*s[c+b];return i}}class Kd extends Xd{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=(n-e)/(r-e),c=1-u;for(let h=0;h!==a;++h)i[h]=s[l+h]*c+s[o+h]*u;return i}}class Jd extends Xd{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class Zd{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=jd.convertArray(e,this.TimeBufferType),this.values=jd.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:jd.convertArray(t.times,Array),values:jd.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Jd(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Kd(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Yd(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case de:e=this.InterpolantFactoryMethodDiscrete;break;case pe:e=this.InterpolantFactoryMethodLinear;break;case fe:e=this.InterpolantFactoryMethodSmooth;break}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return de;case this.InterpolantFactoryMethodLinear:return pe;case this.InterpolantFactoryMethodSmooth:return fe}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,s=r-1;while(i!==r&&n[i]<t)++i;while(-1!==s&&n[s]>e)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const t=this.getValueSize();this.times=jd.arraySlice(n,i,s),this.values=jd.arraySlice(this.values,i*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let a=0;a!==i;a++){const e=n[a];if("number"===typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,e),t=!1;break}if(null!==s&&s>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,e,s),t=!1;break}s=e}if(void 0!==r&&jd.isTypedArray(r))for(let a=0,o=r.length;a!==o;++a){const e=r[a];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,e),t=!1;break}}return t}optimize(){const t=jd.arraySlice(this.times),e=jd.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===fe,i=t.length-1;let s=1;for(let a=1;a<i;++a){let i=!1;const o=t[a],l=t[a+1];if(o!==l&&(1!==a||o!==t[0]))if(r)i=!0;else{const t=a*n,r=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[r+a]||n!==e[s+a]){i=!0;break}}}if(i){if(a!==s){t[s]=t[a];const r=a*n,i=s*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++s}}if(i>0){t[s]=t[i];for(let t=i*n,r=s*n,a=0;a!==n;++a)e[r+a]=e[t+a];++s}return s!==t.length?(this.times=jd.arraySlice(t,0,s),this.values=jd.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=jd.arraySlice(this.times,0),e=jd.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,t,e);return r.createInterpolant=this.createInterpolant,r}}Zd.prototype.TimeBufferType=Float32Array,Zd.prototype.ValueBufferType=Float32Array,Zd.prototype.DefaultInterpolation=pe;class Qd extends Zd{}Qd.prototype.ValueTypeName="bool",Qd.prototype.ValueBufferType=Array,Qd.prototype.DefaultInterpolation=de,Qd.prototype.InterpolantFactoryMethodLinear=void 0,Qd.prototype.InterpolantFactoryMethodSmooth=void 0;class tp extends Zd{}tp.prototype.ValueTypeName="color";class ep extends Zd{}ep.prototype.ValueTypeName="number";class np extends Xd{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(r-e);let l=t*a;for(let u=l+a;l!==u;l+=4)bn.slerpFlat(i,0,s,l-a,s,l,o);return i}}class rp extends Zd{InterpolantFactoryMethodLinear(t){return new np(this.times,this.values,this.getValueSize(),t)}}rp.prototype.ValueTypeName="quaternion",rp.prototype.DefaultInterpolation=pe,rp.prototype.InterpolantFactoryMethodSmooth=void 0;class ip extends Zd{}ip.prototype.ValueTypeName="string",ip.prototype.ValueBufferType=Array,ip.prototype.DefaultInterpolation=de,ip.prototype.InterpolantFactoryMethodLinear=void 0,ip.prototype.InterpolantFactoryMethodSmooth=void 0;class sp extends Zd{}sp.prototype.ValueTypeName="vector";class ap{constructor(t,e=-1,n,r=xe){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Be(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let s=0,a=n.length;s!==a;++s)e.push(lp(n[s]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,s=n.length;i!==s;++i)e.push(Zd.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,s=[];for(let a=0;a<i;a++){let t=[],o=[];t.push((a+i-1)%i,a,(a+1)%i),o.push(0,1,0);const l=jd.getKeyframeOrder(t);t=jd.sortedArray(t,1,l),o=jd.sortedArray(o,1,l),r||0!==t[0]||(t.push(i),o.push(o[0])),s.push(new ep(".morphTargetInfluences["+e[a].name+"]",t,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let a=0,o=t.length;a<o;a++){const e=t[a],n=e.name.match(i);if(n&&n.length>1){const t=n[1];let i=r[t];i||(r[t]=i=[]),i.push(e)}}const s=[];for(const a in r)s.push(this.CreateFromMorphTargetSequence(a,r[a],e,n));return s}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const s=[],a=[];jd.flattenJSON(n,s,a,r),0!==s.length&&i.push(new t(e,s,a))}},r=[],i=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let c=0;c<l.length;c++){const t=l[c].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let r=0;r<t[n].morphTargets.length;r++)e[t[n].morphTargets[r]]=-1;for(const i in e){const e=[],s=[];for(let r=0;r!==t[n].morphTargets.length;++r){const r=t[n];e.push(r.time),s.push(r.morphTarget===i?1:0)}r.push(new ep(".morphTargetInfluence["+i+"]",e,s))}o=e.length*s}else{const i=".bones["+e[c].name+"]";n(sp,i+".position",t,"pos",r),n(rp,i+".quaternion",t,"rot",r),n(sp,i+".scale",t,"scl",r)}}if(0===r.length)return null;const u=new this(i,o,r,a);return u}resetDuration(){const t=this.tracks;let e=0;for(let n=0,r=t.length;n!==r;++n){const t=this.tracks[n];e=Math.max(e,t.times[t.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function op(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ep;case"vector":case"vector2":case"vector3":case"vector4":return sp;case"color":return tp;case"quaternion":return rp;case"bool":case"boolean":return Qd;case"string":return ip}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function lp(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=op(t.type);if(void 0===t.times){const e=[],n=[];jd.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const up={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class cp{constructor(t,e,n){const r=this;let i=!1,s=0,a=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){a++,!1===i&&void 0!==r.onStart&&r.onStart(t,s,a),i=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,a),s===a&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return o?o(t):t},this.setURLModifier=function(t){return o=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const hp=new cp;class dp{constructor(t){this.manager=void 0!==t?t:hp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const pp={};class fp extends dp{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=up.get(t);if(void 0!==i)return this.manager.itemStart(t),setTimeout(()=>{e&&e(i),this.manager.itemEnd(t)},0),i;if(void 0!==pp[t])return void pp[t].push({onLoad:e,onProgress:n,onError:r});pp[t]=[],pp[t].push({onLoad:e,onProgress:n,onError:r});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then(e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=pp[t],r=e.body.getReader(),i=e.headers.get("Content-Length"),s=i?parseInt(i):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){function e(){r.read().then(({done:r,value:i})=>{if(r)t.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(r)}t.enqueue(i),e()}})}e()}});return new Response(l)}throw Error(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`)}).then(t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then(t=>{const e=new DOMParser;return e.parseFromString(t,a)});case"json":return t.json();default:if(void 0===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i,n=e.exec(a),r=n&&n[1]?n[1].toLowerCase():void 0,i=new TextDecoder(r);return t.arrayBuffer().then(t=>i.decode(t))}}}).then(e=>{up.add(t,e);const n=pp[t];delete pp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onLoad&&r.onLoad(e)}}).catch(e=>{const n=pp[t];if(void 0===n)throw this.manager.itemError(t),e;delete pp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class mp extends dp{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=up.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a=Xe("img");function o(){u(),up.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){u(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(t),a.src=t,a}}class gp extends dp{constructor(t){super(t)}load(t,e,n,r){const i=new Ri,s=new mp(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],(function(t){i.images[n]=t,a++,6===a&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let l=0;l<t.length;++l)o(l);return i}}class yp extends dp{constructor(t){super(t)}load(t,e,n,r){const i=new dn,s=new mp(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){i.image=t,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class xp extends Sr{constructor(t,e=1){super(),this.type="Light",this.color=new an(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}xp.prototype.isLight=!0;class vp extends xp{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Sr.DefaultUp),this.updateMatrix(),this.groundColor=new an(e)}copy(t){return xp.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}vp.prototype.isHemisphereLight=!0;const bp=new Zn,wp=new wn,_p=new wn;class Sp{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new We(512,512),this.map=null,this.mapPass=null,this.matrix=new Zn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Bi,this._frameExtents=new We(1,1),this._viewportCount=1,this._viewports=[new pn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;wp.setFromMatrixPosition(t.matrixWorld),e.position.copy(wp),_p.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(_p),e.updateMatrixWorld(),bp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(bp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Mp extends Sp{constructor(){super(new Ai(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*ze*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Mp.prototype.isSpotLightShadow=!0;class Tp extends xp{constructor(t,e,n=0,r=Math.PI/3,i=0,s=1){super(t,e),this.type="SpotLight",this.position.copy(Sr.DefaultUp),this.updateMatrix(),this.target=new Sr,this.distance=n,this.angle=r,this.penumbra=i,this.decay=s,this.shadow=new Mp}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Tp.prototype.isSpotLight=!0;const Ep=new Zn,Ap=new wn,Cp=new wn;class Ip extends Sp{constructor(){super(new Ai(90,1,.5,500)),this._frameExtents=new We(4,2),this._viewportCount=6,this._viewports=[new pn(2,1,1,1),new pn(0,1,1,1),new pn(3,1,1,1),new pn(1,1,1,1),new pn(3,0,1,1),new pn(1,0,1,1)],this._cubeDirections=[new wn(1,0,0),new wn(-1,0,0),new wn(0,0,1),new wn(0,0,-1),new wn(0,1,0),new wn(0,-1,0)],this._cubeUps=[new wn(0,1,0),new wn(0,1,0),new wn(0,1,0),new wn(0,1,0),new wn(0,0,1),new wn(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Ap.setFromMatrixPosition(t.matrixWorld),n.position.copy(Ap),Cp.copy(n.position),Cp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Cp),n.updateMatrixWorld(),r.makeTranslation(-Ap.x,-Ap.y,-Ap.z),Ep.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ep)}}Ip.prototype.isPointLightShadow=!0;class kp extends xp{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Ip}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}kp.prototype.isPointLight=!0;class Rp extends Sp{constructor(){super(new Eo(-5,5,5,-5,.5,500))}}Rp.prototype.isDirectionalLightShadow=!0;class Np extends xp{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Sr.DefaultUp),this.updateMatrix(),this.target=new Sr,this.shadow=new Rp}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Np.prototype.isDirectionalLight=!0;class Lp extends xp{constructor(t,e){super(t,e),this.type="AmbientLight"}}Lp.prototype.isAmbientLight=!0;class Dp extends xp{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Dp.prototype.isRectAreaLight=!0;class Pp{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new wn)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*r),e.addScaledVector(s[2],.488603*i),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*r*1.092548),e.addScaledVector(s[5],r*i*1.092548),e.addScaledVector(s[6],.315392*(3*i*i-1)),e.addScaledVector(s[7],n*i*1.092548),e.addScaledVector(s[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*r),e.addScaledVector(s[2],1.023328*i),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*r),e.addScaledVector(s[5],.858086*r*i),e.addScaledVector(s[6],.743125*i*i-.247708),e.addScaledVector(s[7],.858086*n*i),e.addScaledVector(s[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}Pp.prototype.isSphericalHarmonics3=!0;class Op extends xp{constructor(t=new Pp,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Op.prototype.isLightProbe=!0;class Fp{static decodeText(t){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let r=0,i=t.length;r<i;r++)e+=String.fromCharCode(t[r]);try{return decodeURIComponent(escape(e))}catch(n){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!==typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class zp extends Zr{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}zp.prototype.isInstancedBufferGeometry=!0;class Bp extends dp{constructor(t){super(t),"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=up.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){up.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}let Up;Bp.prototype.isImageBitmapLoader=!0;const $p={getContext:function(){return void 0===Up&&(Up=new(window.AudioContext||window.webkitAudioContext)),Up},setContext:function(t){Up=t}};class qp extends dp{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new fp(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{const t=n.slice(0),r=$p.getContext();r.decodeAudioData(t,(function(t){e(t)}))}catch(s){r?r(s):console.error(s),i.manager.itemError(t)}}),n,r)}}class Vp extends Op{constructor(t,e,n=1){super(void 0,n);const r=(new an).set(t),i=(new an).set(e),s=new wn(r.r,r.g,r.b),a=new wn(i.r,i.g,i.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}Vp.prototype.isHemisphereLightProbe=!0;class Hp extends Op{constructor(t,e=1){super(void 0,e);const n=(new an).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Hp.prototype.isAmbientLightProbe=!0;class Wp extends Sr{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class Gp{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class jp{constructor(t,e,n){let r,i,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==r;++t)n[i+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,s=r;i!==s;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let s=0;s!==i;++s)t[e+s]=t[n+s]}_slerp(t,e,n,r){bn.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const s=this._workIndex*i;bn.multiplyQuaternionsFlat(t,s,t,e,t,n),bn.slerpFlat(t,e,t,e,t,s,r)}_lerp(t,e,n,r,i){const s=1-r;for(let a=0;a!==i;++a){const i=e+a;t[i]=t[i]*s+t[n+a]*r}}_lerpAdditive(t,e,n,r,i){for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]+t[n+s]*r}}}const Xp="\\[\\]\\.:\\/",Yp=new RegExp("["+Xp+"]","g"),Kp="[^"+Xp+"]",Jp="[^"+Xp.replace("\\.","")+"]",Zp=/((?:WC+[\/:])*)/.source.replace("WC",Kp),Qp=/(WCOD+)?/.source.replace("WCOD",Jp),tf=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Kp),ef=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Kp),nf=new RegExp("^"+Zp+Qp+tf+ef+"$"),rf=["material","materials","bones"];class sf{constructor(t,e,n){const r=n||af.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class af{constructor(t,e,n){this.path=e,this.parsedPath=n||af.parseTrackName(e),this.node=af.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new af.Composite(t,e,n):new af(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Yp,"")}static parseTrackName(t){const e=nf.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==rf.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const s=n(i.children);if(s)return s}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=af.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const s=t[r];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}af.Composite=sf,af.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},af.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},af.prototype.GetterByBindingType=[af.prototype._getValue_direct,af.prototype._getValue_array,af.prototype._getValue_arrayElement,af.prototype._getValue_toArray],af.prototype.SetterByBindingTypeAndVersioning=[[af.prototype._setValue_direct,af.prototype._setValue_direct_setNeedsUpdate,af.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[af.prototype._setValue_array,af.prototype._setValue_array_setNeedsUpdate,af.prototype._setValue_array_setMatrixWorldNeedsUpdate],[af.prototype._setValue_arrayElement,af.prototype._setValue_arrayElement_setNeedsUpdate,af.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[af.prototype._setValue_fromArray,af.prototype._setValue_fromArray_setNeedsUpdate,af.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class of{constructor(){this.uuid=Be(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,s=i.length;let a=void 0,o=t.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(c);for(let t=0,e=s;t!==e;++t)i[t].push(new af(c,n[t],r[t]))}else if(d<l){a=t[d];const o=--l,u=t[o];e[u.uuid]=d,t[d]=u,e[h]=o,t[o]=c;for(let t=0,e=s;t!==e;++t){const e=i[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new af(c,n[t],r[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=i){const s=i++,u=t[s];e[u.uuid]=l,t[l]=u,e[o]=s,t[s]=a;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[l]=r,e[s]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],l=o.uuid,u=e[l];if(void 0!==u)if(delete e[l],u<i){const a=--i,o=t[a],l=--s,c=t[l];e[o.uuid]=u,t[u]=o,e[c.uuid]=a,t[a]=c,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],i=e[l];e[u]=r,e[a]=i,e.pop()}}else{const i=--s,a=t[i];i>0&&(e[a.uuid]=u),t[u]=a,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[u]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=i.length,n[t]=r,s.push(t),a.push(e),i.push(c);for(let h=u,d=o.length;h!==d;++h){const n=o[h];c[h]=new af(n,t,e)}return c}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=t[a];e[l]=n,s[n]=o,s.pop(),i[n]=i[a],i.pop(),r[n]=r[a],r.pop()}}}of.prototype.isAnimationObjectGroup=!0;class lf{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,s=i.length,a=new Array(s),o={endingStart:me,endingEnd:me};for(let l=0;l!==s;++l){const t=i[l].createInterpolant(null);a[l]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ce,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,s=n/r;t.warp(1,i,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=i,o[1]=i+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case ve:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);break;case xe:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulate(r,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const s=n===he;if(0===t)return-1===i?r:s&&1===(1&i)?e-r:r;if(n===ue){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(s&&1===(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=ge,r.endingEnd=ge):(r.endingStart=t?this.zeroSlopeAtStart?ge:me:ye,r.endingEnd=e?this.zeroSlopeAtEnd?ge:me:ye)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let s=this._weightInterpolant;null===s&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=i,o[0]=e,a[1]=i+t,o[1]=n,this}}class uf extends Pe{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let c=0;c!==i;++c){const t=r[c],i=t.name;let l=u[i];if(void 0!==l)++l.referenceCount,s[c]=l;else{if(l=s[c],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,i));continue}const r=e&&e._propertyBindings[c].binding.parsedPath;l=new jp(af.create(n,i,r),t.ValueTypeName,t.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,i),s[c]=l}a[c].resultBuffer=l.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let s=i[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,s=this._actionsByClip,a=s[i],o=a.knownActions,l=o[o.length-1],u=t._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),t._byClipCacheIndex=null;const c=a.actionByRoot,h=(t._localRoot||this._root).uuid;delete c[h],0===o.length&&delete s[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const t=e[n];0===--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let s=r[e];void 0===s&&(s={},r[e]=s),s[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,a=s[r],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[i],0===Object.keys(a).length&&delete s[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Kd(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let s="string"===typeof t?ap.findByName(r,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:xe),void 0!==o){const t=o.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const u=new lf(this,s,e,n);return this._bindAction(u,l),this._addInactiveAction(u,a,i),u}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"===typeof t?ap.findByName(n,t):t,s=i?i.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[r]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),s=this._accuIndex^=1;for(let l=0;l!==n;++l){const n=e[l];n._update(r,t,i,s)}const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,s=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,s._cacheIndex=i,e[i]=s,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const s in n){const t=n[s].actionByRoot,r=t[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName,i=r[e];if(void 0!==i)for(const s in i){const t=i[s];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}uf.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class cf{constructor(t){"string"===typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new cf(void 0===this.value.clone?this.value:this.value.clone())}}class hf extends yc{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}hf.prototype.isInstancedInterleavedBuffer=!0;class df{constructor(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}df.prototype.isGLBufferAttribute=!0;const pf=new We;class ff{constructor(t=new We(1/0,1/0),e=new We(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=pf.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){const e=pf.copy(t).clamp(this.min,this.max);return e.sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}ff.prototype.isBox2=!0;const mf=new wn,gf=new wn;class yf{constructor(t=new wn,e=new wn){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){mf.subVectors(t,this.start),gf.subVectors(this.end,this.start);const n=gf.dot(gf),r=gf.dot(mf);let i=r/n;return e&&(i=Ue(i,0,1)),i}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const xf=new wn,vf=new Zn,bf=new Zn;class wf extends sh{constructor(t){const e=_f(t),n=new Zr,r=[],i=[],s=new an(0,0,1),a=new an(0,1,0);for(let l=0;l<e.length;l++){const t=e[l];t.parent&&t.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(s.r,s.g,s.b),i.push(a.r,a.g,a.b))}n.setAttribute("position",new Hr(r,3)),n.setAttribute("color",new Hr(i,3));const o=new Kc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,o),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");bf.copy(this.root.matrixWorld).invert();for(let i=0,s=0;i<e.length;i++){const t=e[i];t.parent&&t.parent.isBone&&(vf.multiplyMatrices(bf,t.matrixWorld),xf.setFromMatrixPosition(vf),r.setXYZ(s,xf.x,xf.y,xf.z),vf.multiplyMatrices(bf,t.parent.matrixWorld),xf.setFromMatrixPosition(vf),r.setXYZ(s+1,xf.x,xf.y,xf.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function _f(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,_f(t.children[n]));return e}class Sf extends sh{constructor(t=10,e=10,n=4473924,r=8947848){n=new an(n),r=new an(r);const i=e/2,s=t/e,a=t/2,o=[],l=[];for(let h=0,d=0,p=-a;h<=e;h++,p+=s){o.push(-a,0,p,a,0,p),o.push(p,0,-a,p,0,a);const t=h===i?n:r;t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3}const u=new Zr;u.setAttribute("position",new Hr(o,3)),u.setAttribute("color",new Hr(l,3));const c=new Kc({vertexColors:!0,toneMapped:!1});super(u,c),this.type="GridHelper"}}class Mf{constructor(){this.type="ShapePath",this.color=new an,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Gh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,s){return this.currentPath.bezierCurveTo(t,e,n,r,i,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new Xh;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,s=0;s<n;i=s++){let n=e[i],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[i],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return r}const i=Ad.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let a,o,l;const u=[];if(1===s.length)return o=s[0],l=new Xh,l.curves=o.curves,u.push(l),u;let c=!i(s[0].getPoints());c=t?!c:c;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let y=0,x=s.length;y<x;y++)o=s[y],p=o.getPoints(),a=i(p),a=t?!a:a,a?(!c&&d[g]&&g++,d[g]={s:new Xh,p:p},d[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(s);if(d.length>1){let t=!1,e=0;for(let n=0,r=d.length;n<r;n++)h[n]=[];for(let n=0,i=d.length;n<i;n++){const i=m[n];for(let s=0;s<i.length;s++){const a=i[s];let o=!0;for(let i=0;i<d.length;i++)r(a.p,d[i].p)&&(n!==i&&e++,o?(o=!1,h[i].push(a)):t=!0);o&&h[n].push(a)}}e>0&&!1===t&&(m=h)}for(let y=0,x=d.length;y<x;y++){l=d[y].s,u.push(l),f=m[y];for(let t=0,e=f.length;t<e;t++)l.holes.push(f[t].h)}return u}}const Tf=new ArrayBuffer(4),Ef=(new Float32Array(Tf),new Uint32Array(Tf),new Uint32Array(512)),Af=new Uint32Array(512);for(let Rf=0;Rf<256;++Rf){const t=Rf-127;t<-27?(Ef[Rf]=0,Ef[256|Rf]=32768,Af[Rf]=24,Af[256|Rf]=24):t<-14?(Ef[Rf]=1024>>-t-14,Ef[256|Rf]=1024>>-t-14|32768,Af[Rf]=-t-1,Af[256|Rf]=-t-1):t<=15?(Ef[Rf]=t+15<<10,Ef[256|Rf]=t+15<<10|32768,Af[Rf]=13,Af[256|Rf]=13):t<128?(Ef[Rf]=31744,Ef[256|Rf]=64512,Af[Rf]=24,Af[256|Rf]=24):(Ef[Rf]=31744,Ef[256|Rf]=64512,Af[Rf]=13,Af[256|Rf]=13)}const Cf=new Uint32Array(2048),If=new Uint32Array(64),kf=new Uint32Array(64);for(let Rf=1;Rf<1024;++Rf){let t=Rf<<13,e=0;while(0===(8388608&t))t<<=1,e-=8388608;t&=-8388609,e+=947912704,Cf[Rf]=t|e}for(let Rf=1024;Rf<2048;++Rf)Cf[Rf]=939524096+(Rf-1024<<13);for(let Rf=1;Rf<31;++Rf)If[Rf]=Rf<<23;If[31]=1199570944,If[32]=2147483648;for(let Rf=33;Rf<63;++Rf)If[Rf]=2147483648+(Rf-32<<23);If[63]=3347054592;for(let Rf=1;Rf<64;++Rf)32!==Rf&&(kf[Rf]=1024);xh.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(xh.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Gh.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)};Sf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},wf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};dp.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Fp.extractUrlBase(t)},dp.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};ff.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},ff.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ff.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},ff.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},Mn.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Mn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Mn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Mn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Mn.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},lr.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},Vn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Bi.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},yf.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Ge.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Ge.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Ge.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Ge.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Ge.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Ge.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Zn.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Zn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Zn.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new wn).setFromMatrixColumn(this,3)},Zn.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Zn.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Zn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Zn.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Zn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Zn.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Zn.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Zn.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Zn.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Zn.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Zn.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Zn.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Zn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Zn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Zn.prototype.makeFrustum=function(t,e,n,r,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,s)},Zn.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Oi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},bn.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},bn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Jn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Jn.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Jn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Dr.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Dr.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Dr.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Dr.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Dr.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Dr.barycoordFromPoint=function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Dr.getBarycoord(t,e,n,r,i)},Dr.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Dr.getNormal(t,e,n,r)},Xh.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Xh.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new kd(this,t)},Xh.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Dd(this,t)},We.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},We.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},We.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},wn.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},wn.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},wn.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},wn.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},wn.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},wn.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},wn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},wn.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},wn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},pn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},pn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Sr.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Sr.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Sr.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Sr.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Sr.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Sr.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),gi.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(gi.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),be},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),$c.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Ai.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(xp.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ur.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ne},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ne)}}}),Ur.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Ne:Re),this},Ur.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ur.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Zr.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Zr.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ur(arguments[1],arguments[2])))},Zr.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Zr.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Zr.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Zr.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Zr.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Zr.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),yc.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Ne:Re),this},yc.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},kd.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},kd.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},kd.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},gc.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},cf.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Or.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new an}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===p}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Ti.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),dc.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},dc.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},dc.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},dc.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},dc.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},dc.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},dc.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},dc.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},dc.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},dc.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},dc.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},dc.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},dc.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},dc.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},dc.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},dc.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},dc.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},dc.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},dc.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},dc.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},dc.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},dc.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},dc.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},dc.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},dc.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(dc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?_e:we}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(tc.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(fn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Wp.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this,n=new qp;return n.load(t,(function(t){e.setBuffer(t)})),this},Gp.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},ki.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},ki.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},ln.crossOrigin=void 0,ln.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new yp;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},ln.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new gp;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},ln.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ln.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},"5c6c":function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},"5e77":function(t,e,n){var r=n("83ab"),i=n("1a2d"),s=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,o=i(s,"name"),l=o&&"something"===function(){}.name,u=o&&(!r||r&&a(s,"name").configurable);t.exports={EXISTS:o,PROPER:l,CONFIGURABLE:u}},"605d":function(t,e,n){var r=n("c6b6"),i=n("da84");t.exports="process"==r(i.process)},6069:function(t,e){t.exports="object"==typeof window},"60da":function(t,e,n){"use strict";var r=n("83ab"),i=n("e330"),s=n("c65b"),a=n("d039"),o=n("df75"),l=n("7418"),u=n("d1e7"),c=n("7b0b"),h=n("44ad"),d=Object.assign,p=Object.defineProperty,f=i([].concat);t.exports=!d||a((function(){if(r&&1!==d({b:1},d(p({},"a",{enumerable:!0,get:function(){p(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol(),i="abcdefghijklmnopqrst";return t[n]=7,i.split("").forEach((function(t){e[t]=t})),7!=d({},t)[n]||o(d({},e)).join("")!=i}))?function(t,e){var n=c(t),i=arguments.length,a=1,d=l.f,p=u.f;while(i>a){var m,g=h(arguments[a++]),y=d?f(o(g),d(g)):o(g),x=y.length,v=0;while(x>v)m=y[v++],r&&!s(p,g,m)||(n[m]=g[m])}return n}:d},"65f0":function(t,e,n){var r=n("0b42");t.exports=function(t,e){return new(r(t))(0===e?0:e)}},"68ee":function(t,e,n){var r=n("e330"),i=n("d039"),s=n("1626"),a=n("f5df"),o=n("d066"),l=n("8925"),u=function(){},c=[],h=o("Reflect","construct"),d=/^\s*(?:class|function)\b/,p=r(d.exec),f=!d.exec(u),m=function(t){if(!s(t))return!1;try{return h(u,c,t),!0}catch(e){return!1}},g=function(t){if(!s(t))return!1;switch(a(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!p(d,l(t))}catch(e){return!0}};g.sham=!0,t.exports=!h||i((function(){var t;return m(m.call)||!m(Object)||!m((function(){t=!0}))||t}))?g:m},"69f3":function(t,e,n){var r,i,s,a=n("7f9a"),o=n("da84"),l=n("e330"),u=n("861d"),c=n("9112"),h=n("1a2d"),d=n("c6cd"),p=n("f772"),f=n("d012"),m="Object already initialized",g=o.TypeError,y=o.WeakMap,x=function(t){return s(t)?i(t):r(t,{})},v=function(t){return function(e){var n;if(!u(e)||(n=i(e)).type!==t)throw g("Incompatible receiver, "+t+" required");return n}};if(a||d.state){var b=d.state||(d.state=new y),w=l(b.get),_=l(b.has),S=l(b.set);r=function(t,e){if(_(b,t))throw new g(m);return e.facade=t,S(b,t,e),e},i=function(t){return w(b,t)||{}},s=function(t){return _(b,t)}}else{var M=p("state");f[M]=!0,r=function(t,e){if(h(t,M))throw new g(m);return e.facade=t,c(t,M,e),e},i=function(t){return h(t,M)?t[M]:{}},s=function(t){return h(t,M)}}t.exports={set:r,get:i,has:s,enforce:x,getterFor:v}},"6eeb":function(t,e,n){var r=n("da84"),i=n("1626"),s=n("1a2d"),a=n("9112"),o=n("ce4e"),l=n("8925"),u=n("69f3"),c=n("5e77").CONFIGURABLE,h=u.get,d=u.enforce,p=String(String).split("String");(t.exports=function(t,e,n,l){var u,h=!!l&&!!l.unsafe,f=!!l&&!!l.enumerable,m=!!l&&!!l.noTargetGet,g=l&&void 0!==l.name?l.name:e;i(n)&&("Symbol("===String(g).slice(0,7)&&(g="["+String(g).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!s(n,"name")||c&&n.name!==g)&&a(n,"name",g),u=d(n),u.source||(u.source=p.join("string"==typeof g?g:""))),t!==r?(h?!m&&t[e]&&(f=!0):delete t[e],f?t[e]=n:a(t,e,n)):f?t[e]=n:o(e,n)})(Function.prototype,"toString",(function(){return i(this)&&h(this).source||l(this)}))},7418:function(t,e){e.f=Object.getOwnPropertySymbols},7839:function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},"785a":function(t,e,n){var r=n("cc12"),i=r("span").classList,s=i&&i.constructor&&i.constructor.prototype;t.exports=s===Object.prototype?void 0:s},"7b0b":function(t,e,n){var r=n("da84"),i=n("1d80"),s=r.Object;t.exports=function(t){return s(i(t))}},"7c73":function(t,e,n){var r,i=n("825a"),s=n("37e8"),a=n("7839"),o=n("d012"),l=n("1be4"),u=n("cc12"),c=n("f772"),h=">",d="<",p="prototype",f="script",m=c("IE_PROTO"),g=function(){},y=function(t){return d+f+h+t+d+"/"+f+h},x=function(t){t.write(y("")),t.close();var e=t.parentWindow.Object;return t=null,e},v=function(){var t,e=u("iframe"),n="java"+f+":";return e.style.display="none",l.appendChild(e),e.src=String(n),t=e.contentWindow.document,t.open(),t.write(y("document.F=Object")),t.close(),t.F},b=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}b="undefined"!=typeof document?document.domain&&r?x(r):v():x(r);var t=a.length;while(t--)delete b[p][a[t]];return b()};o[m]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(g[p]=i(t),n=new g,g[p]=null,n[m]=t):n=b(),void 0===e?n:s.f(n,e)}},"7dd0":function(t,e,n){"use strict";var r=n("23e7"),i=n("c65b"),s=n("c430"),a=n("5e77"),o=n("1626"),l=n("9ed3"),u=n("e163"),c=n("d2bb"),h=n("d44e"),d=n("9112"),p=n("6eeb"),f=n("b622"),m=n("3f8c"),g=n("ae93"),y=a.PROPER,x=a.CONFIGURABLE,v=g.IteratorPrototype,b=g.BUGGY_SAFARI_ITERATORS,w=f("iterator"),_="keys",S="values",M="entries",T=function(){return this};t.exports=function(t,e,n,a,f,g,E){l(n,e,a);var A,C,I,k=function(t){if(t===f&&P)return P;if(!b&&t in L)return L[t];switch(t){case _:return function(){return new n(this,t)};case S:return function(){return new n(this,t)};case M:return function(){return new n(this,t)}}return function(){return new n(this)}},R=e+" Iterator",N=!1,L=t.prototype,D=L[w]||L["@@iterator"]||f&&L[f],P=!b&&D||k(f),O="Array"==e&&L.entries||D;if(O&&(A=u(O.call(new t)),A!==Object.prototype&&A.next&&(s||u(A)===v||(c?c(A,v):o(A[w])||p(A,w,T)),h(A,R,!0,!0),s&&(m[R]=T))),y&&f==S&&D&&D.name!==S&&(!s&&x?d(L,"name",S):(N=!0,P=function(){return i(D,this)})),f)if(C={values:k(S),keys:g?P:k(_),entries:k(M)},E)for(I in C)(b||N||!(I in L))&&p(L,I,C[I]);else r({target:e,proto:!0,forced:b||N},C);return s&&!E||L[w]===P||p(L,w,P,{name:f}),m[e]=P,C}},"7e1b":function(t){t.exports=JSON.parse('{"glyphs":{"0":{"x_min":73,"x_max":715,"ha":792,"o":"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},"1":{"x_min":215.671875,"x_max":574,"ha":792,"o":"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},"2":{"x_min":59,"x_max":731,"ha":792,"o":"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},"3":{"x_min":54,"x_max":737,"ha":792,"o":"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},"4":{"x_min":48,"x_max":742.453125,"ha":792,"o":"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},"5":{"x_min":54.171875,"x_max":738,"ha":792,"o":"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},"6":{"x_min":53,"x_max":739,"ha":792,"o":"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},"7":{"x_min":58.71875,"x_max":730.953125,"ha":792,"o":"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},"8":{"x_min":55,"x_max":736,"ha":792,"o":"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},"9":{"x_min":53,"x_max":739,"ha":792,"o":"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},"ο":{"x_min":0,"x_max":712,"ha":815,"o":"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},"S":{"x_min":0,"x_max":788,"ha":890,"o":"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"¦":{"x_min":343,"x_max":449,"ha":792,"o":"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"/":{"x_min":183.25,"x_max":608.328125,"ha":792,"o":"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},"Τ":{"x_min":-0.4375,"x_max":777.453125,"ha":839,"o":"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},"y":{"x_min":0,"x_max":684.78125,"ha":771,"o":"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},"Π":{"x_min":0,"x_max":803,"ha":917,"o":"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},"ΐ":{"x_min":-111,"x_max":339,"ha":361,"o":"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},"g":{"x_min":0,"x_max":686,"ha":838,"o":"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"²":{"x_min":0,"x_max":442,"ha":539,"o":"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"–":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},"Κ":{"x_min":0,"x_max":819.5625,"ha":893,"o":"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},"ƒ":{"x_min":-46.265625,"x_max":392,"ha":513,"o":"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},"e":{"x_min":0,"x_max":714,"ha":813,"o":"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},"ό":{"x_min":0,"x_max":712,"ha":815,"o":"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},"J":{"x_min":0,"x_max":588,"ha":699,"o":"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"»":{"x_min":-1,"x_max":503,"ha":601,"o":"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"©":{"x_min":-3,"x_max":1008,"ha":1106,"o":"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},"ώ":{"x_min":0,"x_max":922,"ha":1030,"o":"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{"x_min":193.0625,"x_max":598.609375,"ha":792,"o":"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"«":{"x_min":0,"x_max":507.203125,"ha":604,"o":"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},"D":{"x_min":0,"x_max":828,"ha":935,"o":"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"∙":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"ÿ":{"x_min":0,"x_max":47,"ha":125,"o":"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},"w":{"x_min":0,"x_max":1009.71875,"ha":1100,"o":"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},"$":{"x_min":0,"x_max":700,"ha":793,"o":"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\\\":{"x_min":-0.015625,"x_max":425.0625,"ha":522,"o":"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},"µ":{"x_min":0,"x_max":697.21875,"ha":747,"o":"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},"Ι":{"x_min":42,"x_max":181,"ha":297,"o":"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},"Ύ":{"x_min":0,"x_max":1144.5,"ha":1214,"o":"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"’":{"x_min":0,"x_max":139,"ha":236,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"Ν":{"x_min":0,"x_max":801,"ha":915,"o":"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{"x_min":8.71875,"x_max":350.390625,"ha":478,"o":"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},"Q":{"x_min":0,"x_max":968,"ha":1072,"o":"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},"ς":{"x_min":1,"x_max":676.28125,"ha":740,"o":"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},"M":{"x_min":0,"x_max":954,"ha":1067,"o":"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},"Ψ":{"x_min":0,"x_max":1006,"ha":1094,"o":"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},"C":{"x_min":0,"x_max":886,"ha":944,"o":"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{"x_min":0,"x_max":138,"ha":236,"o":"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{"x_min":0,"x_max":480.5625,"ha":578,"o":"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},"X":{"x_min":-0.015625,"x_max":854.15625,"ha":940,"o":"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{"x_min":0,"x_max":963.890625,"ha":1061,"o":"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},"ι":{"x_min":42,"x_max":284,"ha":361,"o":"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},"Ά":{"x_min":0,"x_max":906.953125,"ha":982,"o":"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{"x_min":0,"x_max":318,"ha":415,"o":"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},"ε":{"x_min":0,"x_max":634.71875,"ha":714,"o":"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},"Δ":{"x_min":0,"x_max":952.78125,"ha":1028,"o":"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{"x_min":0,"x_max":481,"ha":578,"o":"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"‰":{"x_min":-3,"x_max":1672,"ha":1821,"o":"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},"a":{"x_min":0,"x_max":698.609375,"ha":794,"o":"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"—":{"x_min":0,"x_max":941.671875,"ha":1039,"o":"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{"x_min":8.71875,"x_max":780.953125,"ha":792,"o":"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},"N":{"x_min":0,"x_max":801,"ha":914,"o":"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},"ρ":{"x_min":0,"x_max":712,"ha":797,"o":"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},"¯":{"x_min":0,"x_max":941.671875,"ha":938,"o":"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},"Z":{"x_min":0,"x_max":779,"ha":849,"o":"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},"u":{"x_min":0,"x_max":617,"ha":729,"o":"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},"k":{"x_min":0,"x_max":612.484375,"ha":697,"o":"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},"Η":{"x_min":0,"x_max":803,"ha":917,"o":"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"Α":{"x_min":0,"x_max":906.953125,"ha":985,"o":"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},"s":{"x_min":0,"x_max":604,"ha":697,"o":"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},"B":{"x_min":0,"x_max":778,"ha":876,"o":"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"…":{"x_min":0,"x_max":614,"ha":708,"o":"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{"x_min":0,"x_max":607,"ha":704,"o":"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},"H":{"x_min":0,"x_max":803,"ha":915,"o":"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"ν":{"x_min":0,"x_max":675,"ha":761,"o":"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},"c":{"x_min":1,"x_max":701.390625,"ha":775,"o":"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"¶":{"x_min":0,"x_max":566.671875,"ha":678,"o":"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},"β":{"x_min":0,"x_max":660,"ha":745,"o":"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},"Μ":{"x_min":0,"x_max":954,"ha":1068,"o":"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},"Ό":{"x_min":0.109375,"x_max":1120,"ha":1217,"o":"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ή":{"x_min":0,"x_max":1158,"ha":1275,"o":"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"•":{"x_min":0,"x_max":663.890625,"ha":775,"o":"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"¥":{"x_min":0.1875,"x_max":819.546875,"ha":886,"o":"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{"x_min":0,"x_max":318.0625,"ha":415,"o":"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},"U":{"x_min":0,"x_max":796,"ha":904,"o":"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},"γ":{"x_min":0.5,"x_max":744.953125,"ha":822,"o":"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},"α":{"x_min":0,"x_max":765.5625,"ha":809,"o":"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},"F":{"x_min":0,"x_max":683.328125,"ha":717,"o":"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"­":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"Χ":{"x_min":0,"x_max":854.171875,"ha":935,"o":"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{"x_min":116,"x_max":674,"ha":792,"o":"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"†":{"x_min":0,"x_max":777,"ha":835,"o":"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"°":{"x_min":0,"x_max":347,"ha":444,"o":"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},"V":{"x_min":0,"x_max":862.71875,"ha":940,"o":"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},"Ξ":{"x_min":0,"x_max":734.71875,"ha":763,"o":"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "}," ":{"x_min":0,"x_max":0,"ha":853},"Ϋ":{"x_min":0.328125,"x_max":819.515625,"ha":889,"o":"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},"”":{"x_min":0,"x_max":347,"ha":454,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{"x_min":0,"x_max":1260,"ha":1357,"o":"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},"Ί":{"x_min":0,"x_max":499,"ha":613,"o":"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},"i":{"x_min":14,"x_max":136,"ha":275,"o":"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},"Β":{"x_min":0,"x_max":778,"ha":877,"o":"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},"υ":{"x_min":0,"x_max":617,"ha":725,"o":"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{"x_min":0,"x_max":275,"ha":372,"o":"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},"m":{"x_min":0,"x_max":1019,"ha":1128,"o":"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},"χ":{"x_min":8.328125,"x_max":780.5625,"ha":815,"o":"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},"ί":{"x_min":42,"x_max":326.71875,"ha":361,"o":"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},"Ζ":{"x_min":0,"x_max":779.171875,"ha":850,"o":"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},"R":{"x_min":0,"x_max":781.953125,"ha":907,"o":"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},"o":{"x_min":0,"x_max":713,"ha":821,"o":"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},"K":{"x_min":0,"x_max":819.46875,"ha":906,"o":"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},"d":{"x_min":0,"x_max":683,"ha":796,"o":"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"¨":{"x_min":-109,"x_max":247,"ha":232,"o":"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},"E":{"x_min":0,"x_max":736.109375,"ha":789,"o":"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"Y":{"x_min":0,"x_max":820,"ha":886,"o":"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},"\\"":{"x_min":0,"x_max":299,"ha":396,"o":"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"‹":{"x_min":17.984375,"x_max":773.609375,"ha":792,"o":"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"„":{"x_min":0,"x_max":364,"ha":467,"o":"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},"δ":{"x_min":1,"x_max":710,"ha":810,"o":"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},"έ":{"x_min":0,"x_max":634.71875,"ha":714,"o":"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},"ω":{"x_min":0,"x_max":922,"ha":1031,"o":"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"´":{"x_min":0,"x_max":96,"ha":251,"o":"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"±":{"x_min":11,"x_max":781,"ha":792,"o":"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{"x_min":343,"x_max":449,"ha":792,"o":"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"ϋ":{"x_min":0,"x_max":617,"ha":725,"o":"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"§":{"x_min":0,"x_max":593,"ha":690,"o":"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},"b":{"x_min":0,"x_max":685,"ha":783,"o":"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},"q":{"x_min":0,"x_max":683,"ha":876,"o":"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},"Ω":{"x_min":-0.171875,"x_max":969.5625,"ha":1068,"o":"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},"ύ":{"x_min":0,"x_max":617,"ha":725,"o":"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},"z":{"x_min":-0.015625,"x_max":613.890625,"ha":697,"o":"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"™":{"x_min":0,"x_max":894,"ha":1000,"o":"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},"ή":{"x_min":0.78125,"x_max":697,"ha":810,"o":"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},"Θ":{"x_min":0,"x_max":960,"ha":1056,"o":"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"®":{"x_min":-3,"x_max":1008,"ha":1106,"o":"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{"x_min":0,"x_max":833,"ha":931,"o":"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},"Ε":{"x_min":0,"x_max":736.21875,"ha":778,"o":"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"³":{"x_min":0,"x_max":450,"ha":547,"o":"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{"x_min":0,"x_max":273.609375,"ha":371,"o":"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},"L":{"x_min":0,"x_max":645.828125,"ha":696,"o":"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},"σ":{"x_min":0,"x_max":803.390625,"ha":894,"o":"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},"ζ":{"x_min":0,"x_max":573,"ha":642,"o":"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},"θ":{"x_min":0,"x_max":674,"ha":778,"o":"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},"Ο":{"x_min":0,"x_max":958,"ha":1054,"o":"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},"Γ":{"x_min":0,"x_max":705.28125,"ha":749,"o":"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "}," ":{"x_min":0,"x_max":0,"ha":375},"%":{"x_min":-3,"x_max":1089,"ha":1186,"o":"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},"P":{"x_min":0,"x_max":726,"ha":806,"o":"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},"Έ":{"x_min":0,"x_max":1078.21875,"ha":1118,"o":"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ώ":{"x_min":0.125,"x_max":1136.546875,"ha":1235,"o":"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},"_":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},"Ϊ":{"x_min":-110,"x_max":246,"ha":275,"o":"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{"x_min":23,"x_max":768,"ha":792,"o":"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"½":{"x_min":0,"x_max":1050,"ha":1149,"o":"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},"Ρ":{"x_min":0,"x_max":720,"ha":783,"o":"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"\'":{"x_min":0,"x_max":139,"ha":236,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"ª":{"x_min":0,"x_max":350,"ha":397,"o":"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"΅":{"x_min":0,"x_max":450,"ha":553,"o":"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},"T":{"x_min":0,"x_max":777,"ha":835,"o":"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},"Φ":{"x_min":0,"x_max":915,"ha":997,"o":"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"⁋":{"x_min":0,"x_max":0,"ha":694},"j":{"x_min":-77.78125,"x_max":167,"ha":349,"o":"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},"Σ":{"x_min":0,"x_max":756.953125,"ha":819,"o":"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},"›":{"x_min":18.0625,"x_max":774,"ha":792,"o":"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{"x_min":17.984375,"x_max":773.609375,"ha":792,"o":"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"£":{"x_min":0,"x_max":704.484375,"ha":801,"o":"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},"t":{"x_min":0,"x_max":367,"ha":458,"o":"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"¬":{"x_min":0,"x_max":706,"ha":803,"o":"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},"λ":{"x_min":0,"x_max":750,"ha":803,"o":"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},"W":{"x_min":0,"x_max":1263.890625,"ha":1351,"o":"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{"x_min":18.0625,"x_max":774,"ha":792,"o":"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"v":{"x_min":0,"x_max":675.15625,"ha":761,"o":"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},"τ":{"x_min":0.28125,"x_max":644.5,"ha":703,"o":"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},"ξ":{"x_min":0,"x_max":624.9375,"ha":699,"o":"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{"x_min":-3,"x_max":894.25,"ha":992,"o":"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},"Λ":{"x_min":0,"x_max":862.5,"ha":942,"o":"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},"I":{"x_min":41,"x_max":180,"ha":293,"o":"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},"G":{"x_min":0,"x_max":921,"ha":1011,"o":"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},"ΰ":{"x_min":0,"x_max":617,"ha":725,"o":"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{"x_min":0,"x_max":138.890625,"ha":236,"o":"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"·":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"Υ":{"x_min":0.328125,"x_max":819.515625,"ha":889,"o":"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},"r":{"x_min":0,"x_max":355.5625,"ha":432,"o":"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},"x":{"x_min":0,"x_max":675,"ha":764,"o":"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},"μ":{"x_min":0,"x_max":696.609375,"ha":747,"o":"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},"h":{"x_min":0,"x_max":615,"ha":724,"o":"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"φ":{"x_min":-2,"x_max":878,"ha":974,"o":"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},"f":{"x_min":0,"x_max":378,"ha":472,"o":"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"“":{"x_min":1,"x_max":348.21875,"ha":454,"o":"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},"A":{"x_min":0.03125,"x_max":906.953125,"ha":1008,"o":"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},"‘":{"x_min":1,"x_max":139.890625,"ha":236,"o":"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},"ϊ":{"x_min":-70,"x_max":283,"ha":361,"o":"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},"π":{"x_min":-0.21875,"x_max":773.21875,"ha":857,"o":"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},"ά":{"x_min":0,"x_max":765.5625,"ha":809,"o":"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},"O":{"x_min":0,"x_max":958,"ha":1057,"o":"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},"n":{"x_min":0,"x_max":615,"ha":724,"o":"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},"l":{"x_min":41,"x_max":166,"ha":279,"o":"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"¤":{"x_min":40.09375,"x_max":728.796875,"ha":825,"o":"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},"κ":{"x_min":0,"x_max":632.328125,"ha":679,"o":"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},"p":{"x_min":0,"x_max":685,"ha":786,"o":"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"‡":{"x_min":0,"x_max":777,"ha":835,"o":"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},"ψ":{"x_min":0,"x_max":808,"ha":907,"o":"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},"η":{"x_min":0.78125,"x_max":697,"ha":810,"o":"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},"cssFontWeight":"normal","ascender":1189,"underlinePosition":-100,"cssFontStyle":"normal","boundingBox":{"yMin":-334,"xMin":-111,"yMax":1189,"xMax":1672},"resolution":1000,"original_font_information":{"postscript_name":"Helvetiker-Regular","version_string":"Version 1.00 2004 initial release","vendor_url":"http://www.magenta.gr/","full_font_name":"Helvetiker","font_family_name":"Helvetiker","copyright":"Copyright (c) Μagenta ltd, 2004","description":"","trademark":"","designer":"","designer_url":"","unique_font_identifier":"Μagenta ltd:Helvetiker:22-10-104","license_url":"http://www.ellak.gr/fonts/MgOpen/license.html","license_description":"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\"Fonts\\") and associated documentation files (the \\"Font Software\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\"MgOpen\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\"MgOpen\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","manufacturer_name":"Μagenta ltd","font_sub_family_name":"Regular"},"descender":-334,"familyName":"Helvetiker","lineHeight":1522,"underlineThickness":50}')},"7f9a":function(t,e,n){var r=n("da84"),i=n("1626"),s=n("8925"),a=r.WeakMap;t.exports=i(a)&&/native code/.test(s(a))},"825a":function(t,e,n){var r=n("da84"),i=n("861d"),s=r.String,a=r.TypeError;t.exports=function(t){if(i(t))return t;throw a(s(t)+" is not an object")}},"83ab":function(t,e,n){var r=n("d039");t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},"861d":function(t,e,n){var r=n("1626");t.exports=function(t){return"object"==typeof t?null!==t:r(t)}},8925:function(t,e,n){var r=n("e330"),i=n("1626"),s=n("c6cd"),a=r(Function.toString);i(s.inspectSource)||(s.inspectSource=function(t){return a(t)}),t.exports=s.inspectSource},"8c4f":function(t,e,n){"use strict";
/*!
  * vue-router v3.5.3
  * (c) 2021 Evan You
  * @license MIT
  */function r(t,e){for(var n in e)t[n]=e[n];return t}var i=/[!'()*]/g,s=function(t){return"%"+t.charCodeAt(0).toString(16)},a=/%2C/g,o=function(t){return encodeURIComponent(t).replace(i,s).replace(a,",")};function l(t){try{return decodeURIComponent(t)}catch(e){0}return t}function u(t,e,n){void 0===e&&(e={});var r,i=n||h;try{r=i(t||"")}catch(o){r={}}for(var s in e){var a=e[s];r[s]=Array.isArray(a)?a.map(c):c(a)}return r}var c=function(t){return null==t||"object"===typeof t?t:String(t)};function h(t){var e={};return t=t.trim().replace(/^(\?|#|&)/,""),t?(t.split("&").forEach((function(t){var n=t.replace(/\+/g," ").split("="),r=l(n.shift()),i=n.length>0?l(n.join("=")):null;void 0===e[r]?e[r]=i:Array.isArray(e[r])?e[r].push(i):e[r]=[e[r],i]})),e):e}function d(t){var e=t?Object.keys(t).map((function(e){var n=t[e];if(void 0===n)return"";if(null===n)return o(e);if(Array.isArray(n)){var r=[];return n.forEach((function(t){void 0!==t&&(null===t?r.push(o(e)):r.push(o(e)+"="+o(t)))})),r.join("&")}return o(e)+"="+o(n)})).filter((function(t){return t.length>0})).join("&"):null;return e?"?"+e:""}var p=/\/?$/;function f(t,e,n,r){var i=r&&r.options.stringifyQuery,s=e.query||{};try{s=m(s)}catch(o){}var a={name:e.name||t&&t.name,meta:t&&t.meta||{},path:e.path||"/",hash:e.hash||"",query:s,params:e.params||{},fullPath:x(e,i),matched:t?y(t):[]};return n&&(a.redirectedFrom=x(n,i)),Object.freeze(a)}function m(t){if(Array.isArray(t))return t.map(m);if(t&&"object"===typeof t){var e={};for(var n in t)e[n]=m(t[n]);return e}return t}var g=f(null,{path:"/"});function y(t){var e=[];while(t)e.unshift(t),t=t.parent;return e}function x(t,e){var n=t.path,r=t.query;void 0===r&&(r={});var i=t.hash;void 0===i&&(i="");var s=e||d;return(n||"/")+s(r)+i}function v(t,e,n){return e===g?t===e:!!e&&(t.path&&e.path?t.path.replace(p,"")===e.path.replace(p,"")&&(n||t.hash===e.hash&&b(t.query,e.query)):!(!t.name||!e.name)&&(t.name===e.name&&(n||t.hash===e.hash&&b(t.query,e.query)&&b(t.params,e.params))))}function b(t,e){if(void 0===t&&(t={}),void 0===e&&(e={}),!t||!e)return t===e;var n=Object.keys(t).sort(),r=Object.keys(e).sort();return n.length===r.length&&n.every((function(n,i){var s=t[n],a=r[i];if(a!==n)return!1;var o=e[n];return null==s||null==o?s===o:"object"===typeof s&&"object"===typeof o?b(s,o):String(s)===String(o)}))}function w(t,e){return 0===t.path.replace(p,"/").indexOf(e.path.replace(p,"/"))&&(!e.hash||t.hash===e.hash)&&_(t.query,e.query)}function _(t,e){for(var n in e)if(!(n in t))return!1;return!0}function S(t){for(var e=0;e<t.matched.length;e++){var n=t.matched[e];for(var r in n.instances){var i=n.instances[r],s=n.enteredCbs[r];if(i&&s){delete n.enteredCbs[r];for(var a=0;a<s.length;a++)i._isBeingDestroyed||s[a](i)}}}}var M={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(t,e){var n=e.props,i=e.children,s=e.parent,a=e.data;a.routerView=!0;var o=s.$createElement,l=n.name,u=s.$route,c=s._routerViewCache||(s._routerViewCache={}),h=0,d=!1;while(s&&s._routerRoot!==s){var p=s.$vnode?s.$vnode.data:{};p.routerView&&h++,p.keepAlive&&s._directInactive&&s._inactive&&(d=!0),s=s.$parent}if(a.routerViewDepth=h,d){var f=c[l],m=f&&f.component;return m?(f.configProps&&T(m,a,f.route,f.configProps),o(m,a,i)):o()}var g=u.matched[h],y=g&&g.components[l];if(!g||!y)return c[l]=null,o();c[l]={component:y},a.registerRouteInstance=function(t,e){var n=g.instances[l];(e&&n!==t||!e&&n===t)&&(g.instances[l]=e)},(a.hook||(a.hook={})).prepatch=function(t,e){g.instances[l]=e.componentInstance},a.hook.init=function(t){t.data.keepAlive&&t.componentInstance&&t.componentInstance!==g.instances[l]&&(g.instances[l]=t.componentInstance),S(u)};var x=g.props&&g.props[l];return x&&(r(c[l],{route:u,configProps:x}),T(y,a,u,x)),o(y,a,i)}};function T(t,e,n,i){var s=e.props=E(n,i);if(s){s=e.props=r({},s);var a=e.attrs=e.attrs||{};for(var o in s)t.props&&o in t.props||(a[o]=s[o],delete s[o])}}function E(t,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(t);case"boolean":return e?t.params:void 0;default:0}}function A(t,e,n){var r=t.charAt(0);if("/"===r)return t;if("?"===r||"#"===r)return e+t;var i=e.split("/");n&&i[i.length-1]||i.pop();for(var s=t.replace(/^\//,"").split("/"),a=0;a<s.length;a++){var o=s[a];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function C(t){var e="",n="",r=t.indexOf("#");r>=0&&(e=t.slice(r),t=t.slice(0,r));var i=t.indexOf("?");return i>=0&&(n=t.slice(i+1),t=t.slice(0,i)),{path:t,query:n,hash:e}}function I(t){return t.replace(/\/+/g,"/")}var k=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},R=K,N=F,L=z,D=$,P=Y,O=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function F(t,e){var n,r=[],i=0,s=0,a="",o=e&&e.delimiter||"/";while(null!=(n=O.exec(t))){var l=n[0],u=n[1],c=n.index;if(a+=t.slice(s,c),s=c+l.length,u)a+=u[1];else{var h=t[s],d=n[2],p=n[3],f=n[4],m=n[5],g=n[6],y=n[7];a&&(r.push(a),a="");var x=null!=d&&null!=h&&h!==d,v="+"===g||"*"===g,b="?"===g||"*"===g,w=n[2]||o,_=f||m;r.push({name:p||i++,prefix:d||"",delimiter:w,optional:b,repeat:v,partial:x,asterisk:!!y,pattern:_?V(_):y?".*":"[^"+q(w)+"]+?"})}}return s<t.length&&(a+=t.substr(s)),a&&r.push(a),r}function z(t,e){return $(F(t,e),e)}function B(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function U(t){return encodeURI(t).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function $(t,e){for(var n=new Array(t.length),r=0;r<t.length;r++)"object"===typeof t[r]&&(n[r]=new RegExp("^(?:"+t[r].pattern+")$",W(e)));return function(e,r){for(var i="",s=e||{},a=r||{},o=a.pretty?B:encodeURIComponent,l=0;l<t.length;l++){var u=t[l];if("string"!==typeof u){var c,h=s[u.name];if(null==h){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(k(h)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(h)+"`");if(0===h.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var d=0;d<h.length;d++){if(c=o(h[d]),!n[l].test(c))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===d?u.prefix:u.delimiter)+c}}else{if(c=u.asterisk?U(h):o(h),!n[l].test(c))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+c+'"');i+=u.prefix+c}}else i+=u}return i}}function q(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function V(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function H(t,e){return t.keys=e,t}function W(t){return t&&t.sensitive?"":"i"}function G(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return H(t,e)}function j(t,e,n){for(var r=[],i=0;i<t.length;i++)r.push(K(t[i],e,n).source);var s=new RegExp("(?:"+r.join("|")+")",W(n));return H(s,e)}function X(t,e,n){return Y(F(t,n),e,n)}function Y(t,e,n){k(e)||(n=e||n,e=[]),n=n||{};for(var r=n.strict,i=!1!==n.end,s="",a=0;a<t.length;a++){var o=t[a];if("string"===typeof o)s+=q(o);else{var l=q(o.prefix),u="(?:"+o.pattern+")";e.push(o),o.repeat&&(u+="(?:"+l+u+")*"),u=o.optional?o.partial?l+"("+u+")?":"(?:"+l+"("+u+"))?":l+"("+u+")",s+=u}}var c=q(n.delimiter||"/"),h=s.slice(-c.length)===c;return r||(s=(h?s.slice(0,-c.length):s)+"(?:"+c+"(?=$))?"),s+=i?"$":r&&h?"":"(?="+c+"|$)",H(new RegExp("^"+s,W(n)),e)}function K(t,e,n){return k(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?G(t,e):k(t)?j(t,e,n):X(t,e,n)}R.parse=N,R.compile=L,R.tokensToFunction=D,R.tokensToRegExp=P;var J=Object.create(null);function Z(t,e,n){e=e||{};try{var r=J[t]||(J[t]=R.compile(t));return"string"===typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(i){return""}finally{delete e[0]}}function Q(t,e,n,i){var s="string"===typeof t?{path:t}:t;if(s._normalized)return s;if(s.name){s=r({},t);var a=s.params;return a&&"object"===typeof a&&(s.params=r({},a)),s}if(!s.path&&s.params&&e){s=r({},s),s._normalized=!0;var o=r(r({},e.params),s.params);if(e.name)s.name=e.name,s.params=o;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;s.path=Z(l,o,"path "+e.path)}else 0;return s}var c=C(s.path||""),h=e&&e.path||"/",d=c.path?A(c.path,h,n||s.append):h,p=u(c.query,s.query,i&&i.options.parseQuery),f=s.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:d,query:p,hash:f}}var tt,et=[String,Object],nt=[String,Array],rt=function(){},it={name:"RouterLink",props:{to:{type:et,required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:nt,default:"click"}},render:function(t){var e=this,n=this.$router,i=this.$route,s=n.resolve(this.to,i,this.append),a=s.location,o=s.route,l=s.href,u={},c=n.options.linkActiveClass,h=n.options.linkExactActiveClass,d=null==c?"router-link-active":c,p=null==h?"router-link-exact-active":h,m=null==this.activeClass?d:this.activeClass,g=null==this.exactActiveClass?p:this.exactActiveClass,y=o.redirectedFrom?f(null,Q(o.redirectedFrom),null,n):o;u[g]=v(i,y,this.exactPath),u[m]=this.exact||this.exactPath?u[g]:w(i,y);var x=u[g]?this.ariaCurrentValue:null,b=function(t){st(t)&&(e.replace?n.replace(a,rt):n.push(a,rt))},_={click:st};Array.isArray(this.event)?this.event.forEach((function(t){_[t]=b})):_[this.event]=b;var S={class:u},M=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:o,navigate:b,isActive:u[m],isExactActive:u[g]});if(M){if(1===M.length)return M[0];if(M.length>1||!M.length)return 0===M.length?t():t("span",{},M)}if("a"===this.tag)S.on=_,S.attrs={href:l,"aria-current":x};else{var T=at(this.$slots.default);if(T){T.isStatic=!1;var E=T.data=r({},T.data);for(var A in E.on=E.on||{},E.on){var C=E.on[A];A in _&&(E.on[A]=Array.isArray(C)?C:[C])}for(var I in _)I in E.on?E.on[I].push(_[I]):E.on[I]=b;var k=T.data.attrs=r({},T.data.attrs);k.href=l,k["aria-current"]=x}else S.on=_}return t(this.tag,S,this.$slots.default)}};function st(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&!t.defaultPrevented&&(void 0===t.button||0===t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){var e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}function at(t){if(t)for(var e,n=0;n<t.length;n++){if(e=t[n],"a"===e.tag)return e;if(e.children&&(e=at(e.children)))return e}}function ot(t){if(!ot.installed||tt!==t){ot.installed=!0,tt=t;var e=function(t){return void 0!==t},n=function(t,n){var r=t.$options._parentVnode;e(r)&&e(r=r.data)&&e(r=r.registerRouteInstance)&&r(t,n)};t.mixin({beforeCreate:function(){e(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,n(this,this)},destroyed:function(){n(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",M),t.component("RouterLink",it);var r=t.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}}var lt="undefined"!==typeof window;function ut(t,e,n,r,i){var s=e||[],a=n||Object.create(null),o=r||Object.create(null);t.forEach((function(t){ct(s,a,o,t,i)}));for(var l=0,u=s.length;l<u;l++)"*"===s[l]&&(s.push(s.splice(l,1)[0]),u--,l--);return{pathList:s,pathMap:a,nameMap:o}}function ct(t,e,n,r,i,s){var a=r.path,o=r.name;var l=r.pathToRegexpOptions||{},u=dt(a,i,l.strict);"boolean"===typeof r.caseSensitive&&(l.sensitive=r.caseSensitive);var c={path:u,regex:ht(u,l),components:r.components||{default:r.component},alias:r.alias?"string"===typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:o,parent:i,matchAs:s,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};if(r.children&&r.children.forEach((function(r){var i=s?I(s+"/"+r.path):void 0;ct(t,e,n,r,c,i)})),e[c.path]||(t.push(c.path),e[c.path]=c),void 0!==r.alias)for(var h=Array.isArray(r.alias)?r.alias:[r.alias],d=0;d<h.length;++d){var p=h[d];0;var f={path:p,children:r.children};ct(t,e,n,f,i,c.path||"/")}o&&(n[o]||(n[o]=c))}function ht(t,e){var n=R(t,[],e);return n}function dt(t,e,n){return n||(t=t.replace(/\/$/,"")),"/"===t[0]||null==e?t:I(e.path+"/"+t)}function pt(t,e){var n=ut(t),r=n.pathList,i=n.pathMap,s=n.nameMap;function a(t){ut(t,r,i,s)}function o(t,e){var n="object"!==typeof t?s[t]:void 0;ut([e||t],r,i,s,n),n&&n.alias.length&&ut(n.alias.map((function(t){return{path:t,children:[e]}})),r,i,s,n)}function l(){return r.map((function(t){return i[t]}))}function u(t,n,a){var o=Q(t,n,!1,e),l=o.name;if(l){var u=s[l];if(!u)return d(null,o);var c=u.regex.keys.filter((function(t){return!t.optional})).map((function(t){return t.name}));if("object"!==typeof o.params&&(o.params={}),n&&"object"===typeof n.params)for(var h in n.params)!(h in o.params)&&c.indexOf(h)>-1&&(o.params[h]=n.params[h]);return o.path=Z(u.path,o.params,'named route "'+l+'"'),d(u,o,a)}if(o.path){o.params={};for(var p=0;p<r.length;p++){var f=r[p],m=i[f];if(ft(m.regex,o.path,o.params))return d(m,o,a)}}return d(null,o)}function c(t,n){var r=t.redirect,i="function"===typeof r?r(f(t,n,null,e)):r;if("string"===typeof i&&(i={path:i}),!i||"object"!==typeof i)return d(null,n);var a=i,o=a.name,l=a.path,c=n.query,h=n.hash,p=n.params;if(c=a.hasOwnProperty("query")?a.query:c,h=a.hasOwnProperty("hash")?a.hash:h,p=a.hasOwnProperty("params")?a.params:p,o){s[o];return u({_normalized:!0,name:o,query:c,hash:h,params:p},void 0,n)}if(l){var m=mt(l,t),g=Z(m,p,'redirect route with path "'+m+'"');return u({_normalized:!0,path:g,query:c,hash:h},void 0,n)}return d(null,n)}function h(t,e,n){var r=Z(n,e.params,'aliased route with path "'+n+'"'),i=u({_normalized:!0,path:r});if(i){var s=i.matched,a=s[s.length-1];return e.params=i.params,d(a,e)}return d(null,e)}function d(t,n,r){return t&&t.redirect?c(t,r||n):t&&t.matchAs?h(t,n,t.matchAs):f(t,n,r,e)}return{match:u,addRoute:o,getRoutes:l,addRoutes:a}}function ft(t,e,n){var r=e.match(t);if(!r)return!1;if(!n)return!0;for(var i=1,s=r.length;i<s;++i){var a=t.keys[i-1];a&&(n[a.name||"pathMatch"]="string"===typeof r[i]?l(r[i]):r[i])}return!0}function mt(t,e){return A(t,e.parent?e.parent.path:"/",!0)}var gt=lt&&window.performance&&window.performance.now?window.performance:Date;function yt(){return gt.now().toFixed(3)}var xt=yt();function vt(){return xt}function bt(t){return xt=t}var wt=Object.create(null);function _t(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var t=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(t,""),n=r({},window.history.state);return n.key=vt(),window.history.replaceState(n,"",e),window.addEventListener("popstate",Tt),function(){window.removeEventListener("popstate",Tt)}}function St(t,e,n,r){if(t.app){var i=t.options.scrollBehavior;i&&t.app.$nextTick((function(){var s=Et(),a=i.call(t,e,n,r?s:null);a&&("function"===typeof a.then?a.then((function(t){Lt(t,s)})).catch((function(t){0})):Lt(a,s))}))}}function Mt(){var t=vt();t&&(wt[t]={x:window.pageXOffset,y:window.pageYOffset})}function Tt(t){Mt(),t.state&&t.state.key&&bt(t.state.key)}function Et(){var t=vt();if(t)return wt[t]}function At(t,e){var n=document.documentElement,r=n.getBoundingClientRect(),i=t.getBoundingClientRect();return{x:i.left-r.left-e.x,y:i.top-r.top-e.y}}function Ct(t){return Rt(t.x)||Rt(t.y)}function It(t){return{x:Rt(t.x)?t.x:window.pageXOffset,y:Rt(t.y)?t.y:window.pageYOffset}}function kt(t){return{x:Rt(t.x)?t.x:0,y:Rt(t.y)?t.y:0}}function Rt(t){return"number"===typeof t}var Nt=/^#\d/;function Lt(t,e){var n="object"===typeof t;if(n&&"string"===typeof t.selector){var r=Nt.test(t.selector)?document.getElementById(t.selector.slice(1)):document.querySelector(t.selector);if(r){var i=t.offset&&"object"===typeof t.offset?t.offset:{};i=kt(i),e=At(r,i)}else Ct(t)&&(e=It(t))}else n&&Ct(t)&&(e=It(t));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:t.behavior}):window.scrollTo(e.x,e.y))}var Dt=lt&&function(){var t=window.navigator.userAgent;return(-1===t.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&(window.history&&"function"===typeof window.history.pushState)}();function Pt(t,e){Mt();var n=window.history;try{if(e){var i=r({},n.state);i.key=vt(),n.replaceState(i,"",t)}else n.pushState({key:bt(yt())},"",t)}catch(s){window.location[e?"replace":"assign"](t)}}function Ot(t){Pt(t,!0)}function Ft(t,e,n){var r=function(i){i>=t.length?n():t[i]?e(t[i],(function(){r(i+1)})):r(i+1)};r(0)}var zt={redirected:2,aborted:4,cancelled:8,duplicated:16};function Bt(t,e){return Vt(t,e,zt.redirected,'Redirected when going from "'+t.fullPath+'" to "'+Wt(e)+'" via a navigation guard.')}function Ut(t,e){var n=Vt(t,e,zt.duplicated,'Avoided redundant navigation to current location: "'+t.fullPath+'".');return n.name="NavigationDuplicated",n}function $t(t,e){return Vt(t,e,zt.cancelled,'Navigation cancelled from "'+t.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function qt(t,e){return Vt(t,e,zt.aborted,'Navigation aborted from "'+t.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}function Vt(t,e,n,r){var i=new Error(r);return i._isRouter=!0,i.from=t,i.to=e,i.type=n,i}var Ht=["params","query","hash"];function Wt(t){if("string"===typeof t)return t;if("path"in t)return t.path;var e={};return Ht.forEach((function(n){n in t&&(e[n]=t[n])})),JSON.stringify(e,null,2)}function Gt(t){return Object.prototype.toString.call(t).indexOf("Error")>-1}function jt(t,e){return Gt(t)&&t._isRouter&&(null==e||t.type===e)}function Xt(t){return function(e,n,r){var i=!1,s=0,a=null;Yt(t,(function(t,e,n,o){if("function"===typeof t&&void 0===t.cid){i=!0,s++;var l,u=Qt((function(e){Zt(e)&&(e=e.default),t.resolved="function"===typeof e?e:tt.extend(e),n.components[o]=e,s--,s<=0&&r()})),c=Qt((function(t){var e="Failed to resolve async component "+o+": "+t;a||(a=Gt(t)?t:new Error(e),r(a))}));try{l=t(u,c)}catch(d){c(d)}if(l)if("function"===typeof l.then)l.then(u,c);else{var h=l.component;h&&"function"===typeof h.then&&h.then(u,c)}}})),i||r()}}function Yt(t,e){return Kt(t.map((function(t){return Object.keys(t.components).map((function(n){return e(t.components[n],t.instances[n],t,n)}))})))}function Kt(t){return Array.prototype.concat.apply([],t)}var Jt="function"===typeof Symbol&&"symbol"===typeof Symbol.toStringTag;function Zt(t){return t.__esModule||Jt&&"Module"===t[Symbol.toStringTag]}function Qt(t){var e=!1;return function(){var n=[],r=arguments.length;while(r--)n[r]=arguments[r];if(!e)return e=!0,t.apply(this,n)}}var te=function(t,e){this.router=t,this.base=ee(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ee(t){if(!t)if(lt){var e=document.querySelector("base");t=e&&e.getAttribute("href")||"/",t=t.replace(/^https?:\/\/[^\/]+/,"")}else t="/";return"/"!==t.charAt(0)&&(t="/"+t),t.replace(/\/$/,"")}function ne(t,e){var n,r=Math.max(t.length,e.length);for(n=0;n<r;n++)if(t[n]!==e[n])break;return{updated:e.slice(0,n),activated:e.slice(n),deactivated:t.slice(n)}}function re(t,e,n,r){var i=Yt(t,(function(t,r,i,s){var a=ie(t,e);if(a)return Array.isArray(a)?a.map((function(t){return n(t,r,i,s)})):n(a,r,i,s)}));return Kt(r?i.reverse():i)}function ie(t,e){return"function"!==typeof t&&(t=tt.extend(t)),t.options[e]}function se(t){return re(t,"beforeRouteLeave",oe,!0)}function ae(t){return re(t,"beforeRouteUpdate",oe)}function oe(t,e){if(e)return function(){return t.apply(e,arguments)}}function le(t){return re(t,"beforeRouteEnter",(function(t,e,n,r){return ue(t,n,r)}))}function ue(t,e,n){return function(r,i,s){return t(r,i,(function(t){"function"===typeof t&&(e.enteredCbs[n]||(e.enteredCbs[n]=[]),e.enteredCbs[n].push(t)),s(t)}))}}te.prototype.listen=function(t){this.cb=t},te.prototype.onReady=function(t,e){this.ready?t():(this.readyCbs.push(t),e&&this.readyErrorCbs.push(e))},te.prototype.onError=function(t){this.errorCbs.push(t)},te.prototype.transitionTo=function(t,e,n){var r,i=this;try{r=this.router.match(t,this.current)}catch(a){throw this.errorCbs.forEach((function(t){t(a)})),a}var s=this.current;this.confirmTransition(r,(function(){i.updateRoute(r),e&&e(r),i.ensureURL(),i.router.afterHooks.forEach((function(t){t&&t(r,s)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(t){t(r)})))}),(function(t){n&&n(t),t&&!i.ready&&(jt(t,zt.redirected)&&s===g||(i.ready=!0,i.readyErrorCbs.forEach((function(e){e(t)}))))}))},te.prototype.confirmTransition=function(t,e,n){var r=this,i=this.current;this.pending=t;var s=function(t){!jt(t)&&Gt(t)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(t)})):console.error(t)),n&&n(t)},a=t.matched.length-1,o=i.matched.length-1;if(v(t,i)&&a===o&&t.matched[a]===i.matched[o])return this.ensureURL(),t.hash&&St(this.router,i,t,!1),s(Ut(i,t));var l=ne(this.current.matched,t.matched),u=l.updated,c=l.deactivated,h=l.activated,d=[].concat(se(c),this.router.beforeHooks,ae(u),h.map((function(t){return t.beforeEnter})),Xt(h)),p=function(e,n){if(r.pending!==t)return s($t(i,t));try{e(t,i,(function(e){!1===e?(r.ensureURL(!0),s(qt(i,t))):Gt(e)?(r.ensureURL(!0),s(e)):"string"===typeof e||"object"===typeof e&&("string"===typeof e.path||"string"===typeof e.name)?(s(Bt(i,t)),"object"===typeof e&&e.replace?r.replace(e):r.push(e)):n(e)}))}catch(a){s(a)}};Ft(d,p,(function(){var n=le(h),a=n.concat(r.router.resolveHooks);Ft(a,p,(function(){if(r.pending!==t)return s($t(i,t));r.pending=null,e(t),r.router.app&&r.router.app.$nextTick((function(){S(t)}))}))}))},te.prototype.updateRoute=function(t){this.current=t,this.cb&&this.cb(t)},te.prototype.setupListeners=function(){},te.prototype.teardown=function(){this.listeners.forEach((function(t){t()})),this.listeners=[],this.current=g,this.pending=null};var ce=function(t){function e(e,n){t.call(this,e,n),this._startLocation=he(this.base)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router,n=e.options.scrollBehavior,r=Dt&&n;r&&this.listeners.push(_t());var i=function(){var n=t.current,i=he(t.base);t.current===g&&i===t._startLocation||t.transitionTo(i,(function(t){r&&St(e,t,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},e.prototype.go=function(t){window.history.go(t)},e.prototype.push=function(t,e,n){var r=this,i=this,s=i.current;this.transitionTo(t,(function(t){Pt(I(r.base+t.fullPath)),St(r.router,t,s,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,i=this,s=i.current;this.transitionTo(t,(function(t){Ot(I(r.base+t.fullPath)),St(r.router,t,s,!1),e&&e(t)}),n)},e.prototype.ensureURL=function(t){if(he(this.base)!==this.current.fullPath){var e=I(this.base+this.current.fullPath);t?Pt(e):Ot(e)}},e.prototype.getCurrentLocation=function(){return he(this.base)},e}(te);function he(t){var e=window.location.pathname,n=e.toLowerCase(),r=t.toLowerCase();return!t||n!==r&&0!==n.indexOf(I(r+"/"))||(e=e.slice(t.length)),(e||"/")+window.location.search+window.location.hash}var de=function(t){function e(e,n,r){t.call(this,e,n),r&&pe(this.base)||fe()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router,n=e.options.scrollBehavior,r=Dt&&n;r&&this.listeners.push(_t());var i=function(){var e=t.current;fe()&&t.transitionTo(me(),(function(n){r&&St(t.router,n,e,!0),Dt||xe(n.fullPath)}))},s=Dt?"popstate":"hashchange";window.addEventListener(s,i),this.listeners.push((function(){window.removeEventListener(s,i)}))}},e.prototype.push=function(t,e,n){var r=this,i=this,s=i.current;this.transitionTo(t,(function(t){ye(t.fullPath),St(r.router,t,s,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,i=this,s=i.current;this.transitionTo(t,(function(t){xe(t.fullPath),St(r.router,t,s,!1),e&&e(t)}),n)},e.prototype.go=function(t){window.history.go(t)},e.prototype.ensureURL=function(t){var e=this.current.fullPath;me()!==e&&(t?ye(e):xe(e))},e.prototype.getCurrentLocation=function(){return me()},e}(te);function pe(t){var e=he(t);if(!/^\/#/.test(e))return window.location.replace(I(t+"/#"+e)),!0}function fe(){var t=me();return"/"===t.charAt(0)||(xe("/"+t),!1)}function me(){var t=window.location.href,e=t.indexOf("#");return e<0?"":(t=t.slice(e+1),t)}function ge(t){var e=window.location.href,n=e.indexOf("#"),r=n>=0?e.slice(0,n):e;return r+"#"+t}function ye(t){Dt?Pt(ge(t)):window.location.hash=t}function xe(t){Dt?Ot(ge(t)):window.location.replace(ge(t))}var ve=function(t){function e(e,n){t.call(this,e,n),this.stack=[],this.index=-1}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.push=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index+1).concat(t),r.index++,e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index).concat(t),e&&e(t)}),n)},e.prototype.go=function(t){var e=this,n=this.index+t;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var t=e.current;e.index=n,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,t)}))}),(function(t){jt(t,zt.duplicated)&&(e.index=n)}))}},e.prototype.getCurrentLocation=function(){var t=this.stack[this.stack.length-1];return t?t.fullPath:"/"},e.prototype.ensureURL=function(){},e}(te),be=function(t){void 0===t&&(t={}),this.app=null,this.apps=[],this.options=t,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=pt(t.routes||[],this);var e=t.mode||"hash";switch(this.fallback="history"===e&&!Dt&&!1!==t.fallback,this.fallback&&(e="hash"),lt||(e="abstract"),this.mode=e,e){case"history":this.history=new ce(this,t.base);break;case"hash":this.history=new de(this,t.base,this.fallback);break;case"abstract":this.history=new ve(this,t.base);break;default:0}},we={currentRoute:{configurable:!0}};function _e(t,e){return t.push(e),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}function Se(t,e,n){var r="hash"===n?"#"+e:e;return t?I(t+"/"+r):r}be.prototype.match=function(t,e,n){return this.matcher.match(t,e,n)},we.currentRoute.get=function(){return this.history&&this.history.current},be.prototype.init=function(t){var e=this;if(this.apps.push(t),t.$once("hook:destroyed",(function(){var n=e.apps.indexOf(t);n>-1&&e.apps.splice(n,1),e.app===t&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=t;var n=this.history;if(n instanceof ce||n instanceof de){var r=function(t){var r=n.current,i=e.options.scrollBehavior,s=Dt&&i;s&&"fullPath"in t&&St(e,t,r,!1)},i=function(t){n.setupListeners(),r(t)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(t){e.apps.forEach((function(e){e._route=t}))}))}},be.prototype.beforeEach=function(t){return _e(this.beforeHooks,t)},be.prototype.beforeResolve=function(t){return _e(this.resolveHooks,t)},be.prototype.afterEach=function(t){return _e(this.afterHooks,t)},be.prototype.onReady=function(t,e){this.history.onReady(t,e)},be.prototype.onError=function(t){this.history.onError(t)},be.prototype.push=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!==typeof Promise)return new Promise((function(e,n){r.history.push(t,e,n)}));this.history.push(t,e,n)},be.prototype.replace=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!==typeof Promise)return new Promise((function(e,n){r.history.replace(t,e,n)}));this.history.replace(t,e,n)},be.prototype.go=function(t){this.history.go(t)},be.prototype.back=function(){this.go(-1)},be.prototype.forward=function(){this.go(1)},be.prototype.getMatchedComponents=function(t){var e=t?t.matched?t:this.resolve(t).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(t){return Object.keys(t.components).map((function(e){return t.components[e]}))}))):[]},be.prototype.resolve=function(t,e,n){e=e||this.history.current;var r=Q(t,e,n,this),i=this.match(r,e),s=i.redirectedFrom||i.fullPath,a=this.history.base,o=Se(a,s,this.mode);return{location:r,route:i,href:o,normalizedTo:r,resolved:i}},be.prototype.getRoutes=function(){return this.matcher.getRoutes()},be.prototype.addRoute=function(t,e){this.matcher.addRoute(t,e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},be.prototype.addRoutes=function(t){this.matcher.addRoutes(t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(be.prototype,we),be.install=ot,be.version="3.5.3",be.isNavigationFailure=jt,be.NavigationFailureType=zt,be.START_LOCATION=g,lt&&window.Vue&&window.Vue.use(be),e["a"]=be},"90e3":function(t,e,n){var r=n("e330"),i=0,s=Math.random(),a=r(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++i+s,36)}},9112:function(t,e,n){var r=n("83ab"),i=n("9bf2"),s=n("5c6c");t.exports=r?function(t,e,n){return i.f(t,e,s(1,n))}:function(t,e,n){return t[e]=n,t}},9152:function(t,e){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
e.read=function(t,e,n,r,i){var s,a,o=8*i-r-1,l=(1<<o)-1,u=l>>1,c=-7,h=n?i-1:0,d=n?-1:1,p=t[e+h];for(h+=d,s=p&(1<<-c)-1,p>>=-c,c+=o;c>0;s=256*s+t[e+h],h+=d,c-=8);for(a=s&(1<<-c)-1,s>>=-c,c+=r;c>0;a=256*a+t[e+h],h+=d,c-=8);if(0===s)s=1-u;else{if(s===l)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),s-=u}return(p?-1:1)*a*Math.pow(2,s-r)},e.write=function(t,e,n,r,i,s){var a,o,l,u=8*s-i-1,c=(1<<u)-1,h=c>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-a))<1&&(a--,l*=2),e+=a+h>=1?d/l:d*Math.pow(2,1-h),e*l>=2&&(a++,l/=2),a+h>=c?(o=0,a=c):a+h>=1?(o=(e*l-1)*Math.pow(2,i),a+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,i),a=0));i>=8;t[n+p]=255&o,p+=f,o/=256,i-=8);for(a=a<<i|o,u+=i;u>0;t[n+p]=255&a,p+=f,a/=256,u-=8);t[n+p-f]|=128*m}},"936c":function(t,e,n){(function(t,e){/*! For license information please see mindar-image-three.prod.js.LICENSE.txt */
(()=>{var n={1113:function(e){e.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(e,n,r){"use strict";r.r(n),r.d(n,"encode",(function(){return I})),r.d(n,"decode",(function(){return V})),r.d(n,"decodeAsync",(function(){return Y})),r.d(n,"decodeArrayStream",(function(){return K})),r.d(n,"decodeStream",(function(){return J})),r.d(n,"Decoder",(function(){return $})),r.d(n,"Encoder",(function(){return A})),r.d(n,"ExtensionCodec",(function(){return M})),r.d(n,"ExtData",(function(){return f})),r.d(n,"EXT_TIMESTAMP",(function(){return y})),r.d(n,"encodeDateToTimeSpec",(function(){return v})),r.d(n,"encodeTimeSpecToTimestamp",(function(){return x})),r.d(n,"decodeTimestampToTimeSpec",(function(){return w})),r.d(n,"encodeTimestampExtension",(function(){return b})),r.d(n,"decodeTimestampExtension",(function(){return _}));var i=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,s=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=s.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=s.return)&&n.call(s)}finally{if(i)throw i.error}}return a},s=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t},a="undefined"!=typeof t&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function o(t){for(var e=t.length,n=0,r=0;r<e;){var i=t.charCodeAt(r++);if(0!=(4294967168&i))if(0==(4294965248&i))n+=2;else{if(i>=55296&&i<=56319&&r<e){var s=t.charCodeAt(r);56320==(64512&s)&&(++r,i=((1023&i)<<10)+(1023&s)+65536)}n+=0==(4294901760&i)?3:4}else n++}return n}var l=a?new TextEncoder:void 0,u="undefined"!=typeof t?200:0,c=(null==l?void 0:l.encodeInto)?function(t,e,n){l.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(l.encode(t),n)};function h(t,e,n){for(var r=e,i=r+n,a=[],o="";r<i;){var l=t[r++];if(0==(128&l))a.push(l);else if(192==(224&l)){var u=63&t[r++];a.push((31&l)<<6|u)}else if(224==(240&l)){u=63&t[r++];var c=63&t[r++];a.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&t[r++])<<12|(c=63&t[r++])<<6|63&t[r++];h>65535&&(h-=65536,a.push(h>>>10&1023|55296),h=56320|1023&h),a.push(h)}else a.push(l);a.length>=4096&&(o+=String.fromCharCode.apply(String,s(a)),a.length=0)}return a.length>0&&(o+=String.fromCharCode.apply(String,s(a))),o}var d=a?new TextDecoder:null,p="undefined"!=typeof t?200:0,f=function(t,e){this.type=t,this.data=e};function m(t,e,n){var r=Math.floor(n/4294967296),i=n;t.setUint32(e,r),t.setUint32(e+4,i)}function g(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var y=-1;function x(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var i=new Uint8Array(4);return(e=new DataView(i.buffer)).setUint32(0,n),i}var s=n/4294967296,a=4294967295&n;return i=new Uint8Array(8),(e=new DataView(i.buffer)).setUint32(0,r<<2|3&s),e.setUint32(4,a),i}return i=new Uint8Array(12),(e=new DataView(i.buffer)).setUint32(0,r),m(e,4,n),i}function v(t){var e=t.getTime(),n=Math.floor(e/1e3),r=1e6*(e-1e3*n),i=Math.floor(r/1e9);return{sec:n+i,nsec:r-1e9*i}}function b(t){return t instanceof Date?x(v(t)):null}function w(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:g(e,4),nsec:e.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+t.length)}}function _(t){var e=w(t);return new Date(1e3*e.sec+e.nsec/1e6)}var S={type:y,encode:b,decode:_},M=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(S)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var i=1+e;this.builtInEncoders[i]=n,this.builtInDecoders[i]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(i=r(t,e)))return new f(-1-n,i);for(n=0;n<this.encoders.length;n++){var r,i;if(null!=(r=this.encoders[n])&&null!=(i=r(t,e)))return new f(n,i)}return t instanceof f?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new f(e,t)},t.defaultCodec=new t,t}();function T(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var E=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},A=function(){function t(t,e,n,r,i,s,a){void 0===t&&(t=M.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=i,this.forceFloat32=s,this.ignoreUndefined=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.encode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth "+e);null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: "+t+" bytes in UTF-8");this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){var e=t.length;if(a&&e>u){var n=o(t);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),c(t,this.bytes,this.pos),this.pos+=n}else n=o(t),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(t,e,n){for(var r=t.length,i=n,s=0;s<r;){var a=t.charCodeAt(s++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[i++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&s<r){var o=t.charCodeAt(s);56320==(64512&o)&&(++s,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(e[i++]=a>>12&15|224,e[i++]=a>>6&63|128):(e[i++]=a>>18&7|240,e[i++]=a>>12&63|128,e[i++]=a>>6&63|128)}e[i++]=63&a|128}else e[i++]=a}}(t,this.bytes,this.pos),this.pos+=n},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(t));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: "+e);this.writeU8(198),this.writeU32(e)}var n=T(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n,r,i=t.length;if(i<16)this.writeU8(144+i);else if(i<65536)this.writeU8(220),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large array: "+i);this.writeU8(221),this.writeU32(i)}try{for(var s=E(t),a=s.next();!a.done;a=s.next()){var o=a.value;this.encode(o,e+1)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}},t.prototype.countWithoutUndefined=function(t,e){var n,r,i=0;try{for(var s=E(e),a=s.next();!a.done;a=s.next())void 0!==t[a.value]&&i++}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}return i},t.prototype.encodeMap=function(t,e){var n,r,i=Object.keys(t);this.sortKeys&&i.sort();var s=this.ignoreUndefined?this.countWithoutUndefined(t,i):i.length;if(s<16)this.writeU8(128+s);else if(s<65536)this.writeU8(222),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large map object: "+s);this.writeU8(223),this.writeU32(s)}try{for(var a=E(i),o=a.next();!o.done;o=a.next()){var l=o.value,u=t[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,e+1))}}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: "+e);this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,i=n;t.setUint32(e,r),t.setUint32(e+4,i)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),m(this.view,this.pos,t),this.pos+=8},t}(),C={};function I(t,e){void 0===e&&(e=C);var n=new A(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined);return n.encode(t,1),n.getUint8Array()}function k(t){return(t<0?"-":"")+"0x"+Math.abs(t).toString(16).padStart(2,"0")}var R=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.get=function(t,e,n){var r=this.caches[n-1],i=r.length;t:for(var s=0;s<i;s++){for(var a=r[s],o=a.bytes,l=0;l<n;l++)if(o[l]!==t[e+l])continue t;return a.value}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,value:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.get(t,e,n);if(null!=r)return r;var i=h(t,e,n),s=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(s,i),i},t}(),N=function(t,e){var n,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},L=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,i){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,i,(e=t[n](e)).done,e.value)}))}}},D=function(t){return this instanceof D?(this.v=t,this):new D(t)},P=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=n.apply(t,e||[]),s=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){i[t]&&(r[t]=function(e){return new Promise((function(n,r){s.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=i[t](e)).value instanceof D?Promise.resolve(n.value.v).then(l,u):c(s[0][2],n)}catch(t){c(s[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function c(t,e){t(e),s.shift(),s.length&&o(s[0][0],s[0][1])}},O=new DataView(new ArrayBuffer(0)),F=new Uint8Array(O.buffer),z=function(){try{O.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),B=new z("Insufficient data"),U=new R,$=function(){function t(t,e,n,r,i,s,a,o){void 0===t&&(t=M.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===i&&(i=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=4294967295),void 0===o&&(o=U),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=i,this.maxMapLength=s,this.maxExtLength=a,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=O,this.bytes=F,this.headByte=-1,this.stack=[]}return t.prototype.setBuffer=function(t){this.bytes=T(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=T(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining()){var e=this.bytes.subarray(this.pos),n=T(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return void 0===t&&(t=1),this.view.byteLength-this.pos>=t},t.prototype.createNoExtraBytesError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra "+(e.byteLength-n)+" byte(s) found at buffer["+t+"]")},t.prototype.decodeSingleSync=function(){var t=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return t},t.prototype.decodeSingleAsync=function(t){var e,n,r,i;return function(t,e,n,r){return new(n||(n=Promise))((function(i,s){function a(t){try{l(r.next(t))}catch(t){s(t)}}function o(t){try{l(r.throw(t))}catch(t){s(t)}}function l(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,o)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var s,a,o,l,u,c,h,d;return N(this,(function(p){switch(p.label){case 0:s=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),e=L(t),p.label=2;case 2:return[4,e.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,s)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{a=this.decodeSync(),s=!0}catch(t){if(!(t instanceof z))throw t}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(i=e.return)?[4,i.call(e)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(s){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,a]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parcing "+k(c)+" at "+d+" ("+h+" in the current buffer)")}}))}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return P(this,arguments,(function(){var n,r,i,s,a,o,l,u,c;return N(this,(function(h){switch(h.label){case 0:n=e,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),i=L(t),h.label=2;case 2:return[4,D(i.next())];case 3:if((s=h.sent()).done)return[3,12];if(a=s.value,e&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,D(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof z))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),s&&!s.done&&(c=i.return)?[4,D(c.call(i))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.decodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new Error("Unrecognized type byte: "+k(t));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var i=this.stack;i.length>0;){var s=i[i.length-1];if(0===s.type){if(s.array[s.position]=e,s.position++,s.position!==s.size)continue t;i.pop(),e=s.array}else{if(1===s.type){if("string"!=(a=typeof e)&&"number"!==a)throw new Error("The type of key must be string or number but "+typeof e);s.key=e,s.type=2;continue t}if(s.map[s.key]=e,s.readCount++,s.readCount!==s.size){s.key=null,s.type=1;continue t}i.pop(),e=s.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new Error("Unrecognized array type byte: "+k(t))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new Error("Max length exceeded: map length ("+t+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+t+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+t+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+e+t)throw B;var r,i=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.cachedKeyDecoder.decode(this.bytes,i,t):a&&t>p?function(t,e,n){var r=t.subarray(e,e+n);return d.decode(r)}(this.bytes,i,t):h(this.bytes,i,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+t+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(t+e))throw B;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+t+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=g(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),q={};function V(t,e){void 0===e&&(e=q);var n=new $(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return n.setBuffer(t),n.decodeSingleSync()}var H=function(t,e){var n,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},W=function(t){return this instanceof W?(this.v=t,this):new W(t)},G=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=n.apply(t,e||[]),s=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){i[t]&&(r[t]=function(e){return new Promise((function(n,r){s.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=i[t](e)).value instanceof W?Promise.resolve(n.value.v).then(l,u):c(s[0][2],n)}catch(t){c(s[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function c(t,e){t(e),s.shift(),s.length&&o(s[0][0],s[0][1])}};function j(t){if(null==t)throw new Error("Assertion Failure: value must not be null nor undefined")}function X(t){return null!=t[Symbol.asyncIterator]?t:function(t){return G(this,arguments,(function(){var e,n,r,i;return H(this,(function(s){switch(s.label){case 0:e=t.getReader(),s.label=1;case 1:s.trys.push([1,,9,10]),s.label=2;case 2:return[4,W(e.read())];case 3:return n=s.sent(),r=n.done,i=n.value,r?[4,W(void 0)]:[3,5];case 4:return[2,s.sent()];case 5:return j(i),[4,W(i)];case 6:return[4,s.sent()];case 7:return s.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}}))}))}(t)}function Y(t,e){return void 0===e&&(e=q),function(t,e,n,r){return new(n||(n=Promise))((function(i,s){function a(t){try{l(r.next(t))}catch(t){s(t)}}function o(t){try{l(r.throw(t))}catch(t){s(t)}}function l(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,o)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(t,e){var n,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}(this,(function(r){return n=X(t),[2,new $(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeSingleAsync(n)]}))}))}function K(t,e){void 0===e&&(e=q);var n=X(t);return new $(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeArrayStream(n)}function J(t,e){void 0===e&&(e=q);var n=X(t);return new $(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeStream(n)}}])},4563:(n,r,i)=>{"use strict";i.r(r),i.d(r,{Abs:()=>Zt,Acos:()=>Qt,Acosh:()=>te,AdadeltaOptimizer:()=>El,AdagradOptimizer:()=>Cl,AdamOptimizer:()=>Rl,AdamaxOptimizer:()=>Dl,Add:()=>ee,AddN:()=>ne,All:()=>re,Any:()=>ie,ArgMax:()=>se,ArgMin:()=>ae,Asin:()=>oe,Asinh:()=>le,Atan:()=>ue,Atan2:()=>he,Atanh:()=>ce,AvgPool:()=>de,AvgPool3D:()=>fe,AvgPool3DGrad:()=>me,AvgPoolGrad:()=>pe,BatchMatMul:()=>ge,BatchToSpaceND:()=>ye,Bincount:()=>xe,BroadcastArgs:()=>be,BroadcastTo:()=>ve,Callback:()=>bS,CallbackList:()=>bx,Cast:()=>we,Ceil:()=>_e,ClipByValue:()=>Se,Complex:()=>Me,ComplexAbs:()=>Te,Concat:()=>Ee,Conv2D:()=>Ae,Conv2DBackpropFilter:()=>Ce,Conv2DBackpropInput:()=>Ie,Conv3D:()=>ke,Conv3DBackpropFilterV2:()=>Re,Conv3DBackpropInputV2:()=>Ne,Cos:()=>Le,Cosh:()=>De,CropAndResize:()=>Oe,Cumsum:()=>Pe,CustomCallback:()=>Sx,DataStorage:()=>X,DenseBincount:()=>Fe,DepthToSpace:()=>ze,DepthwiseConv2dNative:()=>Be,DepthwiseConv2dNativeBackpropFilter:()=>Ue,DepthwiseConv2dNativeBackpropInput:()=>$e,Diag:()=>qe,Dilation2D:()=>Ve,Dilation2DBackpropFilter:()=>We,Dilation2DBackpropInput:()=>He,ENV:()=>Yt,EarlyStopping:()=>SS,Einsum:()=>je,Elu:()=>Xe,EluGrad:()=>Ye,Environment:()=>Wt,Equal:()=>Je,Erf:()=>Ke,Exp:()=>Ze,ExpandDims:()=>Qe,Expm1:()=>tn,FFT:()=>en,Fill:()=>nn,FlipLeftRight:()=>rn,Floor:()=>sn,FloorDiv:()=>an,FromPixels:()=>Qr,FusedBatchNorm:()=>on,FusedConv2D:()=>ni,FusedDepthwiseConv2D:()=>ri,GatherNd:()=>un,GatherV2:()=>ln,GraphModel:()=>BM,Greater:()=>cn,GreaterEqual:()=>hn,History:()=>_x,IFFT:()=>pn,Identity:()=>dn,Imag:()=>fn,InputSpec:()=>ox,IsFinite:()=>mn,IsInf:()=>gn,IsNan:()=>yn,KernelBackend:()=>Y,LRN:()=>Cn,LRNGrad:()=>In,LayerVariable:()=>ix,LayersModel:()=>Cv,LeakyRelu:()=>xn,Less:()=>vn,LessEqual:()=>bn,LinSpace:()=>wn,Log:()=>_n,Log1p:()=>Sn,LogSoftmax:()=>An,LogicalAnd:()=>Mn,LogicalNot:()=>Tn,LogicalOr:()=>En,Max:()=>kn,MaxPool:()=>Nn,MaxPool3D:()=>Dn,MaxPool3DGrad:()=>Pn,MaxPoolGrad:()=>Ln,MaxPoolWithArgmax:()=>On,Maximum:()=>Rn,Mean:()=>Fn,Min:()=>zn,Minimum:()=>Bn,MirrorPad:()=>Un,Mod:()=>$n,MomentumOptimizer:()=>Ol,Multinomial:()=>qn,Multiply:()=>Vn,Neg:()=>Hn,NonMaxSuppressionV3:()=>Gn,NonMaxSuppressionV4:()=>jn,NonMaxSuppressionV5:()=>Xn,NotEqual:()=>Wn,OP_SCOPE_SUFFIX:()=>As,OneHot:()=>Kn,OnesLike:()=>Yn,Optimizer:()=>Tl,OptimizerConstructors:()=>zl,Pack:()=>Jn,PadV2:()=>Zn,Pool:()=>Qn,Pow:()=>tr,Prelu:()=>er,Prod:()=>nr,RMSPropOptimizer:()=>Fl,RNN:()=>Db,Range:()=>rr,Rank:()=>Zi,Real:()=>ir,RealDiv:()=>Ge,Reciprocal:()=>sr,Reduction:()=>up,Relu:()=>ar,Relu6:()=>dr,Reshape:()=>or,ResizeBilinear:()=>cr,ResizeBilinearGrad:()=>hr,ResizeNearestNeighbor:()=>lr,ResizeNearestNeighborGrad:()=>ur,Reverse:()=>pr,RotateWithOffset:()=>ti,Round:()=>fr,Rsqrt:()=>mr,SGDOptimizer:()=>Pl,ScatterNd:()=>gr,Select:()=>yr,Selu:()=>xr,Sequential:()=>Rv,Sigmoid:()=>Sr,Sign:()=>_r,Sin:()=>br,Sinh:()=>wr,Slice:()=>vr,Softmax:()=>Ir,Softplus:()=>Mr,SpaceToBatchND:()=>Ar,SparseFillEmptyRows:()=>kr,SparseReshape:()=>Rr,SparseSegmentMean:()=>Nr,SparseSegmentSum:()=>Lr,SparseToDense:()=>Dr,SplitV:()=>Cr,Sqrt:()=>Tr,Square:()=>Or,SquaredDifference:()=>Pr,Step:()=>Zr,StridedSlice:()=>Fr,StringNGrams:()=>zr,StringSplit:()=>Br,StringToHashBucketFast:()=>Ur,Sub:()=>$r,Sum:()=>Er,SymbolicTensor:()=>lx,Tan:()=>qr,Tanh:()=>Vr,Tensor:()=>Yi,TensorBuffer:()=>Wi,Tile:()=>Hr,TopK:()=>Wr,Transform:()=>Gr,Transpose:()=>jr,Unique:()=>Xr,Unpack:()=>Yr,UnsortedSegmentSum:()=>Kr,Variable:()=>Ji,ZerosLike:()=>Jr,_FusedMatMul:()=>ei,abs:()=>Nl,acos:()=>Bl,acosh:()=>Ul,add:()=>cl,addN:()=>$l,all:()=>ql,any:()=>Vl,argMax:()=>Hl,argMin:()=>Wl,asin:()=>Gl,asinh:()=>jl,atan:()=>Xl,atan2:()=>Yl,atanh:()=>Kl,avgPool:()=>du,avgPool3d:()=>pu,backend:()=>ll,backend_util:()=>v,basicLSTMCell:()=>xu,batchNorm:()=>bu,batchNorm2d:()=>wu,batchNorm3d:()=>_u,batchNorm4d:()=>Su,batchToSpaceND:()=>vu,bincount:()=>Mu,booleanMaskAsync:()=>pd,broadcastArgs:()=>Tu,broadcastTo:()=>Eu,broadcast_util:()=>c,browser:()=>h,buffer:()=>Ea,callbacks:()=>MS,cast:()=>Aa,ceil:()=>Au,clipByValue:()=>Cu,clone:()=>Ca,complex:()=>Is,concat:()=>fu,concat1d:()=>Iu,concat2d:()=>ku,concat3d:()=>Ru,concat4d:()=>Nu,constraints:()=>w,conv1d:()=>Du,conv2d:()=>Lu,conv2dTranspose:()=>Ou,conv3d:()=>Fu,conv3dTranspose:()=>Bu,copyRegisteredKernels:()=>mi,cos:()=>Uu,cosh:()=>$u,cosineWindow:()=>_d,cumsum:()=>qu,customGrad:()=>_l,data:()=>G,denseBincount:()=>Vu,deprecationWarn:()=>Go,depthToSpace:()=>Hu,depthwiseConv2d:()=>Wu,deregisterOp:()=>kS,device_util:()=>o,diag:()=>Gu,dilation2d:()=>ju,disableDeprecationWarnings:()=>Wo,dispose:()=>Zo,disposeVariables:()=>jo,div:()=>dl,divNoNan:()=>Ku,dot:()=>Ju,dropout:()=>bd,einsum:()=>Zu,elu:()=>Qu,enableDebugMode:()=>Ho,enableProdMode:()=>Vo,enclosingPowerOfTwo:()=>wd,engine:()=>Xo,env:()=>jt,equal:()=>Xu,erf:()=>tc,exp:()=>ec,expandDims:()=>nc,expm1:()=>rc,eye:()=>sc,fft:()=>Vh,fill:()=>Al,findBackend:()=>sl,findBackendFactory:()=>al,floor:()=>ac,floorDiv:()=>hl,fused:()=>y,gather:()=>oc,gatherND:()=>vd,gather_util:()=>d,getBackend:()=>rl,getGradient:()=>ui,getKernel:()=>li,getKernelsForBackend:()=>ci,grad:()=>yl,grads:()=>xl,greater:()=>lc,greaterEqual:()=>uc,ifft:()=>Hh,imag:()=>cc,image:()=>Cp,inTopKAsync:()=>Sd,initializers:()=>_,input:()=>Pv,io:()=>l,irfft:()=>Wh,isFinite:()=>hc,isInf:()=>dc,isNaN:()=>pc,keep:()=>Qo,kernel_impls:()=>b,layers:()=>S,leakyRelu:()=>fc,less:()=>mc,lessEqual:()=>gc,linalg:()=>Ip,linspace:()=>yc,loadGraphModel:()=>UM,loadLayersModel:()=>Dv,localResponseNormalization:()=>xc,log:()=>vc,log1p:()=>bc,logSigmoid:()=>Sc,logSoftmax:()=>Ec,logSumExp:()=>Pc,logicalAnd:()=>Oc,logicalNot:()=>Fc,logicalOr:()=>zc,logicalXor:()=>Bc,losses:()=>kp,matMul:()=>ja,math:()=>u,max:()=>Mc,maxPool:()=>Uc,maxPool3d:()=>$c,maxPoolWithArgmax:()=>qc,maximum:()=>Ll,mean:()=>Vc,memory:()=>Yo,meshgrid:()=>Gc,metrics:()=>M,min:()=>jc,minimum:()=>Xc,mirrorPad:()=>Yc,mod:()=>Kc,model:()=>Nv,models:()=>T,moments:()=>Jc,movingAverage:()=>gd,mul:()=>pl,multiRNNCell:()=>Zc,multinomial:()=>Qc,neg:()=>wc,nextFrame:()=>Pp,norm:()=>md,notEqual:()=>th,oneHot:()=>Xa,ones:()=>Wc,onesLike:()=>eh,op:()=>Cs,outerProduct:()=>nh,pad:()=>rh,pad1d:()=>ih,pad2d:()=>sh,pad3d:()=>ah,pad4d:()=>oh,pool:()=>uh,pow:()=>Il,prelu:()=>ch,print:()=>Ia,prod:()=>hh,profile:()=>Ko,rand:()=>dh,randomGamma:()=>yh,randomNormal:()=>xh,randomUniform:()=>vh,range:()=>bh,ready:()=>nl,real:()=>wh,reciprocal:()=>_h,registerBackend:()=>ol,registerCallbackConstructor:()=>Ov,registerGradient:()=>di,registerKernel:()=>hi,registerOp:()=>CS,regularizers:()=>E,relu:()=>Sh,relu6:()=>Mh,removeBackend:()=>il,reshape:()=>hu,reverse:()=>Th,reverse1d:()=>Eh,reverse2d:()=>Ah,reverse3d:()=>Ch,reverse4d:()=>Ih,rfft:()=>jh,round:()=>kh,rsqrt:()=>Rh,scalar:()=>Ml,scatterND:()=>yd,scatter_util:()=>p,selu:()=>Nh,separableConv2d:()=>Lh,sequential:()=>Lv,serialization:()=>m,setBackend:()=>el,setPlatform:()=>ul,setdiff1dAsync:()=>Dh,sigmoid:()=>mu,sign:()=>Ph,signal:()=>Ap,sin:()=>Oh,sinh:()=>Fh,slice:()=>gu,slice1d:()=>zh,slice2d:()=>Bh,slice3d:()=>Uh,slice4d:()=>$h,slice_util:()=>f,softmax:()=>qh,softplus:()=>_c,spaceToBatchND:()=>lh,sparse:()=>Rp,sparseToDense:()=>xd,spectral:()=>Ep,split:()=>Gh,sqrt:()=>fl,square:()=>ml,squaredDifference:()=>Xh,squeeze:()=>Yh,stack:()=>Kh,step:()=>Jh,stridedSlice:()=>Zh,string:()=>Np,sub:()=>kl,sum:()=>Tc,sumOutType:()=>ss,tan:()=>Qh,tanh:()=>yu,tensor:()=>Rs,tensor1d:()=>td,tensor2d:()=>ed,tensor3d:()=>to,tensor4d:()=>nd,tensor5d:()=>rd,tensor6d:()=>id,tensor_util:()=>a,test_util:()=>g,tidy:()=>Jo,tile:()=>ic,time:()=>tl,topk:()=>sd,train:()=>Lp,transpose:()=>Ya,truncatedNormal:()=>ad,unique:()=>od,unregisterGradient:()=>fi,unregisterKernel:()=>pi,unsortedSegmentSum:()=>ld,unstack:()=>ud,upcastType:()=>is,util:()=>s,valueAndGrad:()=>vl,valueAndGrads:()=>bl,variable:()=>cd,variableGrads:()=>wl,version:()=>FU,version_converter:()=>$M,version_core:()=>qo,version_layers:()=>rv,where:()=>Yu,whereAsync:()=>dd,zeros:()=>Hc,zerosLike:()=>gl});var s={};i.r(s),i.d(s,{arraysEqual:()=>ht,assert:()=>st,assertNonNegativeIntegerDimensions:()=>$t,assertNonNull:()=>ot,assertShapesMatch:()=>at,bytesFromStringArray:()=>Ct,bytesPerElement:()=>At,checkConversionForErrors:()=>St,clamp:()=>Q,computeStrides:()=>Pt,createScalarValue:()=>Ri,createShuffledIndices:()=>mt,decodeString:()=>Oi,distSquared:()=>it,encodeString:()=>Pi,fetch:()=>Di,fingerPrint64:()=>ki,flatten:()=>lt,getArrayFromDType:()=>_t,getTypedArrayFromDType:()=>wt,hasEncodingLoss:()=>Tt,hexToLong:()=>vi,indexToLoc:()=>Vt,inferDtype:()=>Nt,inferFromImplicitShape:()=>xt,isBoolean:()=>kt,isFunction:()=>Lt,isInt:()=>dt,isNumber:()=>Rt,isPromise:()=>Ht,isScalarShape:()=>ct,isString:()=>It,isTypedArray:()=>Et,isValidDtype:()=>Mt,locToIndex:()=>qt,makeOnesTypedArray:()=>zt,makeZerosNestedTypedArray:()=>Ut,makeZerosTypedArray:()=>Bt,nearestDivisor:()=>Dt,nearestLargerEven:()=>tt,now:()=>Li,parseAxisParam:()=>vt,randUniform:()=>rt,repeatedTry:()=>yt,rightPad:()=>gt,shuffle:()=>J,shuffleCombo:()=>Z,sizeFromShape:()=>ut,sizeToSquarishShape:()=>ft,squeezeShape:()=>bt,sum:()=>nt,swap:()=>et,tanh:()=>pt,toNestedArray:()=>Ft,toTypedArray:()=>Ni});var a={};i.r(a),i.d(a,{assertTypesMatch:()=>os,getTensorsInContainer:()=>us,isTensorInList:()=>ls,makeTypesMatch:()=>as});var o={};i.r(o),i.d(o,{isBrowser:()=>bs,isMobile:()=>vs,mockIsMobile:()=>xs});var l={};i.r(l),i.d(l,{browserFiles:()=>La,browserHTTPRequest:()=>qa,concatenateArrayBuffers:()=>zs,copyModel:()=>_a,decodeWeights:()=>Ds,encodeWeights:()=>Ls,fromMemory:()=>Wa,getLoadHandlers:()=>Xs,getModelArtifactsForJSON:()=>$s,getModelArtifactsInfoForJSON:()=>qs,getSaveHandlers:()=>js,http:()=>$a,isHTTPScheme:()=>Ba,listModels:()=>ba,loadWeights:()=>Oa,moveModel:()=>Sa,registerLoadRouter:()=>Gs,registerSaveRouter:()=>Ws,removeModel:()=>wa,weightsLoaderFactory:()=>Fa,withSaveHandler:()=>Ga});var u={};i.r(u),i.d(u,{confusionMatrix:()=>Ka});var c={};i.r(c),i.d(c,{assertAndGetBroadcastShape:()=>Qa,getBroadcastDims:()=>Ja,getReductionAxes:()=>Za});var h={};i.r(h),i.d(h,{fromPixels:()=>so,fromPixelsAsync:()=>ro,toPixels:()=>io});var d={};i.r(d),i.d(d,{prepareAndValidate:()=>ao});var p={};i.r(p),i.d(p,{calculateShapes:()=>uo,validateInput:()=>lo,validateUpdateShape:()=>oo});var f={};i.r(f),i.d(f,{assertParamsValid:()=>co,computeFlatOffset:()=>Mo,computeOutShape:()=>po,getNormalizedAxes:()=>yo,isSliceContinous:()=>So,maskToAxes:()=>ho,parseSliceParams:()=>To,sliceInfo:()=>Eo,startForAxis:()=>wo,startIndicesWithElidedDims:()=>xo,stopForAxis:()=>_o,stopIndicesWithElidedDims:()=>vo,stridesForAxis:()=>bo,stridesWithElidedDims:()=>fo});var m={};i.r(m),i.d(m,{Serializable:()=>Co,SerializationMap:()=>Io,registerClass:()=>ko});var g={};i.r(g),i.d(g,{TEST_EPSILON_FLOAT16:()=>Ro,encodeStrings:()=>$o,expectArrayBuffersEqual:()=>Uo,expectArraysClose:()=>No,expectArraysEqual:()=>Oo,expectNumbersClose:()=>Fo,expectPromiseToFail:()=>Po,expectValuesInRange:()=>Bo,testEpsilon:()=>Lo});var y={};i.r(y),i.d(y,{conv2d:()=>Id,depthwiseConv2d:()=>Nd,matMul:()=>Ld});var x={};i.r(x),i.d(x,{collectGatherOpShapeInfo:()=>Rf,computeOutShape:()=>kf,segOpComputeOptimalWindowSize:()=>If});var v={};i.r(v),i.d(v,{ERF_A1:()=>Yp,ERF_A2:()=>Kp,ERF_A3:()=>Jp,ERF_A4:()=>Zp,ERF_A5:()=>Qp,ERF_P:()=>Xp,PARALLELIZE_THRESHOLD:()=>zp,SELU_SCALE:()=>jp,SELU_SCALEALPHA:()=>Gp,applyActivation:()=>Ad,assertAndGetBroadcastShape:()=>Qa,assertAxesAreInnerMostDims:()=>Rc,assertParamsConsistent:()=>Op,assignToTypedArray:()=>af,axesAreInnerMostDims:()=>Ac,calculateShapes:()=>uo,checkEinsumDimSizes:()=>df,checkPadOnDimRoundingMode:()=>cu,combineLocations:()=>Cc,complexWithEvenIndex:()=>nf,complexWithOddIndex:()=>rf,computeConv2DInfo:()=>tu,computeConv3DInfo:()=>eu,computeDefaultPad:()=>nu,computeDilation2DInfo:()=>Jl,computeOptimalWindowSize:()=>Bp,computeOutAndReduceShapes:()=>Ic,computeOutShape:()=>Fp,computePool2DInfo:()=>Zl,computePool3DInfo:()=>Ql,convertConv2DDataFormat:()=>uu,decodeEinsumEquation:()=>cf,eitherStridesOrDilationsAreOne:()=>lu,expandShapeToKeepDim:()=>kc,exponent:()=>lf,exponents:()=>of,fromStringArrayToUint8:()=>Lf,fromUint8ToStringArray:()=>Nf,getAxesPermutation:()=>Nc,getBroadcastDims:()=>Ja,getComplexWithIndex:()=>sf,getEinsumComputePath:()=>pf,getEinsumPermutation:()=>hf,getFusedBiasGradient:()=>Ed,getFusedDyActivation:()=>Td,getImageCenter:()=>Up,getInnerMostAxes:()=>Dc,getPermuted:()=>qp,getReductionAxes:()=>Za,getReshaped:()=>$p,getReshapedPermuted:()=>Vp,getSliceBeginCoords:()=>Hp,getSliceSize:()=>Wp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>yf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>vf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>_f,getSparseReshapeInputOutputMismatchErrorMessage:()=>Mf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Sf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>bf,getSparseReshapeNegativeOutputDimErrorMessage:()=>wf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Cf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Tf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Ef,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Af,getUndoAxesPermutation:()=>Lc,isIdentityPermutation:()=>ff,log:()=>si,mergeRealAndImagArrays:()=>tf,prepareAndValidate:()=>ao,prepareSplitSize:()=>gf,segment_util:()=>x,shouldFuse:()=>Cd,slice_util:()=>f,splitRealAndImagArrays:()=>ef,tupleValuesAreOne:()=>ou,upcastType:()=>is,validateInput:()=>lo,validateUpdateShape:()=>oo,warn:()=>ii});var b={};i.r(b),i.d(b,{nonMaxSuppressionV3Impl:()=>Gd,nonMaxSuppressionV4Impl:()=>jd,nonMaxSuppressionV5Impl:()=>Xd,whereImpl:()=>hd});var w={};i.r(w),i.d(w,{maxNorm:()=>Ag,minMaxNorm:()=>kg,nonNeg:()=>Ig,unitNorm:()=>Cg});var _={};i.r(_),i.d(_,{constant:()=>Oy,glorotNormal:()=>Vy,glorotUniform:()=>qy,heNormal:()=>Hy,heUniform:()=>Wy,identity:()=>Uy,leCunNormal:()=>Gy,leCunUniform:()=>jy,ones:()=>Py,orthogonal:()=>Xy,randomNormal:()=>zy,randomUniform:()=>Fy,truncatedNormal:()=>By,varianceScaling:()=>$y,zeros:()=>Dy});var S={};i.r(S),i.d(S,{Layer:()=>dx,RNN:()=>Db,RNNCell:()=>Pb,activation:()=>e_,add:()=>c_,alphaDropout:()=>tS,average:()=>h_,averagePooling1d:()=>b_,averagePooling2d:()=>S_,averagePooling3d:()=>E_,avgPool1d:()=>w_,avgPool2d:()=>M_,avgPool3d:()=>A_,avgPooling1d:()=>__,avgPooling2d:()=>T_,avgPooling3d:()=>C_,batchNormalization:()=>y_,bidirectional:()=>G_,concatenate:()=>d_,conv1d:()=>Gw,conv2d:()=>jw,conv2dTranspose:()=>Xw,conv3d:()=>Yw,conv3dTranspose:()=>Kw,convLstm2d:()=>q_,convLstm2dCell:()=>V_,cropping2D:()=>Zw,dense:()=>n_,depthwiseConv2d:()=>t_,dot:()=>g_,dropout:()=>r_,elu:()=>Uw,embedding:()=>u_,flatten:()=>s_,gaussianDropout:()=>Q_,gaussianNoise:()=>Z_,globalAveragePooling1d:()=>I_,globalAveragePooling2d:()=>k_,globalMaxPool1d:()=>X_,globalMaxPool2d:()=>Y_,globalMaxPooling1d:()=>R_,globalMaxPooling2d:()=>N_,gru:()=>O_,gruCell:()=>F_,input:()=>Pv,inputLayer:()=>Bw,layerNormalization:()=>x_,leakyReLU:()=>qw,lstm:()=>z_,lstmCell:()=>B_,masking:()=>eS,maxPool1d:()=>K_,maxPool2d:()=>J_,maxPooling1d:()=>L_,maxPooling2d:()=>D_,maxPooling3d:()=>P_,maximum:()=>p_,minimum:()=>f_,multiply:()=>m_,permute:()=>l_,prelu:()=>Vw,reLU:()=>$w,repeatVector:()=>a_,reshape:()=>o_,rnn:()=>H_,separableConv2d:()=>Jw,simpleRNN:()=>U_,simpleRNNCell:()=>$_,softmax:()=>Hw,spatialDropout1d:()=>i_,stackedRNNCells:()=>W_,thresholdedReLU:()=>Ww,timeDistributed:()=>j_,upSampling2d:()=>Qw,zeroPadding2d:()=>v_});var M={};i.r(M),i.d(M,{MAPE:()=>dS,MSE:()=>mS,binaryAccuracy:()=>nS,binaryCrossentropy:()=>rS,categoricalAccuracy:()=>sS,categoricalCrossentropy:()=>aS,cosineProximity:()=>uS,mape:()=>pS,meanAbsoluteError:()=>cS,meanAbsolutePercentageError:()=>hS,meanSquaredError:()=>fS,mse:()=>gS,precision:()=>oS,recall:()=>lS,sparseCategoricalAccuracy:()=>iS});var T={};i.r(T),i.d(T,{modelFromJSON:()=>kv});var E={};i.r(E),i.d(E,{l1:()=>xS,l1l2:()=>yS,l2:()=>vS});var A={};i.r(A),i.d(A,{json:()=>zS});var C={};i.r(C),i.d(C,{json:()=>BS});var I={};i.r(I),i.d(I,{json:()=>US});var k={};i.r(k),i.d(k,{json:()=>$S});var R={};i.r(R),i.d(R,{json:()=>qS});var N={};i.r(N),i.d(N,{json:()=>VS});var L={};i.r(L),i.d(L,{json:()=>HS});var D={};i.r(D),i.d(D,{json:()=>WS});var P={};i.r(P),i.d(P,{json:()=>GS});var O={};i.r(O),i.d(O,{json:()=>jS});var F={};i.r(F),i.d(F,{json:()=>XS});var z={};i.r(z),i.d(z,{json:()=>YS});var B={};i.r(B),i.d(B,{json:()=>KS});var U={};i.r(U),i.d(U,{json:()=>JS});var $={};i.r($),i.d($,{json:()=>ZS});var q={};i.r(q),i.d(q,{json:()=>QS});var V={};i.r(V),i.d(V,{json:()=>tM});var H={};i.r(H),i.d(H,{json:()=>eM});var W={};i.r(W),i.d(W,{json:()=>nM});var G={};i.r(G),i.d(G,{CSVDataset:()=>IT,Dataset:()=>yT,FileDataSource:()=>$T,TextLineDataset:()=>_T,URLDataSource:()=>qT,array:()=>vT,csv:()=>VT,func:()=>HT,generator:()=>WT,microphone:()=>jT,version_data:()=>XT,webcam:()=>GT,zip:()=>bT});var j={};i.r(j),i.d(j,{addImpl:()=>CE,bincountImpl:()=>bA,bincountReduceImpl:()=>wA,ceilImpl:()=>MA,concatImpl:()=>kA,equalImpl:()=>dC,expImpl:()=>SC,expm1Impl:()=>CC,floorImpl:()=>WC,gatherNdImpl:()=>QC,gatherV2Impl:()=>eI,greaterEqualImpl:()=>aI,greaterImpl:()=>rI,lessEqualImpl:()=>vI,lessImpl:()=>gI,linSpaceImpl:()=>_I,logImpl:()=>MI,maxImpl:()=>BI,maximumImpl:()=>qI,minimumImpl:()=>ZI,multiplyImpl:()=>iC,negImpl:()=>lk,notEqualImpl:()=>gk,prodImpl:()=>Ik,rangeImpl:()=>Rk,rsqrtImpl:()=>Vk,sigmoidImpl:()=>mE,simpleAbsImpl:()=>FE,sliceImpl:()=>gA,sparseFillEmptyRowsImpl:()=>uR,sparseReshapeImpl:()=>hR,sparseSegmentReductionImpl:()=>pR,sqrtImpl:()=>xR,squaredDifferenceImpl:()=>_R,stridedSliceImpl:()=>AR,stringNGramsImpl:()=>kR,stringSplitImpl:()=>LR,stringToHashBucketFastImpl:()=>PR,subImpl:()=>DC,tileImpl:()=>UR,topKImpl:()=>VR,transposeImpl:()=>HE,uniqueImpl:()=>XR});class X{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Y{refCount(t){return K("refCount")}incRef(t){return K("incRef")}timerAvailable(){return!0}time(t){return K("time")}read(t){return K("read")}readSync(t){return K("readSync")}readToGPU(t,e){return K("readToGPU")}numDataIds(){return K("numDataIds")}disposeData(t,e){return K("disposeData")}write(t,e,n){return K("write")}move(t,e,n,r,i){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}}function K(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function J(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,et(t,e,n)}function Z(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,et(t,n,r),et(e,n,r)}function Q(t,e,n){return Math.max(t,Math.min(e,n))}function tt(t){return t%2==0?t:t+1}function et(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function nt(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function rt(t,e){const n=Math.random();return e*n+(1-n)*t}function it(t,e){let n=0;for(let r=0;r<t.length;r++){const i=Number(t[r])-Number(e[r]);n+=i*i}return n}function st(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function at(t,e,n=""){st(ht(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function ot(t){st(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function lt(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Et(t)&&!n)for(let r=0;r<t.length;++r)lt(t[r],e,n);else e.push(t);return e}function ut(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function ct(t){return 0===t.length}function ht(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function dt(t){return t%1==0}function pt(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function ft(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function mt(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return J(e),e}function gt(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function yt(t,e=(t=>0),n){return new Promise((r,i)=>{let s=0;const a=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?i():setTimeout(a,o)};a()})}function xt(t,e){let n=1,r=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(t[s]<0)throw Error(`Shapes can not be < 0. Found ${t[s]} at dim ${s}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const i=t.slice();return i[r]=e/n,i}function vt(t,e){const n=e.length;return st((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),st(t.every(t=>dt(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function bt(t,e){const n=[],r=[],i=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||i?null:vt(e,t).sort();let a=0;for(let o=0;o<t.length;++o){if(null!=s){if(s[a]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==s[a]||s[a]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),s[a]<=o&&a++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function wt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function _t(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function St(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Mt(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function Tt(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Et(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function At(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function Ct(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function It(t){return"string"==typeof t||t instanceof String}function kt(t){return"boolean"==typeof t}function Rt(t){return"number"==typeof t}function Nt(t){return Array.isArray(t)?Nt(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Rt(t)?"float32":It(t)?"string":kt(t)?"bool":"float32"}function Lt(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Dt(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Pt(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Ot(t,e,n,r=!1){const i=new Array;if(1===e.length){const s=e[0]*(r?2:1);for(let e=0;e<s;e++)i[e]=n[t+e]}else{const s=e[0],a=e.slice(1),o=a.reduce((t,e)=>t*e)*(r?2:1);for(let e=0;e<s;e++)i[e]=Ot(t+e*o,a,n,r)}return i}function Ft(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce((t,e)=>t*e)*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return Ot(0,t,e,n)}function zt(t,e){const n=Bt(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function Bt(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function Ut(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return Ft(t,new Float32Array(n));if("int32"===e)return Ft(t,new Int32Array(n));if("bool"===e)return Ft(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function $t(t){t.forEach(e=>{st(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function qt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let i=0;i<t.length-1;++i)r+=n[i]*t[i];return r}function Vt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(t/n[i]),t-=r[i]*n[i];return r[r.length-1]=t,r}function Ht(t){return t&&t.then&&"function"==typeof t.then}class Wt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Gt,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Ht(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}function Gt(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}function jt(){return Yt}let Xt,Yt=null;function Kt(){if(null==Xt){let e;if("undefined"!=typeof window)e=window;else if(void 0!==i.g)e=i.g;else if("undefined"!=typeof t)e=t;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Xt=e}return Xt}function Jt(t,e){const n=function(){const t=Kt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Zt="Abs",Qt="Acos",te="Acosh",ee="Add",ne="AddN",re="All",ie="Any",se="ArgMax",ae="ArgMin",oe="Asin",le="Asinh",ue="Atan",ce="Atanh",he="Atan2",de="AvgPool",pe="AvgPoolGrad",fe="AvgPool3D",me="AvgPool3DGrad",ge="BatchMatMul",ye="BatchToSpaceND",xe="Bincount",ve="BroadcastTo",be="BroadcastArgs",we="Cast",_e="Ceil",Se="ClipByValue",Me="Complex",Te="ComplexAbs",Ee="Concat",Ae="Conv2D",Ce="Conv2DBackpropFilter",Ie="Conv2DBackpropInput",ke="Conv3D",Re="Conv3DBackpropFilterV2",Ne="Conv3DBackpropInputV2",Le="Cos",De="Cosh",Pe="Cumsum",Oe="CropAndResize",Fe="DenseBincount",ze="DepthToSpace",Be="DepthwiseConv2dNative",Ue="DepthwiseConv2dNativeBackpropFilter",$e="DepthwiseConv2dNativeBackpropInput",qe="Diag",Ve="Dilation2D",He="Dilation2DBackpropInput",We="Dilation2DBackpropFilter",Ge="RealDiv",je="Einsum",Xe="Elu",Ye="EluGrad",Ke="Erf",Je="Equal",Ze="Exp",Qe="ExpandDims",tn="Expm1",en="FFT",nn="Fill",rn="FlipLeftRight",sn="Floor",an="FloorDiv",on="FusedBatchNorm",ln="GatherV2",un="GatherNd",cn="Greater",hn="GreaterEqual",dn="Identity",pn="IFFT",fn="Imag",mn="IsFinite",gn="IsInf",yn="IsNan",xn="LeakyRelu",vn="Less",bn="LessEqual",wn="LinSpace",_n="Log",Sn="Log1p",Mn="LogicalAnd",Tn="LogicalNot",En="LogicalOr",An="LogSoftmax",Cn="LRN",In="LRNGrad",kn="Max",Rn="Maximum",Nn="MaxPool",Ln="MaxPoolGrad",Dn="MaxPool3D",Pn="MaxPool3DGrad",On="MaxPoolWithArgmax",Fn="Mean",zn="Min",Bn="Minimum",Un="MirrorPad",$n="Mod",qn="Multinomial",Vn="Multiply",Hn="Neg",Wn="NotEqual",Gn="NonMaxSuppressionV3",jn="NonMaxSuppressionV4",Xn="NonMaxSuppressionV5",Yn="OnesLike",Kn="OneHot",Jn="Pack",Zn="PadV2",Qn="Pool",tr="Pow",er="Prelu",nr="Prod",rr="Range",ir="Real",sr="Reciprocal",ar="Relu",or="Reshape",lr="ResizeNearestNeighbor",ur="ResizeNearestNeighborGrad",cr="ResizeBilinear",hr="ResizeBilinearGrad",dr="Relu6",pr="Reverse",fr="Round",mr="Rsqrt",gr="ScatterNd",yr="Select",xr="Selu",vr="Slice",br="Sin",wr="Sinh",_r="Sign",Sr="Sigmoid",Mr="Softplus",Tr="Sqrt",Er="Sum",Ar="SpaceToBatchND",Cr="SplitV",Ir="Softmax",kr="SparseFillEmptyRows",Rr="SparseReshape",Nr="SparseSegmentMean",Lr="SparseSegmentSum",Dr="SparseToDense",Pr="SquaredDifference",Or="Square",Fr="StridedSlice",zr="StringNGrams",Br="StringSplit",Ur="StringToHashBucketFast",$r="Sub",qr="Tan",Vr="Tanh",Hr="Tile",Wr="TopK",Gr="Transform",jr="Transpose",Xr="Unique",Yr="Unpack",Kr="UnsortedSegmentSum",Jr="ZerosLike",Zr="Step",Qr="FromPixels",ti="RotateWithOffset",ei="_FusedMatMul",ni="FusedConv2D",ri="FusedDepthwiseConv2D";function ii(...t){jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(...t)}function si(...t){jt().getBool("IS_TEST")||jt().getBool("PROD")||console.log(...t)}const ai=Jt("kernelRegistry",()=>new Map),oi=Jt("gradRegistry",()=>new Map);function li(t,e){const n=gi(t,e);return ai.get(n)}function ui(t){return oi.get(t)}function ci(t){const e=ai.entries(),n=[];for(;;){const{done:r,value:i}=e.next();if(r)break;const[s,a]=i,[o]=s.split("_");o===t&&n.push(a)}return n}function hi(t){const{kernelName:e,backendName:n}=t,r=gi(e,n);ai.has(r)&&ii(`The kernel '${e}' for backend '${n}' is already registered`),ai.set(r,t)}function di(t){const{kernelName:e}=t;oi.has(e)&&jt().getBool("DEBUG")&&ii(`Overriding the gradient for '${e}'`),oi.set(e,t)}function pi(t,e){const n=gi(t,e);if(!ai.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);ai.delete(n)}function fi(t){if(!oi.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);oi.delete(t)}function mi(t,e){ci(t).forEach(t=>{hi(Object.assign({},t,{backendName:e}))})}function gi(t,e){return`${e}_${t}`}var yi=i(3720);const xi=i.n(yi)()||yi;function vi(t){return xi.fromString(t,!0,16)}const bi=vi("c3a5c85c97cb3127"),wi=vi("b492b66fbe98f273"),_i=vi("9ae16a3b2f90404f");function Si(t){return t.xor(t.shru(47))}function Mi(t,e,n){const r=t.slice(e,e+n);return xi.fromBytes(Array.from(r),!0,!0)}function Ti(t,e){return Mi(t,e,8)}function Ei(t,e){return Mi(t,e,4)}function Ai(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Ci(t,e,n=vi("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let i=e.xor(r).mul(n);return i=i.xor(i.shru(47)),i=i.mul(n),i}function Ii(t,e,n,r){return function(t,e,n,r,i,s){i=i.add(t),s=Ai(s.add(i).add(r),21);const a=i;return i=(i=i.add(e)).add(n),s=s.add(Ai(i,44)),[i.add(r),s.add(a)]}(Ti(t,e),Ti(t,e+8),Ti(t,e+16),Ti(t,e+24),n,r)}function ki(t,e=t.length){const n=xi.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=_i.add(2*e),r=Ti(t,0).add(_i),i=Ti(t,e-8);return Ci(Ai(i,37).mul(n).add(r),Ai(r,25).add(i).mul(n),n)}if(e>=4){const n=_i.add(2*e);return Ci(Ei(t,0).shl(3).add(e),Ei(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return Si(_i.mul(n).xor(bi.mul(r))).mul(_i)}return _i}(t,e):function(t,e=t.length){const n=_i.add(2*e),r=Ti(t,0).mul(wi),i=Ti(t,8),s=Ti(t,e-8).mul(n),a=Ti(t,e-16).mul(_i);return Ci(Ai(r.add(i),43).add(Ai(s,30)).add(a),r.add(Ai(i.add(_i),18)).add(s),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=_i.add(2*e),r=Ti(t,0).mul(_i),i=Ti(t,8),s=Ti(t,e-8).mul(n),a=Ti(t,e-16).mul(_i),o=Ai(r.add(i),43).add(Ai(s,30)).add(a),l=Ci(o,r.add(Ai(i.add(_i),18)).add(s),n),u=Ti(t,16).mul(n),c=Ti(t,24),h=o.add(Ti(t,e-32)).mul(n),d=l.add(Ti(t,e-24)).mul(n);return Ci(Ai(u.add(c),43).add(Ai(h,30)).add(d),u.add(Ai(c.add(r),18)).add(h),n)}(t,e);let r=n,i=n.mul(wi).add(113),s=Si(i.mul(_i).add(113)).mul(_i),a=[xi.UZERO,xi.UZERO],o=[xi.UZERO,xi.UZERO];r=r.mul(_i).add(Ti(t,0));let l=0;const u=64*(e-1>>6),c=u+(e-1&63)-63;do{r=Ai(r.add(i).add(a[0]).add(Ti(t,l+8)),37).mul(wi),i=Ai(i.add(a[1]).add(Ti(t,l+48)),42).mul(wi),r=r.xor(o[1]),i=i.add(a[0]).add(Ti(t,l+40)),s=Ai(s.add(o[0]),33).mul(wi),a=Ii(t,l,a[1].mul(wi),r.add(o[0])),o=Ii(t,l+32,s.add(o[1]),i.add(Ti(t,l+16))),[s,r]=[r,s],l+=64}while(l!==u);const h=wi.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=Ai(r.add(i).add(a[0]).add(Ti(t,l+8)),37).mul(h),i=Ai(i.add(a[1]).add(Ti(t,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),i=i.add(a[0].mul(9).add(Ti(t,l+40))),s=Ai(s.add(o[0]),33).mul(h),a=Ii(t,l,a[1].mul(h),r.add(o[0])),o=Ii(t,l+32,s.add(o[1]),i.add(Ti(t,l+16))),[s,r]=[r,s],Ci(Ci(a[0],o[0],h).add(Si(i).mul(bi)).add(s),Ci(a[1],o[1],h).add(r),h)}function Ri(t,e){return"string"===e?Pi(t):Ni([t],e)}function Ni(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=lt(t)),jt().getBool("DEBUG")&&St(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function Li(){return jt().platform.now()}function Di(t,e){return jt().platform.fetch(t,e)}function Pi(t,e="utf-8"){return e=e||"utf-8",jt().platform.encode(t,e)}function Oi(t,e="utf-8"){return e=e||"utf-8",jt().platform.decode(t,e)}class Fi{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Bi)}profileKernel(t,e,n){let r;const i=()=>{r=n()};let s;const a=Li();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(const t of r)t.dataSync();s=Promise.resolve({kernelMs:Li()-a})}if(jt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const e=r[o];e.data().then(n=>{zi(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then(t=>t.kernelMs),extraInfo:s.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:i,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],i,n[2])})})}}function zi(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class Bi{logKernelProfile(t,e,n,r,i,s){const a="number"==typeof r?gt(r+"ms",9):r.error,o=gt(t,25),l=e.rank,u=e.size,c=gt(e.shape.toString(),14);let h="";for(const d in i){const t=i[d];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ui(t,e,n,r){const i=Pt(e),s=function(t,e,n,r){const i=ut(e),s=r[r.length-1],a=new Array(s).fill(0),o=e.length,l="complex64"===n?Hi(t):t;if(o>1)for(let u=0;u<i/s;u++){const t=u*s;for(let e=0;e<s;e++)a[e]=Math.max(a[e],$i(l[t+e],0,n).length)}return a}(t,e,n,i),a=e.length,o=Vi(t,e,n,i,s),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+a),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(t=>"    "+t).join("\n")),l.join("\n")}function $i(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:It(t)?`'${t}'`:"bool"===n?qi(t):parseFloat(t.toFixed(7)).toString(),gt(r,e)}function qi(t){return 0===t?"false":"true"}function Vi(t,e,n,r,i,s=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[$i(Hi(t)[0],0,n)]:"bool"===n?[qi(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=Hi(r),s=Hi(s)),["["+r.map((t,e)=>$i(t,i[e],n)).join(", ")+", ..., "+s.map((t,e)=>$i(t,i[o-3+e],n)).join(", ")+"]"]}return["["+("complex64"===n?Hi(t):Array.from(t)).map((t,e)=>$i(t,i[e],n)).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,s=r+h;d.push(...Vi(t.slice(r,s),u,n,c,i,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,s=r+h;d.push(...Vi(t.slice(r,s),u,n,c,i,e===o-1))}}else for(let m=0;m<o;m++){const e=m*h,r=e+h;d.push(...Vi(t.slice(e,r),u,n,c,i,m===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Hi(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Wi{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ut(t),null!=n){const t=n.length;st(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||_t(e,this.size),this.strides=Pt(t)}set(t,...e){0===e.length&&(e=[0]),st(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Gi().makeTensor(this.values,this.shape,this.dtype)}}let Gi=null,ji=null,Xi=null;class Yi{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ut(t),this.strides=Pt(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return ji.buffer(this.shape,this.dtype,t)}bufferSync(){return ji.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Ft(this.shape,t,"complex64"===this.dtype)}arraySync(){return Ft(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Gi().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(t=>Oi(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Gi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Gi().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>Oi(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Gi().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Gi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return ji.print(this,t)}clone(){return this.throwIfDisposed(),ji.clone(this)}toString(t=!1){return Ui(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),ji.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Gi().makeVariable(this,t,e,n)}}function Ki(){return Jt("Tensor",()=>Yi)}Object.defineProperty(Yi,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Ki();class Ji extends Yi{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ht(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Gi().disposeTensor(this),this.dataId=t.dataId,Gi().incRef(this,null)}dispose(){Gi().disposeVariable(this),this.isDisposedInternal=!0}}var Zi,Qi,ts,es,ns;Object.defineProperty(Ji,Symbol.hasInstance,{value:t=>t instanceof Yi&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Zi||(Zi={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Qi||(Qi={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(ts||(ts={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(es||(es={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(ns||(ns={}));const rs={float32:es,int32:Qi,bool:ts,complex64:ns};function is(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return rs[t][e]}function ss(t){return is(t,"int32")}function as(t,e){if(t.dtype===e.dtype)return[t,e];const n=is(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function os(t,e){st(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function ls(t,e){return e.some(e=>e.id===t.id)}function us(t){const e=[];return cs(t,e,new Set),e}function cs(t,e,n){if(null==t)return;if(t instanceof Yi)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const i=t;for(const s in i){const t=i[s];n.has(t)||(n.add(t),cs(t,e,n))}}function hs(t){return null!=t.kernelName}class ds{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ps{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ds}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(ii(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fi(this.backendInstance),!0}setupRegisteredKernels(){ci(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){ci(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Y||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0))).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,ii(`Initialization of backend ${t} failed`),ii(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return ii(`Initialization of backend ${t} failed`),ii(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,i=this.readSync(e),s=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,i,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return ps.nextTensorId++}nextVariableId(){return ps.nextVariableId++}clone(t){const e=ms.runKernel(dn,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t};return ms.runKernel(we,e,{dtype:"float32"})}}),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==li(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let i=0;n.forEach(t=>{i+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-i-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),i=this.state.numBytes,s=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=hs(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(hs(t)){const{kernelName:e,inputs:i,attrs:s}=t;null==this.backendName&&this.backend;const l=li(e,this.backendName);st(null!=l,()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:s,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)});if(r){const t=this.getTensorsForGradient(e,i,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,i=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy(()=>e(this.backend,i));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=hs(t)?null:t.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=a()}),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(t=>null!=u[t]?u[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=ui(t);if(null!=r){const t=r.inputsToSave||[],i=r.outputsToSave||[];let s;r.saveAllInputs?(st(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const a=n.filter((t,e)=>i[e]);return s.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=t;"string"===n&&It(t[0])&&(i=t.map(t=>Pi(t)));const s=r.write(i,e,n),a=new Yi(e,n,s,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Ct(i);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const i=new Yi(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(i,r),i}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const i=new Ji(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*At(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Ji||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*At(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,i,s){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:i},o=ui(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=Bt(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],i,s))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=us(t),n=new Set(e.map(t=>t.id));for(let i=0;i<this.state.activeScope.track.length;i++){const t=this.state.activeScope.track[i];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(st(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));st(i instanceof Yi,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const r={},i={};for(let l=0;l<e.length;l++)r[e[l].id]=!0;for(let l=0;l<t.length;l++){const n=t[l],s=n.inputs;for(const t in s){const a=s[t];let o=!1;for(let t=0;t<e.length;t++)if(r[a.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,i[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const a={};for(let l=t.length-1;l>=0;l--){const e=t[l],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,a[e.id]=!0;break}}const o=[];for(let l=0;l<t.length;l++){const e=t[l];if(i[e.id]&&a[e.id]){const t={};for(const i in e.inputs){const n=e.inputs[i];r[n.id]&&(t[i]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}(this.state.activeTape,e,i);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[i.id]=null==n?function(t){const e=zt(ut(t),"float32");return ms.makeTensor(e,t,"float32")}(i.shape):n,function(t,e,n,r){for(let i=e.length-1;i>=0;i--){const s=e[i],a=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const i=n(()=>o[e]());if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${i.dtype}'`);const a=s.inputs[e];if(!ht(i.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${i.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=i;else{const e=t[a.id];t[a.id]=r(e,i),e.dispose()}}}}(t,s,t=>this.tidy(t),gs);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:i,grads:r}})}customGrad(t){return st(Lt(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;st(e.every(t=>t instanceof Yi),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc({forwardFunc:(r,i)=>(n=t(...e,i),st(n.value instanceof Yi,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),st(Lt(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(t,r)=>{const i=n.gradFunc(t,r),s=Array.isArray(i)?i:[i];st(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),st(s.every(t=>t instanceof Yi),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const a={};return s.forEach((t,e)=>{a[e]=()=>t}),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Li(),n=await this.backend.time(t);return n.wallMs=Li()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ds;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function fs(){const t=Kt();if(null==t._tfengine){const e=new Wt(t);t._tfengine=new ps(e)}var e;return e=t._tfengine.ENV,Yt=e,Gi=()=>t._tfengine,t._tfengine}ps.nextTensorId=0,ps.nextVariableId=0;const ms=fs();function gs(t,e){const n={a:t,b:e};return ms.runKernel(ee,n)}let ys;function xs(t){ys=t}function vs(t){if(void 0!==ys)return ys;if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function bs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ws=jt();function _s(t,e){let n=t;if(Et(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Et(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&jt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ss(t,r,[]),r}function Ss(t,e,n){if(n=n||[],!Array.isArray(t)&&!Et(t))return void st(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);st(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),st(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let i=0;i<t.length;++i)Ss(t[i],r,n.concat(i))}function Ms(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function Ts(t,e,n,r="numeric"){if(t instanceof Yi)return Ms(r,t.dtype,e,n),t;let i=Nt(t);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),Ms(r,i,e,n),null==t||!Et(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=_s(t,i);Et(t)||Array.isArray(t)||(t=[t]);const a="string"!==i?Ni(t,i):lt(t,[],!0);return ms.makeTensor(a,s,i)}function Es(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,i)=>Ts(t,`${e}[${i}]`,n,r))}ws.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ws.registerFlag("IS_BROWSER",()=>bs()),ws.registerFlag("IS_NODE",()=>"undefined"!=typeof t&&void 0!==t.versions&&void 0!==t.versions.node),ws.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ws.registerFlag("PROD",()=>!1),ws.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ws.getBool("DEBUG")),ws.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ws.registerFlag("IS_TEST",()=>!1),ws.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ws.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const As="__op";function Cs(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=As;const i=(...t)=>{ms.startScope(n);try{const e=r(...t);return Ht(e)&&console.error("Cannot return a Promise inside of tidy."),ms.endScope(e),e}catch(t){throw ms.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}const Is=Cs({complex_:function(t,e){const n=Ts(t,"real","complex"),r=Ts(e,"imag","complex");at(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:n,imag:r};return ms.runKernel(Me,i)}});function ks(t,e,n,r){if(null==r&&(r=Nt(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Et(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){$t(e);const t=ut(e),r=ut(n);st(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let i=0;i<n.length;++i){const t=n[i],r=i!==n.length-1||t!==ut(e.slice(i));st(n[i]===e[i]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Et(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Ni(t,r):lt(t,[],!0),ms.makeTensor(t,e,r)}function Rs(t,e,n){return ks(t,e,_s(t,n),n)}const Ns={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ls(t,e){const n=[],r=[],i=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<i.length;++s){const a=i[s],o=Array.isArray(t)?t[s].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let i=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,i),i+=4,r.set(t,i),i+=t.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Ps(await Promise.all(r)),specs:n}}function Ds(t,e){const n={};let r,i=0;for(const s of e){const e=s.name,a=s.dtype,o=s.shape,l=ut(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=Ns[n.dtype],c=t.slice(i,i+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Vs()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}i+=l*o}else if("string"===a){const e=ut(s.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(i,i+4))[0];i+=4;const n=new Uint8Array(t.slice(i,i+e));u.push(n),i+=e}}else{const r=Ns[a],s=t.slice(i,i+l*r);if("float32"===a)u=new Float32Array(s);else if("int32"===a)u=new Int32Array(s);else if("bool"===a)u=new Uint8Array(s);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{u=new Float32Array(s);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const i=Rs(t,o,"float32"),a=Rs(r,o,"float32");n[e]=Is(i,a),i.dispose(),a.dispose()}}i+=l*r}"complex64"!==a&&(n[e]=Rs(u,o,a))}return n}function Ps(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let i=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),i),i+=t.byteLength}),r.buffer}const Os="undefined"!=typeof e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Fs(t){return Os?e.byteLength(t):new Blob([t]).size}function zs(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function Bs(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function Us(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}async function $s(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),null!=t.weightsManifest){const[r,i]=await e(t.weightsManifest);n.weightSpecs=r,n.weightData=i}return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),n}function qs(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Fs(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Fs(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Vs(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const i=new ArrayBuffer(4*r.length),s=new Uint32Array(i);for(let a=0;a<r.length;a++){const i=r[a],o=t[n[i>>10]+(1023&i)]+e[i>>10];s[a]=o}return new Float32Array(i)}}class Hs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static registerSaveRouter(t){Hs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Hs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Hs.getHandlers(t,"save")}static getLoadHandlers(t,e){return Hs.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Hs.getInstance().loadRouters:Hs.getInstance().saveRouters).forEach(e=>{const i=e(t,n);null!==i&&r.push(i)}),r}}const Ws=t=>Hs.registerSaveRouter(t),Gs=t=>Hs.registerLoadRouter(t),js=t=>Hs.getSaveHandlers(t),Xs=(t,e)=>Hs.getLoadHandlers(t,e),Ys="tensorflowjs",Ks="models_store",Js="model_info_store";function Zs(){if(!jt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Qs(t){const e=t.result;e.createObjectStore(Ks,{keyPath:"modelPath"}),e.createObjectStore(Js,{keyPath:"modelPath"})}class ta{constructor(t){if(this.indexedDB=Zs(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const i=r.result;if(null==e){const e=i.transaction(Ks,"readonly"),r=e.objectStore(Ks).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(i.close(),n(r.error)),e.oncomplete=()=>i.close()}else{const r=qs(e),s=i.transaction(Js,"readwrite");let a=s.objectStore(Js);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=i.transaction(Ks,"readwrite");const o=l.objectStore(Ks).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=s.objectStore(Js);const e=a.delete(this.modelPath);e.onsuccess=()=>(i.close(),n(o.error)),e.onerror=t=>(i.close(),n(o.error))}},o.onerror=t=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}}},r.onerror=t=>n(r.error)})}}ta.URL_SCHEME="indexeddb://";const ea=t=>{return jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ta.URL_SCHEME)?(e=t.slice(ta.URL_SCHEME.length),new ta(e)):null;var e};Hs.registerSaveRouter(ea),Hs.registerLoadRouter(ea);class na{constructor(){this.indexedDB=Zs()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(Ys,1);n.onupgradeneeded=()=>Qs(n),n.onsuccess=()=>{const r=n.result,i=r.transaction(Js,"readonly"),s=i.objectStore(Js).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),i.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(ta.URL_SCHEME)?e.slice(ta.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const i=r.result,s=i.transaction(Js,"readwrite"),a=s.objectStore(Js),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),s=()=>{l=i.transaction(Ks,"readwrite");const r=l.objectStore(Ks).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),i.close(),n(o.error))}},o.onerror=t=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},r.onerror=t=>n(r.error)})}}const ra="/",ia="tensorflowjs_models",sa="info",aa="model_topology",oa="weight_specs",la="weight_data",ua="model_metadata";function ca(t){return{info:[ia,t,sa].join(ra),topology:[ia,t,aa].join(ra),weightSpecs:[ia,t,oa].join(ra),weightData:[ia,t,la].join(ra),modelMetadata:[ia,t,ua].join(ra)}}function ha(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function da(t){const e=t.split(ra);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join(ra)}class pa{constructor(t){if(!jt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=ca(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),i=qs(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(t){if(Os)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,i=n.length;e<i;e++)r+=String.fromCharCode(n[e]);return btoa(r)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:i}}catch(t){throw ha(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==i)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=i;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);n.format=t.format,n.generatedBy=t.generatedBy,n.convertedBy=t.convertedBy,null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=function(t){if(Os){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}(a),n}}pa.URL_SCHEME="localstorage://";const fa=t=>{return jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(pa.URL_SCHEME)?(e=t.slice(pa.URL_SCHEME.length),new pa(e)):null;var e};Hs.registerSaveRouter(fa),Hs.registerLoadRouter(fa);class ma{constructor(){st(jt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),st("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=ia+ra,n=ra+sa;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);i.startsWith(e)&&i.endsWith(n)&&(t[da(i)]=JSON.parse(this.LS.getItem(i)))}return t}async removeModel(t){var e;const n=ca(t=(e=t).startsWith(pa.URL_SCHEME)?e.slice(pa.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return ha(n),r}}const ga="://";class ya{constructor(){this.managers={}}static getInstance(){return null==ya.instance&&(ya.instance=new ya),ya.instance}static registerManager(t,e){st(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(ga)&&(t=t.slice(0,t.indexOf(ga))),st(t.length>0,()=>"scheme must not be an empty string.");const n=ya.getInstance();st(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function xa(t){if(-1===t.indexOf(ga))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ya.getSchemes().join(","));return{scheme:t.split(ga)[0],path:t.split(ga)[1]}}async function va(t,e,n=!1){st(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=Hs.getLoadHandlers(t);st(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),st(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const i=r[0],s=Hs.getSaveHandlers(e);st(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),st(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=s[0],o=xa(t).scheme,l=xa(t).path,u=o===xa(t).scheme,c=await i.load();n&&u&&await ya.getManager(o).removeModel(l);const h=await a.save(c);return n&&!u&&await ya.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ba(){const t=ya.getSchemes(),e={};for(const n of t){const t=await ya.getManager(n).listModels();for(const r in t)e[n+ga+r]=t[r]}return e}async function wa(t){const e=xa(t);return ya.getManager(e.scheme).removeModel(e.path)}async function _a(t,e){return va(t,e,!1)}async function Sa(t,e){return va(t,e,!0)}class Ma{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(jt().get("IS_BROWSER")){jt().setPlatform("browser",new Ma);try{ya.registerManager(pa.URL_SCHEME,new ma)}catch(n){}try{ya.registerManager(ta.URL_SCHEME,new na)}catch(n){}}let Ta;function Ea(t,e="float32",n){return e=e||"float32",$t(t),new Wi(t,e,n)}jt().get("IS_NODE")&&jt().setPlatform("node",new class{constructor(){this.util=i(1758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=jt().global.fetch?jt().global.fetch(t,e):(null==Ta&&(Ta=i(8352)),Ta(t,e))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Aa=Cs({cast_:function(t,e){const n=Ts(t,"x","cast");if(!Mt(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},i={dtype:e};return ms.runKernel(we,r,i)}}),Ca=Cs({clone_:function(t){const e={x:Ts(t,"x","clone","string_or_numeric")};return ms.runKernel(dn,e)}});function Ia(t,e=!1){console.log(t.toString(e))}function ka(t){return new Promise(t=>setTimeout(t)).then(t)}fs(),ji={buffer:Ea,cast:Aa,clone:Ca,print:Ia};class Ra{constructor(t){if(!jt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ra.URL_SCHEME)&&(t=t.slice(Ra.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Us(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await ka(()=>i.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ka(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:qs(t)}}}}Ra.URL_SCHEME="downloads://";class Na{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),i=r.modelTopology;if(null==i)return void e(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void e(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void t({modelTopology:i});const s=$s(r,t=>this.loadWeights(t));t(s)},n.onerror=t=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){const e=[],n=[];for(const s of t)e.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(t),i=n.map(t=>this.loadWeightsFile(t,r[t]));return Promise.all(i).then(t=>[e,zs(t)])}loadWeightsFile(t,e){return new Promise((n,r)=>{const i=new FileReader;i.onload=t=>{const e=t.target.result;n(e)},i.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map(t=>Bs(t.name)),r={};for(const i of t)i.paths.forEach(t=>{const i=Bs(t);if(-1!==e.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),-1===n.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);r[t]=this.weightsFiles[n.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function La(t){return new Na(t)}function Da(t,e,n,r){!function(t){st(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){st(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),st(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),st(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`)}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(t.map(s=>(s.then(s=>{const a=n+ ++i/t.length*(r-n);return e(a),s}),s)))}async function Pa(t,e){null==e&&(e={});const n=null==e.fetchFunc?jt().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),i=(null==e.onProgress?await Promise.all(r):await Da(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(i):await Da(i,e.onProgress,.5,1)}async function Oa(t,e="",n,r){return Fa(t=>Pa(t,{requestInit:r}))(t,e,n)}function Fa(t){return async(e,n="",r)=>{const i=e.map(()=>!1),s={},a=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const l="quantization"in t?t.quantization.dtype:t.dtype,u=Ns[l]*ut(t.shape),c=()=>{i[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),a[n]=!0)}):c(),o.push(t.name),n+=u})}),!a.every(t=>t)){const t=r.filter((t,e)=>!a[e]);throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=i.reduce((t,e,n)=>(e&&t.push(n),t),[]),u=[];l.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)})});const c=await t(u),h={};let d=0;return l.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const i=new ArrayBuffer(r),a=new Uint8Array(i);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);a.set(t,o),o+=t.byteLength}s[t].forEach(t=>{const e=Ds(i.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const n in e)h[n]=e[n]}),d+=n}),h}}Hs.registerSaveRouter(t=>jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ra.URL_SCHEME)?function(t="model"){return new Ra(t)}(t.slice(Ra.URL_SCHEME.length)):null);class za{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(st("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=jt().platform.fetch,st(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&st(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=Us(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:qs(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return $s(e,t=>this.loadWeights(t))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),i=this.weightPathPrefix||n,s=[];for(const l of t)s.push(...l.weights);const a=[],o=[];for(const l of t)for(const t of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(i+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[s,zs(await Pa(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ba(t){return null!=t.match(za.URL_SCHEME_REGEX)}za.URL_SCHEME_REGEX=/^https?:\/\//;const Ua=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Ba(t)):Ba(t),n)return $a(t,e)}return null};function $a(t,e){return new za(t,e)}function qa(t,e){return $a(t,e)}Hs.registerSaveRouter(Ua),Hs.registerLoadRouter(Ua);class Va{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class Ha{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function Wa(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new Va(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Va({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Va({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function Ga(t){return new Ha(t)}const ja=Cs({matMul_:function(t,e,n=!1,r=!1){let i=Ts(t,"a","matMul"),s=Ts(e,"b","matMul");[i,s]=as(i,s);const a={a:i,b:s},o={transposeA:n,transposeB:r};return ms.runKernel(ge,a,o)}}),Xa=Cs({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const i={indices:Ts(t,"indices","oneHot","int32")},s={depth:e,onValue:n,offValue:r};return ms.runKernel(Kn,i,s)}}),Ya=Cs({transpose_:function(t,e){const n=Ts(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),st(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{st(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const r={x:n},i={perm:e};return ms.runKernel(jr,r,i)}}),Ka=Cs({confusionMatrix_:function(t,e,n){const r=Ts(t,"labels","confusionMatrix"),i=Ts(e,"predictions","confusionMatrix");st(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),st(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),st(1===i.rank,()=>"Expected the rank of predictions to be 1, but got "+i.rank),st(r.shape[0]===i.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${i.shape[0]}. Labels and predictions should have the same number of elements.`),st(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Xa(Aa(r,"int32"),n),a=Xa(Aa(i,"int32"),n),o=Ya(s),l=ja(o,a);return Aa(l,"int32")}});function Ja(t,e){const n=t.length,r=[];for(let i=0;i<n;i++){const s=n-1-i,a=t[s]||1;(e[e.length-1-i]||1)>1&&1===a&&r.unshift(s)}return r}function Za(t,e){const n=[];for(let r=0;r<e.length;r++){const i=t[t.length-r-1],s=e.length-r-1,a=e[s];(null==i||1===i&&a>1)&&n.unshift(s)}return n}function Qa(t,e){const n=[],r=Math.max(t.length,e.length);for(let i=0;i<r;i++){let r=t[t.length-i-1];null==r&&(r=1);let s=e[e.length-i-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function to(t,e,n){if(ot(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=_s(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ks(t,e,r,n)}let eo;function no(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,i=!1,s=!1,a=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)i=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);o=!0}if(i){const e=2;if(i&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=li(Qr,ms.backendName)){const n={pixels:t},r={numChannels:e};return ms.runKernel(Qr,n,r)}const[l,u]=i?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(a)c=t.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=t.data;else if(s||i||o){if(null==eo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");eo=new OffscreenCanvas(1,1).getContext("2d")}else eo=document.createElement("canvas").getContext("2d");eo.canvas.width=l,eo.canvas.height=u,eo.drawImage(t,0,0,l,u),c=eo.getImageData(0,0,l,u).data}if(4===e)h=new Int32Array(c);else{const t=l*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return to(h,[u,l,e],"int32")}async function ro(t,e=3){let n=null;if(jt().getBool("WRAP_TO_IMAGEBITMAP")&&function(t){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(t){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return no(n,e)}async function io(t,e){let n=Ts(t,"img","toPixels");if(!(t instanceof Yi)){const t=n;n=Aa(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,i]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(i*r*4);for(let u=0;u<r*i;++u){const t=[0,0,0,255];for(let r=0;r<s;r++){const e=a[u*s+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===s?(t[0]=e*o,t[1]=e*o,t[2]=e*o):t[r]=e*o}const e=4*u;l[e+0]=Math.round(t[0]),l[e+1]=Math.round(t[1]),l[e+2]=Math.round(t[2]),l[e+3]=Math.round(t[3])}if(null!=e){e.width=i,e.height=r;const t=e.getContext("2d"),n=new ImageData(l,i,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),l}const so=Cs({fromPixels_:no});function ao(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===ut(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const i=e.shape,s=i[i.length-1];let a=1;for(let h=0;h<i.length-1;++h)a*=i[h];const o=t.shape,l=i.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);const c=[...Pt(t.shape).map(t=>t/u),1].slice(0,s);return[l,a,u,c]}function oo(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(s+` update.rank < ${i}. `);if(t.length<r+(n.rank-i))throw new Error(s+" Output shape length < "+(r+(n.rank-i)));if(n.rank!==i+t.length-r)throw new Error(s+" update.rank != "+(i+t.length-r));for(let a=0;a<i;++a)if(n.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-i;++a)if(n.shape[a+i]!==t[a+r])throw new Error(s+` updates.shape[${a+i}] (${n.shape[a+i]}) != shape[${a+i}] (${t[a+i]})`)}function lo(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}oo(n,e,t)}function uo(t,e,n){const r=e.shape.length,i=r>1?e.shape[r-1]:1,s=n.length;let a=1;for(let l=i;l<s;++l)a*=n[l];const o=i<1?1:i;return{sliceRank:i,numUpdates:ut(e.shape)/o,sliceSize:a,strides:[...Pt(n.slice(0,i)),1],outputSize:ut(n)}}function co(t,e,n){const r=t.shape.length;st(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),st(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let i=0;i<r;++i)st(e[i]+n[i]<=t.shape[i],()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${e[i]+n[i]}) would overflow input.shape[${i}] (${t.shape[i]})`)}function ho(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function po(t,e,n){const r=[];for(let i=0;i<t.length;i++)r[i]=Math.ceil((e[i]-t[i])/n[i]);return r}function fo(t,e,n,r){const i=[...t];for(let s=i.length;s<r.length;s++)i.push(1);for(let s=0;s<n;s++)0===s?i[e]=1:(i.splice(e,0,1),i.pop());return i}function mo(t,e,n){return n<=t?n:n-(e-1)}function go(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function yo(t,e,n,r,i,s,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=xo(a,l,u,r,t),h=vo(o,l,u,i,t),d=fo(s,l,u,t)}else for(let p=0;p<u;p++)c[p]=wo(a,r,s,t,p,l),h[p]=_o(o,i,s,t,p,l),d[p]=bo(s,p,l);return{begin:c,end:h,strides:d}}function xo(t,e,n,r,i){const s=[...i],a=go(n,e);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=0;else{const i=mo(e,n,o);let a=r[i];t&1<<i&&(a=0),s[o]=a}return s}function vo(t,e,n,r,i){const s=[...i],a=go(n,e);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const i=mo(e,n,o);let a=r[i];t&1<<i&&(a=Number.MAX_SAFE_INTEGER),s[o]=a}for(let o=0;o<s.length;o++){const t=i[o];s[o]<0&&(s[o]+=t),s[o]=Q(0,s[o],i[o])}return s}function bo(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function wo(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=Q(0,a,l-1),a}function _o(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=o>0?Q(0,a,l):Q(-1,a,l-1),a}function So(t,e,n){let r=n.length;for(let i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(let i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function Mo(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function To(t,e,n){let r;const i=t.shape.length;let s;return r="number"==typeof e?[e,...new Array(i-1).fill(0)]:e.length<i?e.concat(new Array(i-e.length).fill(0)):e.slice(),r.forEach(t=>{st(-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(st(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n])),[r,s]}function Eo(t,e,n,r,i,s,a,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let x=0;x<h.dims;x++)c&&0!=(1<<x&o)&&h.numAddAxisAfterEllipsis++,1<<x&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const i=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<i;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let x=0;x<t.length;++x){if(0===d.strides[x])throw Error(`strides[${x}] must be non-zero`);const e=!!(d.shrinkAxisMask&1<<x),n=t[x];if(-1===n){g.push(e?1:-1);continue}const r=[d.beginMask&1<<x,d.endMask&1<<x],i=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(e&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[x];const s=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(e){const t=d.begin[x]<0?n+d.begin[x]:d.begin[x];if(d.begin[x]=t,d.end[x]=d.begin[x]+1,t<0||t>=n)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=Ao(d.begin[x],0,d.strides[x],n,r,i),d.end[x]=Ao(d.end[x],1,d.strides[x],n,r,i);const t=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;p=p&&t,f=f&&(0===x&&1===d.strides[x]||t)}else p=p&&1===d.strides[x]&&s,f=f&&(0===x&&1===d.strides[x]||s);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[x]-d.begin[x],o=!0):e?(a=1,o=!0):s&&n>=0&&(a=d.strides[x]<0?-n:n,o=!0),o){let t;t=0===a||a<0!=d.strides[x]<0?0:Math.trunc(a/d.strides[x])+(a%d.strides[x]!=0?1:0),g.push(t)}else g.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const t=d.finalShapeGatherIndices[x];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter((t,e)=>-2!==d.finalShapeGatherIndices[e]),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Ao(t,e,n,r,i,s){if(i[e])return n>0?s[e]:s[e+1&1];{const e=t<0?r+t:t;return e<s[0]?s[0]:e>s[1]?s[1]:e}}class Co{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Io{constructor(){this.classNameMap={}}static getMap(){return null==Io.instance&&(Io.instance=new Io),Io.instance}static register(t){Io.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ko(t){st(null!=t.className,()=>"Class being registered does not have the static className property defined."),st("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),st(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Io.register(t)}const Ro=.1;function No(t,e,n){return null==n&&(n=Lo()),Do(t,e,(t,e)=>zo(t,e,n))}function Lo(){return 32===ms.backend.floatPrecision()?.001:Ro}function Do(t,e,n){let r=!0;if((Et(t)||Et(e))&&(r=!1),Et(t)&&Et(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=_s(t),r=_s(e);if(!ht(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Et(t)?t:lt(t),s=Et(e)?e:lt(e);if(i.length!==s.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${s.length}.\nActual:   ${i}.\nExpected: ${s}.`);for(let a=0;a<s.length;++a){const t=i[a],e=s[a];if(!n(t,e))throw new Error(`Arrays differ: actual[${a}] = ${t}, expected[${a}] = ${e}.\nActual:   ${i}.\nExpected: ${s}.`)}}function Po(t,e){t().then(()=>e.fail(),()=>e())}function Oo(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return It(t)||It(t[0])||It(e)||It(e[0])?Do(t,n,(t,e)=>t==e):Do(t,e,(t,e)=>zo(t,e,0))}function Fo(t,e,n){if(null==n&&(n=Lo()),!zo(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function zo(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function Bo(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function Uo(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let i=0;i<r.length;i++)if(n[i]!==r[i])throw new Error(`Expected ArrayBuffer value at ${i} to be ${r[i]} but got ${n[i]} instead`)}function $o(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?$o(n):t[e]=Pi(n)}return t}const qo="3.13.0";function Vo(){jt().set("PROD",!0)}function Ho(){jt().set("DEBUG",!0)}function Wo(){jt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Go(t){jt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function jo(){ms.disposeVariables()}function Xo(){return ms}function Yo(){return ms.memory()}function Ko(t){return ms.profile(t)}function Jo(t,e){return ms.tidy(t,e)}function Zo(t){us(t).forEach(t=>t.dispose())}function Qo(t){return ms.keep(t)}function tl(t){return ms.time(t)}function el(t){return ms.setBackend(t)}function nl(){return ms.ready()}function rl(){return ms.backendName}function il(t){ms.removeBackend(t)}function sl(t){return ms.findBackend(t)}function al(t){return ms.findBackendFactory(t)}function ol(t,e,n=1){return ms.registerBackend(t,e,n)}function ll(){return ms.backend}function ul(t,e){jt().setPlatform(t,e)}Xi=Go;const cl=Cs({add_:function(t,e){let n=Ts(t,"a","add"),r=Ts(e,"b","add");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel(ee,i)}}),hl=Cs({floorDiv_:function(t,e){let n=Ts(t,"a","floorDiv"),r=Ts(e,"b","floorDiv");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel(an,i)}}),dl=Cs({div_:function(t,e){let n=Ts(t,"a","div"),r=Ts(e,"b","div");if([n,r]=as(n,r),"int32"===n.dtype&&"int32"===r.dtype)return hl(n,r);const i={a:n,b:r};return ms.runKernel(Ge,i,{})}}),pl=Cs({mul_:function(t,e){let n=Ts(t,"a","mul"),r=Ts(e,"b","mul");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel(Vn,i)}}),fl=Cs({sqrt_:function(t){const e={x:Ts(t,"x","sqrt","float32")};return ms.runKernel(Tr,e)}}),ml=Cs({square_:function(t){const e=Ts(t,"x","square");return ms.runKernel("Square",{x:e},{})}}),gl=Cs({zerosLike_:function(t){const e={x:Ts(t,"x","zerosLike")};return ms.runKernel(Jr,e)}});function yl(t){return st(Lt(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=Ts(e,"x","tf.grad","string_or_numeric"),i=null!=n?Ts(n,"dy","tf.grad"):null;return ms.tidy(()=>{const{value:e,grads:n}=ms.gradients(()=>t(r),[r],i);return null!=i&&at(e.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Sl(n),n[0]})}}function xl(t){return st(Lt(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{st(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Es(e,"args","tf.grads","string_or_numeric"),i=null!=n?Ts(n,"dy","tf.grads"):null;return ms.tidy(()=>{const{value:e,grads:n}=ms.gradients(()=>t(...r),r,i);return null!=i&&at(e.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Sl(n),n})}}function vl(t){return st(Lt(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{st(e instanceof Yi,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),st(null==n||n instanceof Yi,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:i}=ms.gradients(()=>t(e),[e],n);return Sl(r),{grad:r[0],value:i}}}function bl(t){return st(Lt(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{st(Array.isArray(e)&&e.every(t=>t instanceof Yi),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),st(null==n||n instanceof Yi,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ms.gradients(()=>t(...e),e,n);return null!=n&&at(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Sl(r.grads),r}}function wl(t,e){st(Lt(t),()=>"The f passed in variableGrads(f) must be a function"),st(null==e||Array.isArray(e)&&e.every(t=>t instanceof Ji),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in ms.registeredVariables)e.push(ms.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,i=e.length;st((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const{value:s,grads:a}=ms.gradients(t,e,null,!0);st(a.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),st(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const o={};return e.forEach((t,e)=>{null!=a[e]&&(o[t.name]=a[e])}),null!=r&&r.forEach(t=>o[t.name]=null),{value:s,grads:o}}function _l(t){return ms.customGrad(t)}function Sl(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Ml(t,e){if((Et(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Et(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ks(t,[],[],e)}class Tl extends Co{minimize(t,e=!1,n){const{value:r,grads:i}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:i[t.name]}));this.applyGradients(t)}else this.applyGradients(i);return Zo(i),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return wl(t,e)}dispose(){null!=this.iterations_&&Zo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ml(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Tl,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class El extends Tl{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ms.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=ms.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Jo(()=>gl(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Jo(()=>gl(r).variable(!1))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const s=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Jo(()=>{const t=cl(pl(s,this.rho),pl(ml(i),1-this.rho)),e=pl(dl(fl(cl(a,this.epsilon)),fl(cl(s,this.epsilon))),i),n=cl(pl(a,this.rho),pl(ml(e),1-this.rho));s.assign(t),a.assign(n);const o=cl(pl(e,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Zo(this.accumulatedGrads.map(t=>t.variable)),Zo(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Al(t,e,n){const r={shape:t,value:e,dtype:n};return ms.runKernel(nn,{},r)}El.className="Adadelta",ko(El);class Cl extends Tl{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=ms.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Jo(()=>Al(r.shape,this.initialAccumulatorValue).variable(t))}}const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const s=this.accumulatedGrads[n].variable;Jo(()=>{const t=cl(s,ml(i));s.assign(t);const e=cl(pl(dl(i,fl(cl(t,ms.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Zo(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Cl.className="Adagrad",ko(Cl);const Il=Cs({pow_:function(t,e){let n=Ts(t,"base","pow"),r=Ts(e,"exp","pow");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel(tr,i)}}),kl=Cs({sub_:function(t,e){let n=Ts(t,"a","sub"),r=Ts(e,"b","sub");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel($r,i)}});class Rl extends Tl{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Jo(()=>{this.accBeta1=Ml(e).variable(),this.accBeta2=Ml(n).variable()}),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Jo(()=>{const n=kl(1,this.accBeta1),r=kl(1,this.accBeta2);e.forEach((e,i)=>{const s=ms.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:e+"/m",variable:Jo(()=>gl(s).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:e+"/v",variable:Jo(()=>gl(s).variable(!1))});const a=Array.isArray(t)?t[i].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedSecondMoment[i].variable,u=cl(pl(o,this.beta1),pl(a,1-this.beta1)),c=cl(pl(l,this.beta2),pl(ml(a),1-this.beta2)),h=dl(u,n),d=dl(c,r);o.assign(u),l.assign(c);const p=cl(pl(dl(h,cl(fl(d),this.epsilon)),-this.learningRate),s);s.assign(p)}),this.accBeta1.assign(pl(this.accBeta1,this.beta1)),this.accBeta2.assign(pl(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Zo(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Zo(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Jo(()=>{this.accBeta1.assign(Il(this.beta1,this.iterations_+1)),this.accBeta2.assign(Il(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Rl.className="Adam",ko(Rl);const Nl=Cs({abs_:function(t){const e=Ts(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return ms.runKernel(Te,t)}{const t={x:e};return ms.runKernel(Zt,t)}}}),Ll=Cs({maximum_:function(t,e){let n=Ts(t,"a","maximum"),r=Ts(e,"b","maximum");[n,r]=as(n,r),"bool"===n.dtype&&(n=Aa(n,"int32"),r=Aa(r,"int32")),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Rn,i)}});class Dl extends Tl{constructor(t,e,n,r=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Jo(()=>{this.iteration=Ml(0).variable(),this.accBeta1=Ml(e).variable()}),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Jo(()=>{const n=kl(1,this.accBeta1),r=dl(-this.learningRate,cl(pl(this.iteration,this.decay),1));e.forEach((e,i)=>{const s=ms.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:e+"/m",variable:gl(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:e+"/v",variable:gl(s).variable(!1)});const a=Array.isArray(t)?t[i].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedWeightedInfNorm[i].variable,u=cl(pl(o,this.beta1),pl(a,1-this.beta1)),c=pl(l,this.beta2),h=Nl(a),d=Ll(c,h);o.assign(u),l.assign(d);const p=cl(pl(dl(r,n),dl(u,cl(d,this.epsilon))),s);s.assign(p)}),this.iteration.assign(cl(this.iteration,1)),this.accBeta1.assign(pl(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Zo(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Zo(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Dl.className="Adamax",ko(Dl);class Pl extends Tl{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=ms.registeredVariables[e];Jo(()=>{const t=cl(pl(this.c,r),i);i.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Qo(Ml(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Pl.className="SGD",ko(Pl);class Ol extends Pl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ml(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=ms.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Jo(()=>gl(r).variable(t))}}const i=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Jo(()=>{let t;const e=cl(pl(this.m,i),s);t=this.useNesterov?cl(pl(this.c,cl(s,pl(e,this.m))),r):cl(pl(this.c,e),r),i.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Zo(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Ol.className="Momentum",ko(Ol);class Fl extends Tl{constructor(t,e=.9,n=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,null==r&&(this.epsilon=ms.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=ms.registeredVariables[e],i=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Jo(()=>gl(r).variable(i))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Jo(()=>gl(r).variable(i))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Jo(()=>gl(r).variable(i))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Jo(()=>{const t=cl(pl(a,this.decay),pl(ml(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=cl(pl(e,this.decay),pl(s,1-this.decay)),l=dl(pl(s,this.learningRate),fl(kl(t,cl(ml(i),this.epsilon)))),u=cl(pl(o,this.momentum),l);a.assign(t),e.assign(i),o.assign(u);const c=kl(r,u);r.assign(c)}else{const t=cl(pl(a,this.decay),pl(ml(s),1-this.decay)),e=cl(pl(o,this.momentum),dl(pl(s,this.learningRate),fl(cl(t,this.epsilon))));a.assign(t),o.assign(e);const n=kl(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Zo(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Zo(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Zo(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Fl.className="RMSProp",ko(Fl);class zl{static sgd(t){return new Pl(t)}static momentum(t,e,n=!1){return new Ol(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,i=!1){return new Fl(t,e,n,r,i)}static adam(t=.001,e=.9,n=.999,r=null){return new Rl(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new El(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,i=0){return new Dl(t,e,n,r,i)}static adagrad(t,e=.1){return new Cl(t,e)}}const Bl=Cs({acos_:function(t){const e={x:Ts(t,"x","acos")};return ms.runKernel(Qt,e)}}),Ul=Cs({acosh_:function(t){const e={x:Ts(t,"x","acosh")};return ms.runKernel(te,e)}}),$l=Cs({addN_:function(t){st(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),st(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Ts(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!ht(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return ms.runKernel(ne,r)}}),ql=Cs({all_:function(t,e=null,n=!1){const r={x:Ts(t,"x","all","bool")},i={axis:e,keepDims:n};return ms.runKernel(re,r,i)}}),Vl=Cs({any_:function(t,e=null,n=!1){const r={x:Ts(t,"x","any","bool")},i={axis:e,keepDims:n};return ms.runKernel(ie,r,i)}}),Hl=Cs({argMax_:function(t,e=0){const n={x:Ts(t,"x","argMax")},r={axis:e};return ms.runKernel(se,n,r)}}),Wl=Cs({argMin_:function(t,e=0){const n={x:Ts(t,"x","argMin")},r={axis:e};return ms.runKernel(ae,n,r)}}),Gl=Cs({asin_:function(t){const e={x:Ts(t,"x","asin")};return ms.runKernel(oe,e)}}),jl=Cs({asinh_:function(t){const e={x:Ts(t,"x","asinh")};return ms.runKernel(le,e)}}),Xl=Cs({atan_:function(t){const e={x:Ts(t,"x","atan")};return ms.runKernel(ue,e)}}),Yl=Cs({atan2_:function(t,e){let n=Ts(t,"a","atan2"),r=Ts(e,"b","atan2");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel(he,i)}}),Kl=Cs({atanh_:function(t){const e={x:Ts(t,"x","atanh")};return ms.runKernel(ce,e)}});function Jl(t,e,n,r,i="NHWC",s){return tu(t,[...e,t[3]],n,s,r,null,null,uu(i))}function Zl(t,e,n,r,i,s,a="channelsLast"){const[o,l]=ru(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);u=[o,l,t[1],t[1]]}return tu(t,u,n,r,i,s,!1,a)}function Ql(t,e,n,r,i,s,a="NDHWC"){const[o,l,u]=iu(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return eu(t,c,n,r,i,!1,h,s)}function tu(t,e,n,r,i,s,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=ru(n),[y,x]=ru(r),v=su(d,y),b=su(p,x),{padInfo:w,outHeight:_,outWidth:S}=function(t,e,n,r,i,s,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,i){null==r&&(r=nu(t,e,n));const s=t[1];return[au((t[0]-e+2*r)/n+1,i),au((s-e+2*r)/n+1,i)]}([e,n],s,r,t,o);c=i[0],h=i[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/i);const t=Math.max(0,(c-1)*r+s-e),o=Math.max(0,(h-1)*i+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/r),h=Math.ceil((n-a+1)/i);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=au((e-s+d+p)/r+1,o),h=au((n-a+f+m)/i+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(i,u,c,m,g,v,b,s,o),M=a?f*h:f;let T;return"channelsFirst"===o?T=[l,M,_,S]:"channelsLast"===o&&(T=[l,_,S,M]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:S,outChannels:M,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:t,outShape:T,filterShape:e}}function eu(t,e,n,r,i,s=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[y,x,v]=iu(n),[b,w,_]=iu(r),S=su(p,b),M=su(f,w),T=su(m,_),{padInfo:E,outDepth:A,outHeight:C,outWidth:I}=function(t,e,n,r,i,s,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,i,s){null==i&&(i=nu(t,e,r));const a=t[1],o=t[2];return[au((t[0]-e+2*i)/r+1,s),au((a-e+2*i)/r+1,s),au((o-e+2*i)/r+1,s),1]}([e,n,r,1],o,0,i,t,c);d=s[0],p=s[1],f=s[2]}else if("same"===t){d=Math.ceil(e/i),p=Math.ceil(n/s),f=Math.ceil(r/a);const t=(d-1)*i+o-e,c=(p-1)*s+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),y=t-g,x=Math.floor(c/2),v=c-x,b=Math.floor(m/2);h={top:x,bottom:v,left:b,right:m-b,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/i),p=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(i,u,c,h,y,x,v,S,M,T,o),k=s?g*d:g;let R;return"channelsFirst"===a?R=[l,k,A,C,I]:"channelsLast"===a&&(R=[l,A,C,I,k]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:A,outHeight:C,outWidth:I,outChannels:k,padInfo:E,strideDepth:y,strideHeight:x,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:M,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:t,outShape:R,filterShape:e}}function nu(t,e,n,r=1){const i=su(e,r);return Math.floor((t[0]*(n-1)-n+i)/2)}function ru(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function iu(t){return"number"==typeof t?[t,t,t]:t}function su(t,e){return e<=1?t:t+(t-1)*(e-1)}function au(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function ou(t){const[e,n,r]=ru(t);return 1===e&&1===n&&1===r}function lu(t,e){return ou(t)||ou(e)}function uu(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}function cu(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)st(dt(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach(e=>{e.forEach(e=>{st(dt(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`)})})}}}const hu=Cs({reshape_:function(t,e){const n={x:Ts(t,"x","reshape","string_or_numeric")},r={shape:e};return ms.runKernel(or,n,r)}}),du=Cs({avgPool_:function(t,e,n,r,i){const s=Ts(t,"x","avgPool","float32");st(lu(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let a=s,o=!1;3===s.rank&&(o=!0,a=hu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),st(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),cu("avgPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i};let c=ms.runKernel(de,l,u);return c=Aa(c,s.dtype),o?hu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),pu=Cs({avgPool3d_:function(t,e,n,r,i,s="NDHWC"){const a=Ts(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=hu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),st("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),cu("avgPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s};let h=ms.runKernel(fe,u,c);return h=Aa(h,o.dtype),l?hu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),fu=Cs({concat_:function(t,e=0){st(t.length>=1,()=>"Pass at least one tensor to concat");const n=Es(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return Ca(n[0]);const r=n,i={axis:e};return ms.runKernel(Ee,r,i)}}),mu=Cs({sigmoid_:function(t){const e={x:Ts(t,"x","sigmoid","float32")};return ms.runKernel(Sr,e)}}),gu=Cs({slice_:function(t,e,n){const r=Ts(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},s={begin:e,size:n};return ms.runKernel(vr,i,s)}}),yu=Cs({tanh_:function(t){const e={x:Ts(t,"x","tanh","float32")};return ms.runKernel(Vr,e)}}),xu=Cs({basicLSTMCell_:function(t,e,n,r,i,s){const a=Ts(t,"forgetBias","basicLSTMCell"),o=Ts(e,"lstmKernel","basicLSTMCell"),l=Ts(n,"lstmBias","basicLSTMCell"),u=Ts(r,"data","basicLSTMCell"),c=Ts(i,"c","basicLSTMCell"),h=Ts(s,"h","basicLSTMCell"),d=fu([u,h],1),p=ja(d,o),f=cl(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=gu(f,[0,0],y),v=gu(f,[0,g],y),b=gu(f,[0,2*g],y),w=gu(f,[0,3*g],y),_=cl(pl(mu(x),yu(v)),pl(c,mu(cl(a,b))));return[_,pl(yu(_),mu(w))]}}),vu=Cs({batchToSpaceND_:function(t,e,n){const r=Ts(t,"x","batchToSpaceND"),i=e.reduce((t,e)=>t*e);st(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),st(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),st(r.shape[0]%i==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const s={x:r},a={blockShape:e,crops:n};return ms.runKernel(ye,s,a)}}),bu=Cs({batchNorm_:function(t,e,n,r,i,s){null==s&&(s=.001);const a=Ts(t,"x","batchNorm"),o=Ts(e,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;null!=i&&(u=Ts(i,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),st(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),st(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),st(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:function(t){let e;return e=0===t.rank||1===t.rank?hu(t,[1,1,1,t.size]):2===t.rank?hu(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?hu(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},p=ms.runKernel(on,h,d);return hu(p,a.shape)}}),wu=Cs({batchNorm2d_:function(t,e,n,r,i,s){const a=Ts(t,"x","batchNorm"),o=Ts(e,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=i&&(u=Ts(i,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),st(2===a.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),st(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),st(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&st(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&st(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),bu(a,o,l,c,u,s)}}),_u=Cs({batchNorm3d_:function(t,e,n,r,i,s){const a=Ts(t,"x","batchNorm"),o=Ts(e,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=i&&(u=Ts(i,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),st(3===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),st(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),st(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&st(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&st(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),bu(a,o,l,c,u,s)}}),Su=Cs({batchNorm4d_:function(t,e,n,r,i,s){const a=Ts(t,"x","batchNorm"),o=Ts(e,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=i&&(u=Ts(i,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),st(4===a.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),st(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),st(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&st(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&st(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),bu(a,o,l,c,u,s)}}),Mu=Cs({bincount_:function(t,e,n){const r=Ts(t,"x","bincount"),i=Ts(e,"weights","bincount");st("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),st(n>=0,()=>`size must be non-negative, but got ${n}.`),st(i.size===r.size||0===i.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`);const s={x:r,weights:i},a={size:n};return ms.runKernel(xe,s,a)}}),Tu=Cs({broadcastArgs_:function(t,e){const n=Ts(t,"s0","broadcastArgs","int32"),r=Ts(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+n.rank);if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+r.rank);const i={s0:n,s1:r};return ms.runKernel(be,i)}}),Eu=Cs({broadcastTo_:function(t,e){let n=Ts(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=hu(n,t)}const i=n.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(i[l]===e[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===s.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Ca(n);const a={x:n},o={reps:s};return ms.runKernel(Hr,a,o)}}),Au=Cs({ceil_:function(t){const e={x:Ts(t,"x","ceil","float32")};return ms.runKernel(_e,e)}}),Cu=Cs({clipByValue_:function(t,e,n){const r=Ts(t,"x","clipByValue");st(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const i={x:r},s={clipValueMin:e,clipValueMax:n};return ms.runKernel(Se,i,s)}}),Iu=Cs({concat1d_:function(t){return fu(t,0)}}),ku=Cs({concat2d_:function(t,e){return fu(t,e)}}),Ru=Cs({concat3d_:function(t,e){return fu(t,e)}}),Nu=Cs({concat4d_:function(t,e){return fu(t,e)}}),Lu=Cs({conv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=Ts(t,"x","conv2d","float32"),l=Ts(e,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=hu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),st(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),cu("conv2d",r,a);const h="NHWC"===i?u.shape[3]:u.shape[1];st(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),st(lu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=ms.runKernel(Ae,d,p);return c?hu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Du=Cs({conv1d_:function(t,e,n,r,i="NWC",s=1,a){const o=Ts(t,"x","conv1d"),l=Ts(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=hu(o,[1,o.shape[0],o.shape[1]])),st(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),st(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),cu("conv1d",r,a),st(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),st(lu(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),st("NWC"===i,()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=hu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=hu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Lu(d,h,[1,n],r,"NHWC",[1,s],a);return hu(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Pu=Cs({conv2DBackpropInput_:function(t,e,n,r,i,s="NHWC",a){st(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=hu(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),st(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),st(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),st(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];st(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),st(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),cu("conv2dDerInput",i,a);const d={dy:l,filter:n},p={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,inputShape:o},f=ms.runKernel(Ie,d,p);return u?hu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ou=Cs({conv2dTranspose_:function(t,e,n,r,i,s){const a=Ts(t,"x","conv2dTranspose"),o=Ts(e,"filter","conv2dTranspose");return Pu(n,a,o,r,i,"NHWC",s)}}),Fu=Cs({conv3d_:function(t,e,n,r,i="NDHWC",s=[1,1,1]){const a=Ts(t,"x","conv3d"),o=Ts(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=hu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),st(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),st(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),st(lu(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),st("NDHWC"===i,()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:i,dilations:s},d=ms.runKernel(ke,c,h);return u?hu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),zu=Cs({conv3DBackpropInput_:function(t,e,n,r,i){st(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let s=t,a=e,o=!1;4===e.rank&&(o=!0,a=hu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const l=s[4],u=a.shape[4];st(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),st(5===a.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank),st(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),st(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),st(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},h={pad:i,strides:r,inputShape:s},d=ms.runKernel(Ne,c,h);return o?hu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Bu=Cs({conv3dTranspose_:function(t,e,n,r,i){const s=Ts(t,"x","conv3dTranspose"),a=Ts(e,"filter","conv3dTranspose");return zu(n,s,a,r,i)}}),Uu=Cs({cos_:function(t){const e={x:Ts(t,"x","cos","float32")};return ms.runKernel(Le,e)}}),$u=Cs({cosh_:function(t){const e={x:Ts(t,"x","cosh","float32")};return ms.runKernel(De,e)}}),qu=Cs({cumsum_:function(t,e=0,n=!1,r=!1){const i={x:Ts(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:r};return ms.runKernel(Pe,i,s)}}),Vu=Cs({denseBincount_:function(t,e,n,r=!1){const i=Ts(t,"x","denseBincount"),s=Ts(e,"weights","denseBincount");st("int32"===i.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+i.dtype),st(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),st(n>=0,()=>`size must be non-negative, but got ${n}.`),st(s.size===i.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${s.shape}.`);const a={x:i,weights:s},o={size:n,binaryOutput:r};return ms.runKernel(Fe,a,o)}}),Hu=Cs({depthToSpace_:function(t,e,n="NHWC"){const r=Ts(t,"x","depthToSpace","float32"),i="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];st(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e),st(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),st(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e} for depthToSpace with input shape\n        ${r.shape}`),st(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:n};return ms.runKernel(ze,o,l)}}),Wu=Cs({depthwiseConv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=Ts(t,"x","depthwiseConv2d","float32"),l=Ts(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=hu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),st(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),st(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),cu("depthwiseConv2d",r,a);const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},p=ms.runKernel(Be,h,d);return c?hu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Gu=Cs({diag_:function(t){const e={x:Ts(t,"x","diag")};return ms.runKernel(qe,e)}}),ju=Cs({dilation2d_:function(t,e,n,r,i=[1,1],s="NHWC"){const a=Ts(t,"x","dilation2d"),o=Ts(e,"filter","dilation2d");st(3===a.rank||4===a.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),st(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),st("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let l=a,u=!1;3===a.rank&&(l=hu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:i},d=ms.runKernel(Ve,c,h);return u?hu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Xu=Cs({equal_:function(t,e){let n=Ts(t,"a","equal","string_or_numeric"),r=Ts(e,"b","equal","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Je,i)}}),Yu=Cs({where_:function(t,e,n){const r=Ts(e,"a","where"),i=Ts(n,"b","where"),s=Ts(t,"condition","where","bool"),a=Qa(Qa(s.shape,r.shape),i.shape),o={condition:Eu(s,a),t:Eu(r,a),e:Eu(i,a)};return ms.runKernel(yr,o)}}),Ku=Cs({divNoNan_:function(t,e){let n=Ts(t,"a","div"),r=Ts(e,"b","div");[n,r]=as(n,r);const i=dl(n,r),s=gl(i),a=Xu(r,s);return Yu(a,s,i)}}),Ju=Cs({dot_:function(t,e){const n=Ts(t,"t1","dot"),r=Ts(e,"t2","dot");st(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const i=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(st(i===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${s}.`),1===n.rank&&1===r.rank){const t=hu(n,[1,-1]),e=hu(r,[-1,1]),i=ja(t,e);return hu(i,[])}if(1===n.rank&&2===r.rank){const t=hu(n,[1,-1]),e=hu(r,[r.shape[0],r.shape[1]]),i=ja(t,e);return hu(i,[i.size])}if(2===n.rank&&1===r.rank){const t=hu(r,[-1,1]),e=ja(n,t);return hu(e,[e.size])}{const t=hu(r,[r.shape[0],r.shape[1]]);return ja(n,t)}}}),Zu=Cs({einsum_:function(t,...e){const n=e.map((t,e)=>Ts(t,"tensors"+e,"einsum")),r={equation:t};return ms.runKernel(je,n,r)}}),Qu=Cs({elu_:function(t){const e={x:Ts(t,"x","elu","float32")};return ms.runKernel(Xe,e)}}),tc=Cs({erf_:function(t){let e=Ts(t,"x","erf");st("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Aa(e,"float32"));const n={x:e};return ms.runKernel(Ke,n)}}),ec=Cs({exp_:function(t){const e={x:Ts(t,"x","exp")};return ms.runKernel(Ze,e)}}),nc=Cs({expandDims_:function(t,e=0){const n=Ts(t,"x","expandDims","string_or_numeric");st(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},i={dim:e};return ms.runKernel(Qe,r,i)}}),rc=Cs({expm1_:function(t){const e={x:Ts(t,"x","expm1")};return ms.runKernel(tn,e)}}),ic=Cs({tile_:function(t,e){const n=Ts(t,"x","tile","string_or_numeric");st(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},i={reps:e};return ms.runKernel(Hr,r,i)}}),sc=Cs({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const i=Ea([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)i.set(1,o,o);const a=hu(i.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return ic(nc(a,0),[n[0],1,1]);if(2===n.length)return ic(nc(nc(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return ic(nc(nc(nc(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ac=Cs({floor_:function(t){const e={x:Ts(t,"x","floor","float32")};return ms.runKernel(sn,e)}}),oc=Cs({gather_:function(t,e,n=0,r=0){const i={x:Ts(t,"x","gather"),indices:Ts(e,"indices","gather","int32")},s={axis:n,batchDims:r};return ms.runKernel(ln,i,s)}}),lc=Cs({greater_:function(t,e){let n=Ts(t,"a","greater","string_or_numeric"),r=Ts(e,"b","greater","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(cn,i)}}),uc=Cs({greaterEqual_:function(t,e){let n=Ts(t,"a","greaterEqual","string_or_numeric"),r=Ts(e,"b","greaterEqual","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(hn,i)}}),cc=Cs({imag_:function(t){const e={input:Ts(t,"input","imag")};return ms.runKernel(fn,e)}}),hc=Cs({isFinite_:function(t){const e={x:Ts(t,"x","isFinite")};return ms.runKernel(mn,e)}}),dc=Cs({isInf_:function(t){const e={x:Ts(t,"x","isInf")};return ms.runKernel(gn,e)}}),pc=Cs({isNaN_:function(t){const e={x:Ts(t,"x","isNaN")};return ms.runKernel(yn,e)}}),fc=Cs({leakyRelu_:function(t,e=.2){const n={x:Ts(t,"x","leakyRelu")},r={alpha:e};return ms.runKernel(xn,n,r)}}),mc=Cs({less_:function(t,e){let n=Ts(t,"a","less","string_or_numeric"),r=Ts(e,"b","less","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(vn,i)}}),gc=Cs({lessEqual_:function(t,e){let n=Ts(t,"a","lessEqual","string_or_numeric"),r=Ts(e,"b","lessEqual","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(bn,i)}});function yc(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return ms.runKernel(wn,{},r)}const xc=Cs({localResponseNormalization_:function(t,e=5,n=1,r=1,i=.5){const s=Ts(t,"x","localResponseNormalization");st(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),st(dt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,o=!1;3===s.rank&&(o=!0,a=hu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:i},c=ms.runKernel(Cn,l,u);return o?hu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vc=Cs({log_:function(t){const e={x:Ts(t,"x","log","float32")};return ms.runKernel(_n,e)}}),bc=Cs({log1p_:function(t){const e={x:Ts(t,"x","log1p")};return ms.runKernel(Sn,e)}}),wc=Cs({neg_:function(t){const e={x:Ts(t,"x","neg")};return ms.runKernel(Hn,e)}}),_c=Cs({softplus_:function(t){const e={x:Ts(t,"x","softplus")};return ms.runKernel(Mr,e)}}),Sc=Cs({logSigmoid_:function(t){const e=Ts(t,"x","logSigmoid");return _l(t=>({value:wc(_c(wc(t))),gradFunc:e=>pl(e,mu(wc(t)))}))(e)}}),Mc=Cs({max_:function(t,e=null,n=!1){const r={x:Ts(t,"x","max")},i={reductionIndices:e,keepDims:n};return ms.runKernel(kn,r,i)}}),Tc=Cs({sum_:function(t,e=null,n=!1){let r=Ts(t,"x","sum");"bool"===r.dtype&&(r=Aa(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return ms.runKernel(Er,i,s)}}),Ec=Cs({logSoftmax_:function(t,e=-1){const n=Ts(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return _l((t,n)=>{const r=Mc(t,e,!0),i=kl(t,r),s=kl(Aa(i,"float32"),vc(Tc(ec(i),e,!0)));return n([s]),{value:s,gradFunc:(t,n)=>{const[r]=n,i=ec(r);return kl(t,pl(Tc(t,e,!0),i))}}})(n)}});function Ac(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Cc(t,e,n){const r=t.length+e.length,i=[];let s=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?i.push(t[s++]):i.push(e[a++]);return i}function Ic(t,e){const n=[],r=t.length;for(let i=0;i<r;i++)-1===e.indexOf(i)&&n.push(t[i]);return[n,e.map(e=>t[e])]}function kc(t,e){return Cc(t,e.map(t=>1),e)}function Rc(t,e,n){st(Ac(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function Nc(t,e){if(Ac(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function Lc(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Dc(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const Pc=Cs({logSumExp_:function(t,e=null,n=!1){const r=Ts(t,"x","logSumExp"),i=vt(e,r.shape),s=Mc(r,i,!0),a=kl(r,s),o=ec(a),l=Tc(o,i),u=vc(l),c=cl(hu(s,u.shape),u);if(n){const t=kc(c.shape,i);return hu(c,t)}return c}}),Oc=Cs({logicalAnd_:function(t,e){const n=Ts(t,"a","logicalAnd","bool"),r=Ts(e,"b","logicalAnd","bool");Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Mn,i)}}),Fc=Cs({logicalNot_:function(t){const e={x:Ts(t,"x","logicalNot","bool")};return ms.runKernel(Tn,e)}}),zc=Cs({logicalOr_:function(t,e){const n=Ts(t,"a","logicalOr","bool"),r=Ts(e,"b","logicalOr","bool");Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(En,i)}}),Bc=Cs({logicalXor_:function(t,e){const n=Ts(t,"a","logicalXor","bool"),r=Ts(e,"b","logicalXor","bool");return Qa(n.shape,r.shape),Oc(zc(t,e),Fc(Oc(t,e)))}}),Uc=Cs({maxPool_:function(t,e,n,r,i){const s=Ts(t,"x","maxPool");let a=s,o=!1;3===s.rank&&(o=!0,a=hu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),st(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),st(lu(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),cu("maxPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i},c=ms.runKernel(Nn,l,u);return o?hu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),$c=Cs({maxPool3d_:function(t,e=[1,1,1],n,r,i,s="NDHWC"){const a=Ts(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=hu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),st("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),cu("maxPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s},h=ms.runKernel(Dn,u,c);return l?hu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),qc=Cs({maxPoolWithArgmax_:function(t,e,n,r,i=!1){const s={x:Ts(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:r,includeBatchInIndex:i},o=ms.runKernel(On,s,a);return{result:o[0],indexes:o[1]}}}),Vc=Cs({mean_:function(t,e=null,n=!1){const r={x:Ts(t,"x","mean")},i={axis:e,keepDims:n};return ms.runKernel(Fn,r,i)}});function Hc(t,e="float32"){if("complex64"===e){const e=Hc(t,"float32"),n=Hc(t,"float32");return Is(e,n)}const n=Bt(ut(t),e);return ms.makeTensor(n,t,e)}function Wc(t,e="float32"){if("complex64"===e){const e=Wc(t,"float32"),n=Hc(t,"float32");return Is(e,n)}const n=zt(ut(t),e);return ms.makeTensor(n,t,e)}function Gc(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===t)return[];let r=Ts(t,"x","meshgrid",t instanceof Yi?t.dtype:"float32");if(void 0===e)return[r];let i=Ts(e,"y","meshgrid",e instanceof Yi?e.dtype:"float32");const s=ut(r.shape),a=ut(i.shape);return"xy"===n?(r=hu(r,[1,-1]),i=hu(i,[-1,1]),[ja(Wc([a,1],r.dtype),r),ja(i,Wc([1,s],i.dtype))]):(r=hu(r,[-1,1]),i=hu(i,[1,-1]),[ja(r,Wc([1,a],r.dtype)),ja(Wc([s,1],i.dtype),i)])}const jc=Cs({min_:function(t,e=null,n=!1){const r={x:Ts(t,"x","min")},i={axis:e,keepDims:n};return ms.runKernel(zn,r,i)}}),Xc=Cs({minimum_:function(t,e){let n=Ts(t,"a","minimum"),r=Ts(e,"b","minimum");[n,r]=as(n,r),"bool"===n.dtype&&(n=Aa(n,"int32"),r=Aa(r,"int32")),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Bn,i)}}),Yc=Cs({mirrorPad_:function(t,e,n){st("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Ts(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");st(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const i="reflect"===n?1:0;for(let o=0;o<r.rank;o++)st(2===e[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),st(e[o][0]>=0&&e[o][0]<=r.shape[o]-i&&e[o][1]>=0&&e[o][1]<=r.shape[o]-i,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-i} or less than 0 for input of shape ${r.shape}`);const s={paddings:e,mode:n},a={x:r};return ms.runKernel(Un,a,s)}}),Kc=Cs({mod_:function(t,e){let n=Ts(t,"a","mod"),r=Ts(e,"b","mod");[n,r]=as(n,r);const i={a:n,b:r};return ms.runKernel($n,i)}}),Jc=Cs({moments_:function(t,e=null,n=!1){const r=vt(e,(t=Ts(t,"x","moments")).shape),i=Vc(t,r,n);let s=i.shape;n||(s=kc(i.shape,r));const a=ml(kl(Aa(t,"float32"),hu(i,s)));return{mean:i,variance:Vc(a,r,n)}}}),Zc=Cs({multiRNNCell_:function(t,e,n,r){const i=Ts(e,"data","multiRNNCell"),s=Es(n,"c","multiRNNCell"),a=Es(r,"h","multiRNNCell");let o=i;const l=[];for(let h=0;h<t.length;h++){const e=t[h](o,s[h],a[h]);l.push(e[0]),l.push(e[1]),o=e[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}}),Qc=Cs({multinomial_:function(t,e,n,r=!1){const i=Ts(t,"logits","multinomial"),s=i.size,a=i.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);n=n||Math.random();const o={logits:1===a?hu(i,[1,-1]):i},l={numSamples:e,seed:n,normalized:r},u=ms.runKernel(qn,o,l);return 1===a?hu(u,[u.size]):u}}),th=Cs({notEqual_:function(t,e){let n=Ts(t,"a","notEqual","string_or_numeric"),r=Ts(e,"b","notEqual","string_or_numeric");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Wn,i)}}),eh=Cs({onesLike_:function(t){const e={x:Ts(t,"x","onesLike")};return ms.runKernel(Yn,e)}}),nh=Cs({outerProduct_:function(t,e){const n=Ts(t,"v1","outerProduct"),r=Ts(e,"v2","outerProduct");st(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const i=hu(n,[-1,1]),s=hu(r,[1,-1]);return ja(i,s)}}),rh=Cs({pad_:function(t,e,n=0){const r=Ts(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},s={x:r};return ms.runKernel(Zn,s,i)}}),ih=Cs({pad1d_:function(t,e,n=0){return st(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),rh(t,[e],n)}}),sh=Cs({pad2d_:function(t,e,n=0){return st(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),rh(t,e,n)}}),ah=Cs({pad3d_:function(t,e,n=0){return st(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),rh(t,e,n)}}),oh=Cs({pad4d_:function(t,e,n=0){return st(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),rh(t,e,n)}}),lh=Cs({spaceToBatchND_:function(t,e,n){const r=Ts(t,"x","spaceToBatchND");st(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),st(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),st(r.shape.reduce((t,r,i)=>i>0&&i<=e.length?t&&(r+n[i-1][0]+n[i-1][1])%e[i-1]==0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:r},s={blockShape:e,paddings:n};return ms.runKernel(Ar,i,s)}}),uh=Cs({pool_:function(t,e,n,r,i,s,a){null==i&&(i=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Ts(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=hu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(lu(s,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`);const c=Zl(l.shape,e,s,i,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),i=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],i[e]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map(t=>t[0]),i=n.map(t=>t[1]),s=t.concat(r,i),a=e.map((t,e)=>(t-s[e]%t)%t),o=i.map((t,e)=>t+a[e]);return[e.map((t,e)=>[r[e],o[e]]),e.map((t,e)=>[0,a[e]])]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?l:lh(l,h,f),x=("avg"===n?()=>du(y,e,s,g,a):()=>Uc(y,e,s,g,a))(),v=p?x:vu(x,h,m);return u?hu(v,[v.shape[1],v.shape[2],v.shape[3]]):v}}),ch=Cs({prelu_:function(t,e){const n={x:Ts(t,"x","prelu"),alpha:Ts(e,"alpha","prelu")};return ms.runKernel(er,n)}}),hh=Cs({prod_:function(t,e=null,n=!1){let r=Ts(t,"x","prod");"bool"===r.dtype&&(r=Aa(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return ms.runKernel(nr,i,s)}}),dh=Cs({rand_:function(t,e,n){const r=ut(t);let i=null;if(null==n||"float32"===n)i=new Float32Array(r);else if("int32"===n)i=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);i=new Uint8Array(r)}for(let s=0;s<r;s++)i[s]=e();return ms.makeTensor(i,t,n)}});var ph=i(6377);class fh{constructor(t,e,n,r,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=i||Math.random();this.random=ph.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,i,s;do{r=2*this.random()-1,i=2*this.random()-1,s=r*r+i*i}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*i*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class mh{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const i=r||Math.random();this.randu=ph.alea(i.toString()),this.randn=new fh(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,i,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),i=this.randu(),i<e||Math.log(i)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class gh{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ph.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const yh=Cs({randomGamma_:function(t,e,n=1,r="float32",i){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new mh(e,n,r,i),a=Ea(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}}),xh=Cs({randomNormal_:function(t,e=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new fh(e,n,r,!1,i),a=Ea(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}}),vh=Cs({randomUniform_:function(t,e=0,n=1,r="float32",i){const s=Ea(t,r),a=new gh(e,n,null,i);for(let o=0;o<s.values.length;o++)s.values[o]=a.nextValue();return s.toTensor()}});function bh(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:r};return ms.runKernel(rr,{},i)}const wh=Cs({real_:function(t){const e={input:Ts(t,"input","real")};return ms.runKernel(ir,e)}}),_h=Cs({reciprocal_:function(t){const e={x:Ts(t,"x","reciprocal")};return ms.runKernel(sr,e)}}),Sh=Cs({relu_:function(t){const e={x:Ts(t,"x","relu")};return ms.runKernel(ar,e)}}),Mh=Cs({relu6_:function(t){const e={x:Ts(t,"x","relu6")};return ms.runKernel(dr,e)}}),Th=Cs({reverse_:function(t,e){const n={x:Ts(t,"x","reverse")},r={dims:e};return ms.runKernel(pr,n,r)}}),Eh=Cs({reverse1d_:function(t){const e=Ts(t,"x","reverse");return st(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Th(e,0)}}),Ah=Cs({reverse2d_:function(t,e){const n=Ts(t,"x","reverse");return st(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Th(n,e)}}),Ch=Cs({reverse3d_:function(t,e){const n=Ts(t,"x","reverse");return st(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Th(n,e)}}),Ih=Cs({reverse4d_:function(t,e){const n=Ts(t,"x","reverse");return st(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Th(n,e)}}),kh=Cs({round_:function(t){const e={x:Ts(t,"x","round")};return ms.runKernel(fr,e)}}),Rh=Cs({rsqrt_:function(t){const e={x:Ts(t,"x","rsqrt","float32")};return ms.runKernel(mr,e)}}),Nh=Cs({selu_:function(t){const e={x:Ts(t,"x","selu")};return ms.runKernel(xr,e)}}),Lh=Cs({separableConv2d_:function(t,e,n,r,i,s=[1,1],a="NHWC"){const o=Ts(t,"x","separableConv2d"),l=Ts(e,"depthwiseFilter","separableConv2d"),u=Ts(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=hu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");st(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),st(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),st(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),st(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),st(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];st(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Wu(c,l,r,i,a,s),m=Lu(f,u,1,"valid",a);return h?hu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Dh=async function(t,e){const n=Ts(t,"x","setdiff1d"),r=Ts(e,"y","setdiff1d");st(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),st(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),st(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const i=await n.data(),s=await r.data(),a=new Set(s);let o=0;for(let c=0;c<i.length;c++)a.has(i[c])||o++;const l=new Wi([o],n.dtype),u=new Wi([o],"int32");for(let c=0,h=0;c<i.length;c++)a.has(i[c])||(l.values[h]=i[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]},Ph=Cs({sign_:function(t){const e={x:Ts(t,"x","sign")};return ms.runKernel(_r,e)}}),Oh=Cs({sin_:function(t){const e={x:Ts(t,"x","sin","float32")};return ms.runKernel(br,e)}}),Fh=Cs({sinh_:function(t){const e={x:Ts(t,"x","sinh")};return ms.runKernel(wr,e)}}),zh=Cs({slice1d_:function(t,e,n){const r=Ts(t,"x","slice1d");return st(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),gu(r,[e],[n])}}),Bh=Cs({slice2d_:function(t,e,n){const r=Ts(t,"x","slice2d");return st(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),gu(r,e,n)}}),Uh=Cs({slice3d_:function(t,e,n){const r=Ts(t,"x","slice3d");return st(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),gu(r,e,n)}}),$h=Cs({slice4d_:function(t,e,n){const r=Ts(t,"x","slice4d");return st(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),gu(r,e,n)}}),qh=Cs({softmax_:function(t,e=-1){const n=Ts(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},i={dim:e};return ms.runKernel(Ir,r,i)}}),Vh=Cs({fft_:function(t){st("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return ms.runKernel(en,e)}}),Hh=Cs({ifft_:function(t){st("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return ms.runKernel(pn,e)}}),Wh=Cs({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const i=hu(t,[n,e]);r=Hh(i)}else{const i=[n,2*(e-1)],s=hu(wh(t),[n,e]),a=hu(cc(t),[n,e]),o=Th(gu(s,[0,1],[n,e-2]),1),l=pl(Th(gu(a,[0,1],[n,e-2]),1),Ml(-1)),u=fu([s,o],1),c=fu([a,l],1),h=hu(Is(u,c),[i[0],i[1]]);r=Hh(h)}if(r=wh(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=hu(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Gh=Cs({split_:function(t,e,n=0){const r={x:Ts(t,"x","split")},i={numOrSizeSplits:e,axis:n};return ms.runKernel(Cr,r,i)}}),jh=Cs({rfft_:function(t,e){st("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const r=t.size/n;let i;if(null!=e&&e<n){const r=t.shape.map(t=>0),s=t.shape.map(t=>t);s[t.shape.length-1]=e,i=gu(t,r,s),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,i=fu([t,Hc(r)],t.shape.length-1),n=e}else i=t;const s=gl(i),a=hu(Is(i,s),[r,n]),o=Vh(a),l=Math.floor(n/2)+1,u=wh(o),c=cc(o),h=Gh(u,[l,n-l],u.shape.length-1),d=Gh(c,[l,n-l],c.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,hu(Is(h[0],d[0]),p)}}),Xh=Cs({squaredDifference_:function(t,e){let n=Ts(t,"a","squaredDifference"),r=Ts(e,"b","squaredDifference");[n,r]=as(n,r),Qa(n.shape,r.shape);const i={a:n,b:r};return ms.runKernel(Pr,i,{})}}),Yh=Cs({squeeze_:function(t,e){const n=Ts(t,"x","squeeze");return hu(n,bt(n.shape,e).newShape)}}),Kh=Cs({stack_:function(t,e=0){const n=Es(t,"tensors","stack","string_or_numeric");st(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&st(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,i={axis:e};return ms.runKernel(Jn,r,i)}}),Jh=Cs({step_:function(t,e=0){const n={x:Ts(t,"x","step")},r={alpha:e};return ms.runKernel(Zr,n,r)}}),Zh=Cs({stridedSlice_:function(t,e,n,r,i=0,s=0,a=0,o=0,l=0){const u={x:Ts(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return ms.runKernel(Fr,u,c)}}),Qh=Cs({tan_:function(t){const e={x:Ts(t,"x","tan","float32")};return ms.runKernel(qr,e)}});function td(t,e){ot(t);const n=_s(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ks(t,null,n,e)}function ed(t,e,n){if(ot(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=_s(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ks(t,e,r,n)}function nd(t,e,n){if(ot(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=_s(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ks(t,e,r,n)}function rd(t,e,n){if(ot(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=_s(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ks(t,e,r,n)}function id(t,e,n){if(ot(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=_s(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ks(t,e=e||r,r,n)}const sd=Cs({topk_:function(t,e=1,n=!0){const r=Ts(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got "+e);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const s={x:r},a={k:e,sorted:n},[o,l]=ms.runKernel(Wr,s,a);return{values:o,indices:l}}}),ad=Cs({truncatedNormal_:function(t,e=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new fh(e,n,r,!0,i),a=Ea(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}}),od=Cs({unique_:function(t,e=0){const n=Ts(t,"x","unique","string_or_numeric");st(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},i={axis:e},[s,a]=ms.runKernel(Xr,r,i);return{values:s,indices:a}}}),ld=Cs({unsortedSegmentSum_:function(t,e,n){const r=Ts(t,"x","unsortedSegmentSum"),i=Ts(e,"segmentIds","unsortedSegmentSum","int32");st(dt(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:i},a={numSegments:n};return ms.runKernel(Kr,s,a)}}),ud=Cs({unstack_:function(t,e=0){const n=Ts(t,"x","unstack","string_or_numeric");st(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},i={axis:e};return ms.runKernel(Yr,r,i)}});function cd(t,e=!0,n,r){return ms.makeVariable(t,e,n,r)}function hd(t,e){const n=[];for(let s=0;s<e.length;s++)e[s]&&n.push(s);const r=Ea(t,"int32"),i=Ea([n.length,t.length],"int32");for(let s=0;s<n.length;s++){const e=r.indexToLoc(n[s]),a=s*t.length;i.values.set(e,a)}return i.toTensor()}const dd=async function(t){const e=Ts(t,"condition","whereAsync","bool"),n=await e.data(),r=hd(e.shape,n);return t!==e&&e.dispose(),r},pd=async function(t,e,n){const r=Ts(t,"tensor","boolMask"),i=Ts(e,"mask","boolMask","bool"),s=null==n?0:n,a=i.rank,o=r.shape;st(a>0,()=>"mask cannot be scalar"),at(o.slice(s,s+a),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+a;m++)l*=o[m];const u=o.slice(0,s).concat([l],o.slice(s+a)),c=hu(r,u),h=hu(i,[-1]),d=await dd(h),p=Yh(d,[1]),f=oc(c,p,s);return t!==r&&r.dispose(),e!==i&&i.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};function fd(t,e,n=null){if(0===t.rank)return Nl(t);if(1!==t.rank&&null===n)return fd(hu(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Tc(Nl(t),n);if(e===1/0)return Mc(Nl(t),n);if(e===-1/0)return jc(Nl(t),n);if("euclidean"===e||2===e)return fl(Tc(Il(Nl(t),Ml(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return Mc(Tc(Nl(t),n[0]),n[1]-1);if(e===1/0)return Mc(Tc(Nl(t),n[1]),n[0]);if(e===-1/0)return jc(Tc(Nl(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return fl(Tc(ml(t),n));throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const md=Cs({norm_:function(t,e="euclidean",n=null,r=!1){const i=fd(t=Ts(t,"x","norm"),e,n);let s=i.shape;if(r){const e=vt(n,t.shape);s=kc(i.shape,e)}return hu(i,s)}}),gd=Cs({movingAverage_:function(t,e,n,r,i=!0){const s=Ts(t,"v","movingAverage"),a=Ts(e,"x","movingAverage"),o=Ts(n,"decay","movingAverage");os(s,a),st(ht(s.shape,a.shape),()=>"Shape mismatch in v and x");const l=Ml(1),u=kl(l,o);let c=pl(kl(a,s),u);if(i){st(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Ts(r,"step","movingAverage");c=dl(c,kl(l,Il(o,t)))}return cl(s,c)}}),yd=Cs({scatterND_:function(t,e,n){const r=Ts(t,"indices","scatterND","int32"),i=Ts(e,"updates","scatterND");lo(i,r,n);const s={indices:r,updates:i},a={shape:n};return ms.runKernel(gr,s,a)}}),xd=Cs({sparseToDense_:function(t,e,n,r=0){const i=Ts(t,"sparseIndices","sparseToDense","int32"),s=Ts(e,"sparseValues","sparseToDense"),a=Ts(r,"defaultValue","sparseToDense",s.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const i=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const a=e.size;if(0!==e.rank&&(1!==e.rank||a!==i))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${i}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,s,n,a);const o={sparseIndices:i,sparseValues:s,defaultValue:a},l={outputShape:n};return ms.runKernel(Dr,o,l)}}),vd=Cs({gatherND_:function(t,e){const n=Ts(e,"indices","gatherND","int32"),r={params:Ts(t,"x","gatherND","string_or_numeric"),indices:n};return ms.runKernel(un,r)}}),bd=Cs({dropout_:function(t,e,n,r){const i=Ts(t,"x","dropout");if(st("float32"===i.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),st(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Yi?i.clone():i;const s=function(t,e){if(null==e)return t.shape.slice();if(ht(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(i,n),a=1-e,o=dl(ac(cl(vh(s,0,1,"float32",r),a)),a);return pl(i,o)}});function wd(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function _d(t,e,n){const r=1-t%2,i=new Float32Array(t);for(let s=0;s<t;++s){const a=2*Math.PI*s/(t+r-1);i[s]=e-n*Math.cos(a)}return td(i,"float32")}const Sd=async function(t,e,n=1){const r=Ts(t,"predictions","inTopK"),i=Ts(e,"targets","inTopK");st(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),st(r.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${i.rank}`),at(r.shape.slice(0,r.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];st(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const a=await r.data(),o=await i.data(),[l,u]=[a.length/s,s],c=wt("bool",l);for(let h=0;h<l;h++){const t=h*u,e=a.subarray(t,t+u),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),c[h]=0;for(let i=0;i<n;i++)if(r[i].index===o[h]){c[h]=1;break}}return t!==r&&r.dispose(),e!==i&&i.dispose(),Rs(c,i.shape,"bool")},Md=Cs({conv2DBackpropFilter_:function(t,e,n,r,i,s="NHWC",a){let o=t;3===t.rank&&(o=hu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=hu(e,[1,e.shape[0],e.shape[1],e.shape[2]])),st(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),st(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),st(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];st(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),st(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),cu("conv2dDerFilter",i,a);const h={x:o,dy:l},d={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,filterShape:n};return ms.runKernel(Ce,h,d)}});function Td(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return pl(t,Jh(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ed(t,e){let n=e;const r=Za(t.shape,e.shape);return r.length>0&&(n=Tc(n,r)),hu(n,t.shape)}function Ad(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Sh(t);if("elu"===e)return Qu(t);if("relu6"===e)return Mh(t);if("prelu"===e)return ch(t,n);if("leakyrelu"===e)return fc(t,r);if("sigmoid"===e)return mu(t);throw new Error(`Unknown fused activation ${e}.`)}const Cd=(t,e)=>!(t>0)||"linear"===e,Id=Cs({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Cd(ms.state.gradientDepth,l)){let h=Lu(t,e,n,r,i,s,a);return null!=o&&(h=cl(h,o)),Ad(h,l,u,c)}const h=Ts(t,"x","conv2d","float32"),d=Ts(e,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=hu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),st(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),st(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),cu("fused conv2d",r,a),st(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),st(lu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),st("NHWC"===i,()=>`Error in conv2d: got dataFormat of ${i} but only NHWC is currently supported.`);const m=tu(p.shape,d.shape,n,s,r,a);let g,y;null!=o&&(g=Ts(o,"bias","fused conv2d"),[g]=as(g,h),Qa(m.outShape,g.shape)),null!=u&&(y=Ts(u,"prelu weights","fused conv2d"));const x=(t,e)=>{const[i,a,o,u]=e,c=Td(t,o,l);st(ou(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const h=[Pu(a.shape,c,i,n,r),Md(a,c,i.shape,n,r)];if(null!=u){const t=Ed(u,c);h.push(t)}return h},v={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==o?_l((t,e,n)=>{let r=ms.runKernel(ni,v,b);return n([e,t,r]),f&&(r=hu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(p,d):_l((t,e,n,r)=>{let i=ms.runKernel(ni,v,b);return r([e,t,i,n]),f&&(i=hu(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:x}})(p,d,g)}}),kd=Cs({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,i,s=[1,1],a){let o=t;3===t.rank&&(o=hu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=hu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,filterShape:n};return ms.runKernel(Ue,u,c)}}),Rd=Cs({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,i,s=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=hu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,inputShape:t},h=ms.runKernel($e,u,c);return l?hu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Nd=Cs({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Cd(ms.state.gradientDepth,l)){let h=Wu(t,e,n,r,i,s,a);return null!=o&&(h=cl(h,o)),Ad(h,l,u,c)}const h=Ts(t,"x","depthwiseConv2d","float32"),d=Ts(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=hu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),st(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),st(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),st(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==s&&(s=[1,1]),st(lu(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),cu("fused depthwiseConv2d",r,a);const m=tu(p.shape,d.shape,n,s,r,a,!0);let g,y;null!=o&&(g=Ts(o,"bias","fused conv2d"),[g]=as(g,h),Qa(m.outShape,g.shape)),null!=u&&(y=Ts(u,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{st(ou(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[i,o,u,c]=e,h=Td(t,u,l),d=Rd(o.shape,h,i,n,r,s,a),p=kd(o,h,i.shape,n,r,s,a);return null!=c?[d,p,Ed(g,h)]:[d,p]},v={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==o?_l((t,e,n)=>{let r=ms.runKernel(ri,v,b);return n([e,t,r]),f&&(r=hu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(p,d):_l((t,e,n,r)=>{let i=ms.runKernel(ri,v,b);return r([e,t,i,n]),f&&(i=hu(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:x}})(p,d,g)}}),Ld=Cs({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===Cd(ms.state.gradientDepth,s)){let l=ja(t,e,n,r);return null!=i&&(l=cl(l,i)),Ad(l,s,a,o)}let l=Ts(t,"a","fused matMul"),u=Ts(e,"b","fused matMul");[l,u]=as(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ut(f),y=ut(m);st(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=Qa(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),v=hu(l,n?[g,c,d]:[g,d,c]),b=hu(u,r?[y,p,h]:[y,h,p]);let w,_;null!=i&&(w=Ts(i,"bias","fused matMul"),[w]=as(w,l),Qa(x,w.shape)),null!=a&&(_=Ts(a,"prelu weights","fused matMul"));const S=(t,e)=>{const[a,o,l,u]=e,c=Td(hu(t,l.shape),l,s);let h,d;return n||r?!n&&r?(h=ja(c,o,!1,!1),d=ja(c,a,!0,!1)):n&&!r?(h=ja(o,c,!1,!0),d=ja(a,c,!1,!1)):(h=ja(o,c,!0,!0),d=ja(c,a,!0,!0)):(h=ja(c,o,!1,!0),d=ja(a,c,!0,!1)),null!=i?[h,d,Ed(u,c)]:[h,d]},M={a:v,b:b,bias:w,preluActivationWeights:_},T={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==i?_l((t,e,n)=>{const r=ms.runKernel(ei,M,T);return n([t,e,r]),{value:hu(r,x),gradFunc:S}})(v,b):_l((t,e,n,r)=>{const i=ms.runKernel(ei,M,T);return r([t,e,i,n]),{value:hu(i,x),gradFunc:S}})(v,b,w)}}),Dd=Cs({hammingWindow_:function(t){return _d(t,.54,.46)}}),Pd=Cs({hannWindow_:function(t){return _d(t,.5,.5)}}),Od=Cs({frame_:function(t,e,n,r=!1,i=0){let s=0;const a=[];for(;s+e<=t.size;)a.push(gu(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=fu([gu(t,s,e-r),Al([r],i)]);a.push(o),s+=n}return 0===a.length?ed([],[0,e]):hu(fu(a),[a.length,e])}}),Fd=Cs({stft_:function(t,e,n,r,i=Pd){null==r&&(r=wd(e));const s=Od(t,e,n),a=pl(s,i(e));return jh(a,r)}}),zd=Cs({cropAndResize_:function(t,e,n,r,i="bilinear",s=0){const a=Ts(t,"image","cropAndResize"),o=Ts(e,"boxes","cropAndResize","float32"),l=Ts(n,"boxInd","cropAndResize","int32"),u=o.shape[0];st(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),st(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),st(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),st(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),st(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),st("bilinear"===i||"nearest"===i,()=>"method must be bilinear or nearest, but was "+i);const c={image:a,boxes:o,boxInd:l},h={method:i,extrapolationValue:s,cropSize:r};return ms.runKernel(Oe,c,h)}}),Bd=Cs({flipLeftRight_:function(t){const e=Ts(t,"image","flipLeftRight","float32");st(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return ms.runKernel(rn,n,{})}}),Ud=Cs({grayscaleToRGB_:function(t){const e=Ts(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];st(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),st(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const i=new Array(e.rank);return i.fill(1,0,n),i[n]=3,ic(e,i)}}),$d=Cs({rotateWithOffset_:function(t,e,n=0,r=.5){const i=Ts(t,"image","rotateWithOffset","float32");st(4===i.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const s={image:i},a={radians:e,fillValue:n,center:r};return ms.runKernel(ti,s,a)}});function qd(t,e,n,r,i,s){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=t.shape[0];return n=Math.min(n,a),st(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),st(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),st(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),st(1===e.rank,()=>"scores must be a 1D tensor"),st(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),st(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:s}}const Vd=Cs({nonMaxSuppression_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=Ts(t,"boxes","nonMaxSuppression","float32"),a=Ts(e,"scores","nonMaxSuppression","float32"),o=qd(s,a,n,r,i),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return ms.runKernel(Gn,{boxes:s,scores:a},l)}});function Hd(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,i=t.length,s=0,a=!1;for(;r<i;){s=r+(i-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(i=s,a=!o)}return a?r:-r-1}(t,e,n||Wd)}(t,e,n),i=r<0?-(r+1):r;t.splice(i,0,e)}function Wd(t,e){return t>e?1:t<e?-1:0}function Gd(t,e,n,r,i){return Yd(t,e,n,r,i,0)}function jd(t,e,n,r,i,s){return Yd(t,e,n,r,i,0,!1,s,!0)}function Xd(t,e,n,r,i,s){return Yd(t,e,n,r,i,s,!0)}function Yd(t,e,n,r,i,s,a=!1,o=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>i&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(Zd);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=e;if(n<i)break;let o=!1;for(let l=h.length-1;l>=a;--l){const n=Kd(t,s,h[l]);if(n>=r){o=!0;break}if(e.score=e.score*Jd(r,c,n),e.score<=i)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(s),d.push(e.score)):e.score>i&&Hd(u,e,Zd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Kd(t,e,n){const r=t.subarray(4*e,4*e+4),i=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(o-s)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(a,c),y=Math.min(o,h),x=Math.min(l,d),v=Math.max(y-m,0)*Math.max(x-g,0);return v/(p+f-v)}function Jd(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Zd(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Qd=Cs({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=Ts(t,"boxes","nonMaxSuppression"),o=Ts(e,"scores","nonMaxSuppression"),l=qd(a,o,n,r,i,s),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:i=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=ms.runKernel(Xn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),tp=Cs({nonMaxSuppressionPadded_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=Ts(t,"boxes","nonMaxSuppression"),o=Ts(e,"scores","nonMaxSuppression"),l=qd(a,o,n,r,i,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=ms.runKernel(jn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),ep=Cs({resizeBilinear_:function(t,e,n=!1,r=!1){const i=Ts(t,"images","resizeBilinear");st(3===i.rank||4===i.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),st(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),st(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;3===i.rank&&(a=!0,s=hu(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=ms.runKernel(cr,o,l);return a?hu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),np=Cs({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const i=Ts(t,"images","resizeNearestNeighbor");st(3===i.rank||4===i.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),st(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),st("float32"===i.dtype||"int32"===i.dtype,()=>"`images` must have `int32` or `float32` as dtype"),st(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;3===i.rank&&(a=!0,s=hu(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=ms.runKernel(lr,o,l);return a?hu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),rp=Cs({threshold_:function(t,e="binary",n=!1,r=.5){const i=Ts(t,"image","threshold"),s=i.shape[0]*i.shape[1];let a,o,l,u,c=pl(td([r]),255);if(st(3===i.rank,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),st(3===i.shape[2]||1===i.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),st("int32"===i.dtype||"float32"===i.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),st("otsu"===e||"binary"===e,()=>"Method must be binary or otsu, but was "+e),3===i.shape[2]){[a,o,l]=Gh(i,[1,1,1],-1);const t=pl(a,.2989),e=pl(o,.587),n=pl(l,.114);u=cl(cl(t,e),n)}else u=t;"otsu"===e&&(c=function(t,e){let n,r,i,s,a,o,l=td([-1]),u=td([0]),c=td([0]);for(let h=0;h<t.size-1;h++){n=gu(t,0,h+1),r=gu(t,h+1),a=dl(Tc(n),e),o=dl(Tc(r),e);const d=Tc(pl(n,bh(0,n.size)));i=dl(d,Tc(n));const p=Al(r.shape,n.size),f=cl(bh(0,r.size),p),m=pl(r,f);s=dl(Tc(m),Tc(r));const g=kl(i,s),y=kl(i,s),x=pl(a,o);c=pl(pl(x,g),y);const v=lc(c,u);u=Yu(v,c,u),l=Yu(v,td([h]),l)}return l}(Mu(Aa(kh(u),"int32"),Rs([]),256),s));const h=n?gc(u,c):lc(u,c);return Aa(pl(h,255),"int32")}}),ip=Cs({transform_:function(t,e,n="nearest",r="constant",i=0,s){const a=Ts(t,"image","transform","float32"),o=Ts(e,"transforms","transform","float32");st(4===a.rank,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),st(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),st(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:i,outputShape:s};return ms.runKernel(Gr,l,u)}}),sp=Cs({bandPart_:function(t,e,n){st(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),st(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Ts(t,"a","bandPart");st(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const i=r.shape,[s,a]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),n<0&&(n=a);const o=hu(bh(0,s,1,"int32"),[-1,1]),l=bh(0,a,1,"int32"),u=kl(o,l),c=Oc(gc(u,Ml(+e,"int32")),uc(u,Ml(-n,"int32"))),h=Hc([s,a],r.dtype);return hu(Kh(ud(hu(r,[-1,s,a])).map(t=>Yu(c,t,h))),i)}}),ap=Cs({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,st(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)st(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Gh(t,t.shape[0],0).map(t=>Yh(t,[0]));st(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let i=0;i<t.length;++i)n.push(ms.tidy(()=>{let t=r[i];if(i>0)for(let e=0;e<i;++e){const r=pl(Tc(pl(n[e],t)),n[e]);t=kl(t,r)}return dl(t,md(t,"euclidean"))}));return e?Kh(n,0):n}});function op(t,e=!1){return ms.tidy(()=>{st(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let i=sc(n),s=Ca(t);const a=ed([[1]],[1,1]);let o=Ca(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=s,l=o,u=i;[o,s,i]=ms.tidy(()=>{const e=gu(s,[t,t],[n-t,1]),l=md(e),u=gu(s,[t,t],[1,1]),c=Yu(lc(u,0),ed([[-1]]),ed([[1]])),h=kl(u,pl(c,l)),d=dl(e,h);o=1===d.shape[0]?Ca(a):fu([a,gu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=wc(dl(ja(c,h),l)),f=gu(s,[t,0],[n-t,r]),m=pl(p,o),g=Ya(o);if(0===t)s=kl(f,ja(m,ja(g,f)));else{const e=kl(f,ja(m,ja(g,f)));s=fu([gu(s,[0,0],[t,r]),e],0)}const y=Ya(m),x=gu(i,[0,t],[n,i.shape[1]-t]);if(0===t)i=kl(x,ja(ja(x,o),y));else{const e=kl(x,ja(ja(x,o),y));i=fu([gu(i,[0,0],[n,t]),e],1)}return[o,s,i]}),Zo([e,l,u])}return!e&&n>r&&(i=gu(i,[0,0],[n,r]),s=gu(s,[0,0],[r,r])),[i,s]})}const lp=Cs({qr_:function(t,e=!1){if(st(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return op(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=ud(hu(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),i=[],s=[];return r.forEach(t=>{const[n,r]=op(t,e);i.push(n),s.push(r)}),[hu(Kh(i,0),t.shape),hu(Kh(s,0),t.shape)]}}});var up;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(up||(up={}));const cp=Cs({computeWeightedLoss_:function(t,e,n=up.SUM_BY_NONZERO_WEIGHTS){const r=Ts(t,"losses","computeWeightedLoss");let i=null;null!=e&&(i=Ts(e,"weights","computeWeightedLoss"));const s=null==i?r:pl(r,i);if(n===up.NONE)return s;if(n===up.SUM)return Tc(s);if(n===up.MEAN){if(null==i)return Vc(s);{const t=r.size/i.size,e=dl(Tc(s),Tc(i));return t>1?dl(e,Ml(t)):e}}if(n===up.SUM_BY_NONZERO_WEIGHTS){if(null==i)return dl(Tc(s),Ml(r.size));{const t=pl(i,Wc(r.shape)),e=Aa(Tc(th(t,Ml(0))),"float32");return dl(Tc(s),e)}}throw Error("Unknown reduction: "+n)}}),hp=Cs({absoluteDifference_:function(t,e,n,r=up.SUM_BY_NONZERO_WEIGHTS){const i=Ts(t,"labels","absoluteDifference"),s=Ts(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=Ts(n,"weights","absoluteDifference")),at(i.shape,s.shape,"Error in absoluteDifference: ");const o=Nl(kl(i,s));return cp(o,a,r)}}),dp=Cs({cosineDistance_:function(t,e,n,r,i=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(t,"labels","cosineDistance"),a=Ts(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Ts(r,"weights","cosineDistance")),at(s.shape,a.shape,"Error in cosineDistance: ");const l=Ml(1),u=kl(l,Tc(pl(s,a),n,!0));return cp(u,o,i)}}),pp=Cs({hingeLoss_:function(t,e,n,r=up.SUM_BY_NONZERO_WEIGHTS){let i=Ts(t,"labels","hingeLoss");const s=Ts(e,"predictions","hingeLoss");let a=null;null!=n&&(a=Ts(n,"weights","hingeLoss")),at(i.shape,s.shape,"Error in hingeLoss: ");const o=Ml(1);i=kl(pl(Ml(2),i),o);const l=Sh(kl(o,pl(i,s)));return cp(l,a,r)}}),fp=Cs({huberLoss_:function(t,e,n,r=1,i=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(t,"labels","huberLoss"),a=Ts(e,"predictions","huberLoss");let o=null;null!=n&&(o=Ts(n,"weights","huberLoss")),at(s.shape,a.shape,"Error in huberLoss: ");const l=Ml(r),u=Nl(kl(a,s)),c=Xc(u,l),h=kl(u,c),d=cl(pl(Ml(.5),ml(c)),pl(l,h));return cp(d,o,i)}}),mp=Cs({logLoss_:function(t,e,n,r=1e-7,i=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(t,"labels","logLoss"),a=Ts(e,"predictions","logLoss");let o=null;null!=n&&(o=Ts(n,"weights","logLoss")),at(s.shape,a.shape,"Error in logLoss: ");const l=Ml(1),u=Ml(r),c=wc(pl(s,vc(cl(a,u)))),h=pl(kl(l,s),vc(cl(kl(l,a),u))),d=kl(c,h);return cp(d,o,i)}}),gp=Cs({meanSquaredError_:function(t,e,n,r=up.SUM_BY_NONZERO_WEIGHTS){const i=Ts(t,"labels","meanSquaredError"),s=Ts(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=Ts(n,"weights","meanSquaredError")),at(i.shape,s.shape,"Error in meanSquaredError: ");const o=Xh(i,s);return cp(o,a,r)}}),yp=Cs({sigmoidCrossEntropy_:function(t,e,n,r=0,i=up.SUM_BY_NONZERO_WEIGHTS){let s=Ts(t,"multiClassLabels","sigmoidCrossEntropy");const a=Ts(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ts(n,"weights","sigmoidCrossEntropy")),at(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Ml(r),e=Ml(1),n=Ml(.5);s=cl(pl(s,kl(e,t)),pl(n,t))}const l=function(t,e){const n=Ts(t,"labels","sigmoidCrossEntropyWithLogits"),r=Ts(e,"logits","sigmoidCrossEntropyWithLogits");at(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Sh(r),s=pl(r,n),a=bc(ec(wc(Nl(r))));return cl(kl(i,s),a)}(s,a);return cp(l,o,i)}}),xp=Cs({softmaxCrossEntropy_:function(t,e,n,r=0,i=up.SUM_BY_NONZERO_WEIGHTS){let s=Ts(t,"onehotLabels","softmaxCrossEntropy");const a=Ts(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ts(n,"weights","softmaxCrossEntropy")),at(s.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Ml(r),e=Ml(1),n=Ml(s.shape[1]);s=cl(pl(s,kl(e,t)),dl(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return _l((t,e,r)=>{const i=Pc(e,[n],!0),s=kl(Aa(e,"float32"),i);r([t,s]);const a=wc(pl(s,t));return{value:Tc(a,[n]),gradFunc:(t,e)=>{const[r,i]=e,s=kc(t.shape,[n]);return[pl(hu(t,s),kl(Aa(r,"float32"),ec(i))),pl(hu(t,s),kl(ec(i),Aa(r,"float32")))]}}})(t,e)}(s,a);return cp(l,o,i)}}),vp=Cs({sparseFillEmptyRows_:function(t,e,n,r){const i=Ts(t,"indices","sparseFillEmptyRows","int32"),s=Ts(e,"values","sparseFillEmptyRows"),a=Ts(n,"denseShape","sparseFillEmptyRows","int32"),o=Ts(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==i.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+i.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==a.rank)throw new Error("Dense shape should be Tensor1D but received shape "+a.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);const l={indices:i,values:s,denseShape:a,defaultValue:o},u=ms.runKernel(kr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),bp=Cs({sparseReshape_:function(t,e,n){const r=Ts(t,"inputIndices","sparseReshape","int32"),i=Ts(e,"inputShape","sparseReshape","int32"),s=Ts(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==i.rank)throw new Error("Input shape should be Tensor1D but received shape "+i.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const a={inputIndices:r,inputShape:i,newShape:s},o=ms.runKernel(Rr,a);return{outputIndices:o[0],outputShape:o[1]}}}),wp=Cs({sparseSegmentMean_:function(t,e,n){const r=Ts(t,"data","sparseSegmentMean"),i=Ts(e,"indices","sparseSegmentMean","int32"),s=Ts(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+i.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);const a={data:r,indices:i,segmentIds:s};return ms.runKernel(Nr,a)}}),_p=Cs({sparseSegmentSum_:function(t,e,n){const r=Ts(t,"data","sparseSegmentSum"),i=Ts(e,"indices","sparseSegmentSum","int32"),s=Ts(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+i.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);const a={data:r,indices:i,segmentIds:s};return ms.runKernel(Lr,a)}}),Sp=Cs({stringNGrams_:function(t,e,n,r,i,s,a,o){const l=Ts(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);const u=Ts(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:i,rightPad:s,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=ms.runKernel(zr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Mp=Cs({stringSplit_:function(t,e,n=!0){const r=Ts(t,"input","stringSplit","string"),i=Ts(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==i.rank)throw new Error("Delimiter should be a scalar but received shape "+i.shape);const s={skipEmpty:n},a={input:r,delimiter:i},o=ms.runKernel(Br,a,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Tp=Cs({stringToHashBucketFast_:function(t,e){const n=Ts(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const i={input:n};return ms.runKernel(Ur,i,r)}}),Ep={fft:Vh,ifft:Hh,rfft:jh,irfft:Wh},Ap={hammingWindow:Dd,hannWindow:Pd,frame:Od,stft:Fd},Cp={flipLeftRight:Bd,grayscaleToRGB:Ud,resizeNearestNeighbor:np,resizeBilinear:ep,rotateWithOffset:$d,cropAndResize:zd,nonMaxSuppression:Vd,nonMaxSuppressionAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=Ts(t,"boxes","nonMaxSuppressionAsync"),a=Ts(e,"scores","nonMaxSuppressionAsync"),o=qd(s,a,n,r,i);n=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Gd(u,c,n,r,i);return s!==t&&s.dispose(),a!==e&&a.dispose(),td(h,"int32")},nonMaxSuppressionWithScore:Qd,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=Ts(t,"boxes","nonMaxSuppressionAsync"),o=Ts(e,"scores","nonMaxSuppressionAsync"),l=qd(a,o,n,r,i,s);n=l.maxOutputSize,r=l.iouThreshold,i=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Xd(c,h,n,r,i,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:td(d,"int32"),selectedScores:td(p)}},nonMaxSuppressionPadded:tp,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=Ts(t,"boxes","nonMaxSuppressionAsync"),o=Ts(e,"scores","nonMaxSuppressionAsync"),l=qd(a,o,n,r,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=jd(d,p,u,c,h,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:td(f,"int32"),validOutputs:Ml(m,"int32")}},threshold:rp,transform:ip},Ip={bandPart:sp,gramSchmidt:ap,qr:lp},kp={absoluteDifference:hp,computeWeightedLoss:cp,cosineDistance:dp,hingeLoss:pp,huberLoss:fp,logLoss:mp,meanSquaredError:gp,sigmoidCrossEntropy:yp,softmaxCrossEntropy:xp},Rp={sparseFillEmptyRows:vp,sparseReshape:bp,sparseSegmentMean:wp,sparseSegmentSum:_p},Np={stringNGrams:Sp,stringSplit:Mp,stringToHashBucketFast:Tp},Lp={sgd:zl.sgd,momentum:zl.momentum,adadelta:zl.adadelta,adagrad:zl.adagrad,rmsprop:zl.rmsprop,adamax:zl.adamax,adam:zl.adam},Dp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Pp(){return new Promise(t=>Dp(()=>t()))}function Op(t,e){const n=t[0].length;t.forEach((t,e)=>{st(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),st(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,i)=>{for(let s=0;s<n;s++)st(s===e||t[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${i}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function Fp(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const zp=30;function Bp(t){return t<=zp?t:Dt(t,Math.floor(Math.sqrt(t)))}function Up(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function $p(t,e,n,r=!0){let i=[];if(r)i=i.concat(e.slice(0)),i.push(t[0]/n),i=i.concat(t.slice(1));else{i=i.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)i=i.concat([t[r+1]/e[r],e[r]]);i=i.concat(t.slice(n+1))}return i}function qp(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function Vp(t,e,n,r=!0){const i=[];r?i.push(t[0]/n):i.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?r?i.push(e[s-1]*t[s]):i.push(t[s]/e[s-1]):i.push(t[s]);return i}function Hp(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Wp(t,e,n){const r=t.slice(0,1);for(let i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}const Gp=1.7580993408473768,jp=1.0507009873554805,Xp=.3275911,Yp=.254829592,Kp=-.284496736,Jp=1.421413741,Zp=-1.453152027,Qp=1.061405429;function tf(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function ef(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function nf(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let i=0;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}function rf(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let i=2;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}function sf(t,e){return{real:t[2*e],imag:t[2*e+1]}}function af(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function of(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let i=0;i<Math.ceil(t/2);i++){const s=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(s),r[i]=Math.sin(s)}return{real:n,imag:r}}function lf(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const uf=/->/g;function cf(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(uf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,i]=t.split("->");st(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<i.length;++h){const t=i[h];if(!s.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let h=0;h<r.length;++h){const t=r[h];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(s.length);for(let h=0;h<a;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let t=0;t<s[h].length;++t)l[h].push(o.indexOf(s[h][t]))}const u=o.length,c=[];for(let h=i.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function hf(t,e){let n=new Array(t);n.fill(-1);for(let i=0;i<e.length;++i)n[e[i]]=i;const r=[];for(let i=0;i<t;++i)-1===n[i]&&r.push(i);return n=n.filter(t=>-1!==t),{permutationIndices:n,expandDims:r}}function df(t,e,n){const r=new Array(t);for(let i=0;i<n.length;++i){const t=n[i].shape;for(let n=0;n<e[i].length;++n)void 0===r[e[i][n]]?r[e[i][n]]=t[n]:st(r[e[i][n]]===t[n],()=>`Expected dimension ${r[e[i][n]]} at axis ${n} of input shaped ${JSON.stringify(t)}, but got dimension ${t[n]}`)}}function pf(t,e){const n=t,r=[];let i=0;0===t.length&&n.push(-1),i=t.length+1;for(let a=0;a<i;++a)r.push([]);const s=[];for(let a=0;a<n.length;++a){const t=mf(e,n[a]);for(const e of t)-1===s.indexOf(e)&&(r[a].push(e),s.push(e))}return{path:n,steps:r}}function ff(t){return t.every((t,e)=>t===e)}function mf(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function gf(t,e,n=0){let r=[];if("number"==typeof e)st(t.shape[n]%e==0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{st(e.reduce((t,e)=>(-1===e&&(t+=1),t),0)<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(-1!==i){const r=e.reduce((t,e)=>e>0?t+e:t);e[i]=t.shape[n]-r}st(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function yf(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = "+t}function xf(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function vf(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function bf(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function wf(t,e){return`size ${t} must be non-negative, not ${e}`}function _f(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Sf(t,e){return`Input to reshape is a SparseTensor with ${ut(t)}\n  dense values, but the requested shape requires a multiple of ${ut(e)}. inputShape=${t} outputShape= ${e}`}function Mf(t,e){return`Input to reshape is a tensor with ${ut(t)} dense values, but the requested shape has ${ut(e)}. inputShape=${t} outputShape=${e}`}function Tf(){return"segment ids must be >= 0"}function Ef(){return"segment ids are not increasing"}function Af(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function Cf(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function If(t,e){let n,r=!1;for(t<=zp?(n=t,r=!0):n=Dt(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Dt(t,n+1);return n}function kf(t,e,n){const r=[],i=t.length;for(let s=0;s<i;s++)s!==e?r.push(t[s]):r.push(n);return r}function Rf(t,e,n,r){const i=e.shape.length,s=t.shape.length;if(0!==r&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(t.shape[h]),l*=t.shape[h];for(let h=r;h<n;h++)o.push(t.shape[h]),u*=t.shape[h];for(let h=r;h<i;h++)o.push(e.shape[h]);for(let h=n+1;h<s;h++)o.push(t.shape[h]),c*=t.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Nf(t){try{return t.map(t=>Oi(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+t)}}function Lf(t){return t.map(t=>Pi(t))}const Df={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,Jh(Aa(n,"float32"),-1))}}},Pf={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ml(Aa(n,"float32")),r=fl(kl(Ml(1),e));return wc(dl(t,r))}}}},Of={kernelName:te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=fl(kl(ml(Aa(n,"float32")),1));return dl(t,e)}}}},Ff={kernelName:ee,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{let e=t;const r=Za(n.shape,i);return r.length>0&&(e=Tc(e,r)),hu(e,n.shape)},b:()=>{let e=t;const n=Za(r.shape,i);return n.length>0&&(e=Tc(e,n)),hu(e,r.shape)}}}},zf={kernelName:ne,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},Bf={kernelName:se,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>gl(n)}}},Uf={kernelName:ae,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>gl(n)}}},$f={kernelName:oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,fl(kl(Ml(1),ml(Aa(n,"float32")))))}}},qf={kernelName:le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=fl(cl(Ml(1),ml(Aa(n,"float32"))));return dl(t,e)}}}},Vf={kernelName:he,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{const e=cl(ml(n),ml(r));let s=pl(t,dl(r,e));const a=Za(n.shape,i);return a.length>0&&(s=Tc(s,a)),hu(s,n.shape)},b:()=>{const e=cl(ml(n),ml(r));let s=wc(pl(t,dl(n,e)));const a=Za(r.shape,i);return a.length>0&&(s=Tc(s,a)),hu(s,r.shape)}}}},Hf={kernelName:ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,cl(ml(Aa(n,"float32")),1))}}},Wf={kernelName:ce,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,kl(Ml(1),ml(Aa(n,"float32"))))}}},Gf=Cs({avgPool3dGrad_:function(t,e,n,r,i,s){const a=Ts(t,"dy","avgPool3dGrad"),o=Ts(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=hu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=hu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),st(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),st(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),cu("avgPool3dGrad",i,s);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:i,dimRoundingMode:s},p=ms.runKernel(me,h,d);return c?hu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),jf={kernelName:fe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a,dimRoundingMode:o}=n;return{x:()=>Gf(t,r,i,s,a,o)}}},Xf=Cs({avgPoolGrad_:function(t,e,n,r,i){const s=Ts(t,"dy","avgPoolGrad"),a=Ts(e,"input","avgPoolGrad");st(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let o=a,l=s,u=!1;3===a.rank&&(u=!0,o=hu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=hu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),st(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),st(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:n,strides:r,pad:i},d=ms.runKernel(pe,c,h);return u?hu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Yf={kernelName:de,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a}=n;return{x:()=>Xf(t,r,i,s,a)}}},Kf={kernelName:ge,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,i]=e,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>ja(t,i,!1,!1),b:()=>ja(t,r,!0,!1)}:s&&!a?{a:()=>ja(i,t,!1,!0),b:()=>ja(r,t,!1,!1)}:{a:()=>ja(i,t,!0,!0),b:()=>ja(t,r,!0,!0)}:{a:()=>ja(t,i,!1,!0),b:()=>ja(r,t,!0,!1)}}},Jf={kernelName:ye,gradFunc:(t,e,n)=>{const{blockShape:r,crops:i}=n;return{x:()=>lh(t,r,i)}}},Zf={kernelName:ve,gradFunc:(t,e,n)=>{const r=n,i=r.inputShape,s=r.shape,a=Array.from(s);for(let l=i.length-1;l>=0;l--)if(i[l]===s[l])a[l]=1;else if(1!==i[l])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${s}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Tc(t,o,!0)}}},Qf={kernelName:we,gradFunc:t=>({x:()=>t.clone()})},tm={kernelName:_e,gradFunc:t=>({x:()=>gl(t)})},em={kernelName:Se,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:i,clipValueMax:s}=n;return{x:()=>Yu(Oc(uc(r,i),gc(r,s)),t,gl(t))}}},nm={kernelName:Te,inputsToSave:["x"],gradFunc:Df.gradFunc},rm={kernelName:Ee,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:i}=n,s=vt(i,e[0].shape)[0],a=r.map(t=>t[s]);return Gh(t,a,s).map(t=>()=>t)}},im={kernelName:Ae,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{dilations:s,strides:a,pad:o,dataFormat:l}=n;return st(ou(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Pu(r.shape,t,i,a,o,l),filter:()=>Md(r,t,i.shape,a,o,l)}}},sm={kernelName:Ie,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{strides:s,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Lu(t,i,s,a,o,1,l),filter:()=>Md(t,r,i.shape,s,a,o,l)}}},am=Cs({conv3DBackpropFilter_:function(t,e,n,r,i){let s=t;4===t.rank&&(s=hu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=hu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),st(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),st(5===a.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),st(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),st(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),st(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:a},l={strides:r,pad:i,filterShape:n};return ms.runKernel(Re,o,l)}}),om={kernelName:ke,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s}=n;st(ou(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=e;return{x:()=>zu(a.shape,t,o,i,s),filter:()=>am(a,t,o.shape,i,s)}}},lm={kernelName:Le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(wc(Oh(Aa(n,"float32"))),t)}}},um={kernelName:De,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(Fh(Aa(n,"float32")),t)}}},cm={kernelName:Pe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i,exclusive:s,reverse:a}=n;return{x:()=>{const e=Nc([i],r.rank);let n=qu(t,i,s,!a);return null!=e&&(n=Ya(n,e)),n}}}},hm={kernelName:Be,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s,dimRoundingMode:a}=n,o=null==r?[1,1]:r;st(ou(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return st(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),st(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),st(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),st(lu(i,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${o}'.`),cu("depthwiseConv2d",s,a),{x:()=>Rd(l.shape,t,u,i,s,o,a),filter:()=>kd(l,t,u.shape,i,s,o,a)}}},dm={kernelName:Ve,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,s={x:r,filter:i,dy:t},a={x:r,filter:i,dy:t};return{x:()=>ms.runKernel(He,s,n),filter:()=>ms.runKernel(We,a,n)}}},pm={kernelName:Xe,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>ms.runKernel(Ye,r)}}},fm={kernelName:Ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=pl(ec(wc(ml(n))),2/Math.sqrt(Math.PI));return{x:()=>pl(t,r)}}},mm={kernelName:Ze,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,n)}}},gm={kernelName:Qe,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>hu(t,n.shape)}}},ym={kernelName:tn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,ec(n))}}},xm={kernelName:sn,gradFunc:t=>({x:()=>gl(t)})},vm={kernelName:an,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{const e=dl(t,Aa(r,"float32")),s=Za(n.shape,i);return s.length>0?hu(Tc(e,s),n.shape):e},b:()=>{let e=pl(t,Aa(n,"float32"));const s=Za(r.shape,i);s.length>0&&(e=hu(Tc(e,s),r.shape));const a=ml(r);return wc(dl(e,Aa(a,"float32")))}}}},bm={kernelName:on,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[i,s,a,o]=e,l=null==o?Ml(1):o,u=Za(s.shape,i.shape),c=[];if(1===s.rank){for(let t=0;t<i.shape.length-1;++t)c.push(i.shape[t]);c.push(1)}const h=kl(i,s),d=pl(t,l),p=Rh(cl(a,Ml(r))),f=pl(pl(pl(p,p),p),Ml(-.5));return{x:()=>1===s.rank?hu(pl(pl(t,ic(hu(p,[1,1,1,s.shape[0]]),c)),l),i.shape):hu(pl(pl(t,p),l),i.shape),mean:()=>{let t=pl(pl(p,Ml(-1)),d);return 1===s.rank&&(t=Tc(t,u)),hu(t,s.shape)},variance:()=>{let t=pl(pl(f,h),d);return 1===s.rank&&(t=Tc(t,u)),hu(t,s.shape)},scale:()=>{const e=pl(h,p);let n=pl(t,e);return 1===s.rank&&(n=Tc(n,u)),hu(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Tc(e,u)),hu(e,s.shape)}}}},wm={kernelName:ln,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,i]=e,{axis:s}=n,a=vt(s,r.shape)[0];return{x:()=>{const e=r.shape,n=i.size,o=e.slice(0,a),l=o.length,u=e.slice(s,e.length).slice(1),c=u.length,h=_m(0,l),d=_m(l+1,l+1+c),p=Sm([o,[n],u]),f=hu(t,p),m=hu(i,[n]),g=Sm([[l],h,d]),y=Ya(f,g);let x=ld(y,m,r.shape[a]);const v=Lc(g);return x=Ya(x,v),x},indices:()=>i}}};function _m(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Sm(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Mm={kernelName:hn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>gl(n),b:()=>gl(r)}}},Tm={kernelName:dn,gradFunc:t=>({x:()=>Aa(t,"float32")})},Em={kernelName:mn,gradFunc:t=>({x:()=>gl(t)})},Am={kernelName:gn,gradFunc:t=>({x:()=>gl(t)})},Cm={kernelName:yn,gradFunc:t=>({x:()=>gl(t)})},Im={kernelName:xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:i}=n,s=lc(r,0);return{x:()=>Yu(s,t,pl(t,i))}}},km={kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,cl(n,1))}}},Rm={kernelName:_n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,Aa(n,"float32"))}}},Nm={kernelName:An,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;return{logits:()=>{const e=ec(r);return kl(t,pl(Tc(t,i,!0),e))}}}},Lm=Cs({localResponseNormalizationBackprop_:function(t,e,n,r=5,i=1,s=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:i,alpha:s,beta:a};return ms.runKernel(In,o,l)}}),Dm={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{depthRadius:s,bias:a,alpha:o,beta:l}=n;return{x:()=>Lm(r,i,t,s,a,o,l)}}};function Pm(t,e,n,r){return e.rank<n.rank&&(e=hu(e,kc(e.shape,r))),t.rank<n.rank&&(t=hu(t,kc(t.shape,r))),{x:()=>pl(t,Aa(Xu(n,e),t.dtype))}}const Om={kernelName:kn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:i}=r,s=e[0],a=Pm(t,e[1],s,vt(i,s.shape));return{x:()=>a.x()}}},Fm={kernelName:Rn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>pl(t,Aa(uc(n,r),"float32")),b:()=>pl(t,Aa(mc(n,r),"float32"))}}},zm=Cs({maxPool3dGrad_:function(t,e,n,r,i,s,a){const o=Ts(t,"dy","maxPool3dGrad"),l=Ts(e,"input","maxPool3dGrad"),u=Ts(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=hu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=hu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=hu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),st(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),st(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),st(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),cu("maxPool3dGrad",s,a);const f={dy:c,input:h,output:d},m={filterSize:r,strides:i,pad:s,dimRoundingMode:a},g=ms.runKernel(Pn,f,m);return p?hu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Bm={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>zm(t,r,i,s,a,o,l)}}},Um=Cs({maxPoolGrad_:function(t,e,n,r,i,s,a){const o=Ts(t,"dy","maxPoolGrad"),l=Ts(e,"input","maxPoolGrad"),u=Ts(n,"output","maxPoolGrad");st(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),st(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),st(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),cu("maxPoolGrad",s,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:i,pad:s,dimRoundingMode:a};return ms.runKernel(Ln,c,h)}}),$m={kernelName:Zn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map(t=>t[0]);return{x:()=>gu(t,s,r.shape)}}},qm={kernelName:Ar,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:i}=n;return{x:()=>vu(t,r,i)}}},Vm={kernelName:Cr,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>fu(t,r)}}},Hm=[Df,Pf,Of,Ff,zf,Bf,Uf,$f,qf,Vf,Hf,Wf,jf,Yf,Kf,Jf,Zf,Qf,tm,em,nm,rm,sm,im,om,lm,um,cm,hm,dm,{kernelName:Ge,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{const e=dl(t,Aa(r,"float32")),s=Za(n.shape,i);return s.length>0?hu(Tc(e,s),n.shape):e},b:()=>{let e=pl(t,Aa(n,"float32"));const s=Za(r.shape,i);s.length>0&&(e=hu(Tc(e,s),r.shape));const a=ml(r);return wc(dl(e,Aa(a,"float32")))}}}},pm,fm,mm,gm,ym,vm,xm,bm,wm,Mm,Tm,Em,Am,Cm,Im,km,Rm,Nm,Dm,Om,Om,Fm,Bm,{kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o}=n;return{x:()=>Um(t,r,i,s,a,o)}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n,s=vt(i,r.shape),a=ut(Ic(r.shape,s)[1]);return{x:()=>{const e=r.shape.slice();s.forEach(t=>{e[t]=1});const n=hu(t,e);return dl(pl(n,Wc(r.shape,"float32")),a)}}}},{kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:i}=r,[s,a]=e,o=Pm(t,a,s,vt(i,s.shape));return{x:()=>o.x()}}},{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>pl(t,Aa(gc(n,r),"float32")),b:()=>pl(t,Aa(lc(n,r),"float32"))}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map(t=>t[0]);return{x:()=>gu(t,s,r.shape)}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{const e=Za(n.shape,i);return e.length>0?hu(Tc(t,e),n.shape):t},b:()=>{const e=pl(t,wc(ac(dl(n,r)))),s=Za(r.shape,i);return s.length>0?hu(Tc(e,s),r.shape):e}}}},{kernelName:Vn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{const e=pl(t,Aa(r,"float32")),s=Za(n.shape,i);return s.length>0?hu(Tc(e,s),n.shape):e},b:()=>{const e=pl(t,Aa(n,"float32")),s=Za(r.shape,i);return s.length>0?hu(Tc(e,s),r.shape):e}}}},{kernelName:Hn,gradFunc:t=>({x:()=>wc(t)})},{kernelName:Kn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Hc(n.shape,"float32")}}},{kernelName:Yn,gradFunc:t=>({x:()=>gl(t)})},{kernelName:Jn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return ud(t,r).map(t=>()=>t)}},$m,$m,{kernelName:tr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,i]=e,s=n,a=r,o=Qa(s.shape,a.shape);return{a:()=>{const e=Aa(a,"float32");let n=pl(t,pl(e,Il(s,kl(e,Ml(1)))));const r=Za(s.shape,o);return r.length>0&&(n=Tc(n,r)),hu(n,s.shape)},b:()=>{const e=lc(s,0),n=Yu(e,vc(s),gl(s));let r=pl(t,pl(i,n));const l=Za(a.shape,o);return l.length>0&&(r=Tc(r,l)),hu(r,a.shape)}}}},{kernelName:er,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,i=lc(n,0);return{x:()=>Yu(i,t,pl(t,r)),alpha:()=>{let e=Yu(i,gl(t),pl(t,n));const s=Za(r.shape,t.shape);return s.length>0&&(e=Tc(e,s)),hu(e,r.shape)}}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,wc(ml(n)))}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=pl(gc(n,6),Jh(n));return{x:()=>pl(t,Aa(r,"float32"))}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,Aa(Jh(n),"float32"))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>hu(t,n.shape)}}},{kernelName:cr,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>ms.runKernel(hr,i,n)}}},{kernelName:lr,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>ms.runKernel(ur,i,n)}}},{kernelName:pr,gradFunc:(t,e,n)=>{const{dims:r}=n,i=vt(r,t.shape);return{x:()=>Th(t,i)}}},{kernelName:fr,gradFunc:t=>({x:()=>gl(t)})},{kernelName:mr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>wc(dl(t,pl(Il(n,1.5),2)))}}},{kernelName:yr,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Aa(gl(n),"float32"),t:()=>pl(t,Aa(n,t.dtype)),e:()=>pl(t,Aa(Fc(n),t.dtype))}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=lc(n,Ml(0)),r=Ml(Gp),i=Ml(jp),s=pl(t,i),a=pl(pl(t,r),ec(Aa(n,"float32")));return Yu(e,s,a)}}}},{kernelName:Sr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,pl(n,kl(Ml(1),n)))}}},{kernelName:_r,gradFunc:t=>({x:()=>gl(t)})},{kernelName:br,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(Uu(Aa(n,"float32")),t)}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl($u(Aa(n,"float32")),t)}}},{kernelName:vr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:i,size:s}=n,a=r.shape,[o,l]=To(r,i,s),u=[];for(let c=0;c<t.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>rh(t,u)}}},{kernelName:Ir,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:i}=n,s=pl(t,r);return{logits:()=>kl(s,pl(Tc(s,[i],!0),r))}}},{kernelName:Mr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,mu(n))}}},qm,qm,Vm,Vm,{kernelName:Tr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,pl(fl(Aa(n,"float32")),2))}}},{kernelName:Pr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Ml(2);return{a:()=>pl(t,pl(i,kl(n,r))),b:()=>pl(t,pl(i,kl(r,n)))}}},{kernelName:Or,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(t,pl(Aa(n,"float32"),2))}}},{kernelName:Zr,gradFunc:t=>({x:()=>gl(t)})},{kernelName:$r,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Qa(n.shape,r.shape);return{a:()=>{let e=t;const r=Za(n.shape,i);return r.length>0&&(e=Tc(e,r)),hu(e,n.shape)},b:()=>{let e=t;const n=Za(r.shape,i);return n.length>0&&(e=Tc(e,n)),hu(wc(e),r.shape)}}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,i=r.shape.slice(),{axis:s}=n;vt(s,r.shape).forEach(t=>{i[t]=1});const a=hu(t,i),o=pl(a,Wc(r.shape,"float32"));return{x:()=>o}}},{kernelName:qr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>dl(t,ml(Uu(n)))}}},{kernelName:Vr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>pl(kl(Ml(1),ml(n)),t)}}},{kernelName:Hr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:i}=n;return{x:()=>{let e=gl(r);if(1===r.rank)for(let n=0;n<i[0];++n)e=cl(e,gu(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)e=cl(e,gu(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)e=cl(e,gu(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)for(let o=0;o<i[3];++o)e=cl(e,gu(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:jr,gradFunc:(t,e,n)=>{const r=n,{perm:i}=r,s=Lc(i);return{x:()=>Ya(t,s)}}},{kernelName:Yr,gradFunc:(t,e,n)=>{const r=n,{axis:i}=r;return{value:()=>Kh(t,i)}}},{kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Ll(e,gl(e)),r=oc(t,n);let i=uc(e,Ml(0,"int32"));const s=r.rank-i.rank;for(let o=0;o<s;++o)i=nc(i,o+1);i=Oc(i,Wc(r.shape,"bool"));const a=gl(r);return Yu(i,r,a)}(t,n)}}},{kernelName:Jr,gradFunc:t=>({x:()=>gl(t)})}];for(const t of Hm)di(t);let Wm;function Gm(){return null==Wm&&(Wm=ll().epsilon()),Wm}Ki().prototype.abs=function(){return this.throwIfDisposed(),Nl(this)},Ki().prototype.acos=function(){return this.throwIfDisposed(),Bl(this)},Ki().prototype.acosh=function(){return this.throwIfDisposed(),Ul(this)},Ki().prototype.add=function(t){return this.throwIfDisposed(),cl(this,t)},Ki().prototype.all=function(t,e){return this.throwIfDisposed(),ql(this,t,e)},Ki().prototype.any=function(t,e){return this.throwIfDisposed(),Vl(this,t,e)},Ki().prototype.argMax=function(t){return this.throwIfDisposed(),Hl(this,t)},Ki().prototype.argMin=function(t){return this.throwIfDisposed(),Wl(this,t)},Ki().prototype.asScalar=function(){return this.throwIfDisposed(),st(1===this.size,()=>"The array must have only 1 element."),hu(this,[])},Ki().prototype.asType=function(t){return this.throwIfDisposed(),Aa(this,t)},Ki().prototype.as1D=function(){return this.throwIfDisposed(),hu(this,[this.size])},Ki().prototype.as2D=function(t,e){return this.throwIfDisposed(),hu(this,[t,e])},Ki().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),hu(this,[t,e,n])},Ki().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),hu(this,[t,e,n,r])},Ki().prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),hu(this,[t,e,n,r,i])},Ki().prototype.asin=function(){return this.throwIfDisposed(),Gl(this)},Ki().prototype.asinh=function(){return this.throwIfDisposed(),jl(this)},Ki().prototype.atan=function(){return this.throwIfDisposed(),Xl(this)},Ki().prototype.atan2=function(t){return this.throwIfDisposed(),Yl(this,t)},Ki().prototype.atanh=function(){return this.throwIfDisposed(),Kl(this)},Ki().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),du(this,t,e,n,r)},Ki().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),vu(this,t,e)},Ki().prototype.batchNorm=function(t,e,n,r,i){return this.throwIfDisposed(),bu(this,t,e,n,r,i)},Ki().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Eu(this,t)},Ki().prototype.cast=function(t){return this.throwIfDisposed(),Aa(this,t)},Ki().prototype.ceil=function(){return this.throwIfDisposed(),Au(this)},Ki().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Cu(this,t,e)},Ki().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Yi&&(t=[t]),fu([this,...t],e)},Ki().prototype.conv1d=function(t,e,n,r,i,s){return this.throwIfDisposed(),Du(this,t,e,n,r,i,s)},Ki().prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),Ou(this,t,e,n,r,i)},Ki().prototype.conv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),Lu(this,t,e,n,r,i,s)},Ki().prototype.cos=function(){return this.throwIfDisposed(),Uu(this)},Ki().prototype.cosh=function(){return this.throwIfDisposed(),$u(this)},Ki().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),qu(this,t,e,n)},Ki().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Hu(this,t,e)},Ki().prototype.depthwiseConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),Wu(this,t,e,n,r,i,s)},Ki().prototype.dilation2d=function(t,e,n,r,i){return this.throwIfDisposed(),ju(this,t,e,n,r,i)},Ki().prototype.divNoNan=function(t){return this.throwIfDisposed(),Ku(this,t)},Ki().prototype.div=function(t){return this.throwIfDisposed(),dl(this,t)},Ki().prototype.dot=function(t){return this.throwIfDisposed(),Ju(this,t)},Ki().prototype.elu=function(){return this.throwIfDisposed(),Qu(this)},Ki().prototype.equal=function(t){return this.throwIfDisposed(),Xu(this,t)},Ki().prototype.erf=function(){return this.throwIfDisposed(),tc(this)},Ki().prototype.exp=function(){return this.throwIfDisposed(),ec(this)},Ki().prototype.expandDims=function(t){return this.throwIfDisposed(),nc(this,t)},Ki().prototype.expm1=function(){return this.throwIfDisposed(),rc(this)},Ki().prototype.fft=function(){return this.throwIfDisposed(),Vh(this)},Ki().prototype.flatten=function(){return this.throwIfDisposed(),hu(this,[this.size])},Ki().prototype.floor=function(){return this.throwIfDisposed(),ac(this)},Ki().prototype.floorDiv=function(t){return this.throwIfDisposed(),hl(this,t)},Ki().prototype.gather=function(t,e){return this.throwIfDisposed(),oc(this,t,e)},Ki().prototype.greaterEqual=function(t){return this.throwIfDisposed(),uc(this,t)},Ki().prototype.greater=function(t){return this.throwIfDisposed(),lc(this,t)},Ki().prototype.ifft=function(){return this.throwIfDisposed(),Hh(this)},Ki().prototype.irfft=function(){return this.throwIfDisposed(),Wh(this)},Ki().prototype.isFinite=function(){return this.throwIfDisposed(),hc(this)},Ki().prototype.isInf=function(){return this.throwIfDisposed(),dc(this)},Ki().prototype.isNaN=function(){return this.throwIfDisposed(),pc(this)},Ki().prototype.leakyRelu=function(t){return this.throwIfDisposed(),fc(this,t)},Ki().prototype.lessEqual=function(t){return this.throwIfDisposed(),gc(this,t)},Ki().prototype.less=function(t){return this.throwIfDisposed(),mc(this,t)},Ki().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),xc(this,t,e,n,r)},Ki().prototype.logSigmoid=function(){return this.throwIfDisposed(),Sc(this)},Ki().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ec(this,t)},Ki().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Pc(this,t,e)},Ki().prototype.log=function(){return this.throwIfDisposed(),vc(this)},Ki().prototype.log1p=function(){return this.throwIfDisposed(),bc(this)},Ki().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Oc(this,t)},Ki().prototype.logicalNot=function(){return this.throwIfDisposed(),Fc(this)},Ki().prototype.logicalOr=function(t){return this.throwIfDisposed(),zc(this,t)},Ki().prototype.logicalXor=function(t){return this.throwIfDisposed(),Bc(this,t)},Ki().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ja(this,t,e,n)},Ki().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Uc(this,t,e,n,r)},Ki().prototype.max=function(t,e){return this.throwIfDisposed(),Mc(this,t,e)},Ki().prototype.maximum=function(t){return this.throwIfDisposed(),Ll(this,t)},Ki().prototype.mean=function(t,e){return this.throwIfDisposed(),Vc(this,t,e)},Ki().prototype.min=function(t,e){return this.throwIfDisposed(),jc(this,t,e)},Ki().prototype.minimum=function(t){return this.throwIfDisposed(),Xc(this,t)},Ki().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Yc(this,t,e)},Ki().prototype.mod=function(t){return this.throwIfDisposed(),Kc(this,t)},Ki().prototype.mul=function(t){return this.throwIfDisposed(),pl(this,t)},Ki().prototype.neg=function(){return this.throwIfDisposed(),wc(this)},Ki().prototype.norm=function(t,e,n){return this.throwIfDisposed(),md(this,t,e,n)},Ki().prototype.notEqual=function(t){return this.throwIfDisposed(),th(this,t)},Ki().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Xa(this,t,e,n)},Ki().prototype.onesLike=function(){return this.throwIfDisposed(),eh(this)},Ki().prototype.pad=function(t,e){return this.throwIfDisposed(),rh(this,t,e)},Ki().prototype.pool=function(t,e,n,r,i,s){return this.throwIfDisposed(),uh(this,t,e,n,r,i,s)},Ki().prototype.pow=function(t){return this.throwIfDisposed(),Il(this,t)},Ki().prototype.prelu=function(t){return this.throwIfDisposed(),ch(this,t)},Ki().prototype.prod=function(t,e){return this.throwIfDisposed(),hh(this,t,e)},Ki().prototype.reciprocal=function(){return this.throwIfDisposed(),_h(this)},Ki().prototype.relu=function(){return this.throwIfDisposed(),Sh(this)},Ki().prototype.relu6=function(){return this.throwIfDisposed(),Mh(this)},Ki().prototype.reshapeAs=function(t){return this.throwIfDisposed(),hu(this,t.shape)},Ki().prototype.reshape=function(t){return this.throwIfDisposed(),hu(this,t)},Ki().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),ep(this,t,e,n)},Ki().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),np(this,t,e,n)},Ki().prototype.reverse=function(t){return this.throwIfDisposed(),Th(this,t)},Ki().prototype.rfft=function(){return this.throwIfDisposed(),jh(this)},Ki().prototype.round=function(){return this.throwIfDisposed(),kh(this)},Ki().prototype.rsqrt=function(){return this.throwIfDisposed(),Rh(this)},Ki().prototype.selu=function(){return this.throwIfDisposed(),Nh(this)},Ki().prototype.separableConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),Lh(this,t,e,n,r,i,s)},Ki().prototype.sigmoid=function(){return this.throwIfDisposed(),mu(this)},Ki().prototype.sign=function(){return this.throwIfDisposed(),Ph(this)},Ki().prototype.sin=function(){return this.throwIfDisposed(),Oh(this)},Ki().prototype.sinh=function(){return this.throwIfDisposed(),Fh(this)},Ki().prototype.slice=function(t,e){return this.throwIfDisposed(),gu(this,t,e)},Ki().prototype.softmax=function(t){return this.throwIfDisposed(),qh(this,t)},Ki().prototype.softplus=function(){return this.throwIfDisposed(),_c(this)},Ki().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),lh(this,t,e)},Ki().prototype.split=function(t,e){return this.throwIfDisposed(),Gh(this,t,e)},Ki().prototype.sqrt=function(){return this.throwIfDisposed(),fl(this)},Ki().prototype.square=function(){return this.throwIfDisposed(),ml(this)},Ki().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Xh(this,t)},Ki().prototype.squeeze=function(t){return this.throwIfDisposed(),Yh(this,t)},Ki().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Yi?[this,t]:[this,...t];return Kh(n,e)},Ki().prototype.step=function(t){return this.throwIfDisposed(),Jh(this,t)},Ki().prototype.stridedSlice=function(t,e,n,r,i,s,a,o){return this.throwIfDisposed(),Zh(this,t,e,n,r,i,s,a,o)},Ki().prototype.sub=function(t){return this.throwIfDisposed(),kl(this,t)},Ki().prototype.sum=function(t,e){return this.throwIfDisposed(),Tc(this,t,e)},Ki().prototype.tan=function(){return this.throwIfDisposed(),Qh(this)},Ki().prototype.tanh=function(){return this.throwIfDisposed(),yu(this)},Ki().prototype.tile=function(t){return this.throwIfDisposed(),ic(this,t)},Ki().prototype.toBool=function(){return this.throwIfDisposed(),Aa(this,"bool")},Ki().prototype.toFloat=function(){return this.throwIfDisposed(),Aa(this,"float32")},Ki().prototype.toInt=function(){return this.throwIfDisposed(),Aa(this,"int32")},Ki().prototype.topk=function(t,e){return this.throwIfDisposed(),sd(this,t,e)},Ki().prototype.transpose=function(t){return this.throwIfDisposed(),Ya(this,t)},Ki().prototype.unique=function(t){return this.throwIfDisposed(),od(this,t)},Ki().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ld(this,t,e)},Ki().prototype.unstack=function(t){return this.throwIfDisposed(),ud(this,t)},Ki().prototype.where=function(t,e){return this.throwIfDisposed(),Yu(t,this,e)},Ki().prototype.zerosLike=function(){return this.throwIfDisposed(),gl(this)};class jm extends Error{constructor(t){super(t),Object.setPrototypeOf(this,jm.prototype)}}class Xm extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xm.prototype)}}class Ym extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ym.prototype)}}class Km extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Km.prototype)}}class Jm extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jm.prototype)}}function Zm(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Qm(t,e){if(!t)throw new Jm(e)}function tg(t,e){let n=0;for(const r of t)r===e&&n++;return n}function eg(t){return 1===t.length?t[0]:t}function ng(t){return Array.isArray(t)?t:[t]}function rg(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function ig(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}Error;let sg={};function ag(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function og(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>og(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?og(e):t[n]=e.value)}}}function lg(t,e={},n={},r="object",i=!1){if("string"==typeof t){const i=t;let s;if(i in n)s=n[i];else if(i in sg)s=sg[i];else if(s=e[i],null==s)throw new Ym(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new Ym(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const a=s.className;let o,l;if(a in n?[o,l]=n[a]:a in sg?[o,l]=sg.className:a in e&&([o,l]=e[a]),null==o)throw new Ym(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const n of Object.keys(sg))t[n]=sg[n];for(const i of Object.keys(n))t[i]=n[i];s.config.customObjects=t;const e=Object.assign({},sg);for(const i of Object.keys(n))sg[i]=n[i];og(s.config);const r=l(o,s.config,n,i);return sg=Object.assign({},e),r}{const t=Object.assign({},sg);for(const r of Object.keys(n))sg[r]=n[r];const e=new o(s.config);return sg=Object.assign({},t),e}}}function ug(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function cg(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function hg(t){if(null==t)throw new Ym("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function dg(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Ym(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function pg(t,e,n=0,r=1/0){return Qm(n>=0),Qm(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function fg(t,e){Array.isArray(t)?(st(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>fg(t,`element ${n+1} of ${e}`))):st(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${mg(t)}.`)}function mg(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>mg(t)).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}function gg(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function yg(t,e){return Jo(()=>fl(Tc(pl(t,t),e,!0)))}class xg extends Co{getConfig(){return{}}}class vg extends xg{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Jo(()=>{const e=yg(t,this.axis),n=Cu(e,0,this.maxValue);return pl(t,dl(n,cl(Gm(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}vg.className="MaxNorm",ko(vg);class bg extends xg{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Jo(()=>dl(t,cl(Gm(),yg(t,this.axis))))}getConfig(){return{axis:this.axis}}}bg.className="UnitNorm",ko(bg);class wg extends xg{apply(t){return Sh(t)}}wg.className="NonNeg",ko(wg);class _g extends xg{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Jo(()=>{const e=yg(t,this.axis),n=cl(pl(this.rate,Cu(e,this.minValue,this.maxValue)),pl(1-this.rate,e));return pl(t,dl(n,cl(Gm(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_g.className="MinMaxNorm",ko(_g);const Sg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Mg(t){return ag(t)}function Tg(t,e={}){return lg(t,Io.getMap().classNameMap,e,"constraint")}function Eg(t){return null==t?null:"string"==typeof t?Tg({className:t in Sg?Sg[t]:t,config:{}}):t instanceof xg?t:Tg(t)}function Ag(t){return new vg(t)}function Cg(t){return new bg(t)}function Ig(){return new wg}function kg(t){return new _g(t)}const Rg=["channelsFirst","channelsLast"],Ng=["nearest","bilinear"],Lg=["valid","same","causal"],Dg=["max","avg"],Pg=["sum","mul","concat","ave"],Og=new Map;function Fg(t){dg(Rg,"DataFormat",t)}function zg(t){dg(Lg,"PaddingMode",t)}function Bg(t){dg(Dg,"PoolMode",t)}const Ug=[];function $g(t,e){Ug.push(t);try{const t=e();return Ug.pop(),t}catch(t){throw Ug.pop(),t}}function qg(t){if(!Wg(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Ug.length?"":Ug.join("/")+"/")+t}function Vg(t){if(!Wg(t))throw new Error("Not a valid tensor name: '"+t+"'");Og.has(t)||Og.set(t,0);const e=Og.get(t);if(Og.set(t,Og.get(t)+1),e>0){const n=`${t}_${e}`;return Og.set(n,1),n}return t}const Hg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wg(t){return!!t.match(Hg)}function Gg(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let i=e;i<n;++i)r*=t[i];return r}function jg(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function Xg(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function Yg(t,e){if(e<t)throw new Ym(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Kg(t,e){return Aa(t,e)}function Jg(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),hu(t,n)}function Zg(t,e,n){return Jo(()=>{switch(t.rank){case 1:return zh(t,e,n);case 2:return Bh(t,[e,0],[n,t.shape[1]]);case 3:return Uh(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return $h(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return gu(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return gu(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Ym("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function Qg(t,e,n){return Jo(()=>{switch(t.rank){case 1:return zh(t,e,n);case 2:return Bh(t,[0,e],[t.shape[0],n]);case 3:return Uh(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return $h(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Ym("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function ty(t,e,n,r){return Jo(()=>{switch(t.rank){case 1:return zh(t,e,n);case 2:switch(r){case 1:return Zg(t,e,n);case 2:return Qg(t,e,n);default:throw new Ym("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Zg(t,e,n);case 2:return Uh(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Qg(t,e,n);default:throw new Ym("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Zg(t,e,n);case 2:return $h(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return $h(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Qg(t,e,n);default:throw new Ym("The axis is not within the rank of the tensor "+r)}default:throw new Ym("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function ey(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),fu(t,e)}function ny(t,e){switch(t.rank){case 1:return Iu([t,e]);case 2:return ku([t,e],0);case 3:return Ru([t,e],0);case 4:return Nu([t,e],0);default:throw new Ym("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function ry(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Ym(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ic(t,e)}function iy(t,e=0,n=1,r,i){return xh(t,e,n,r,i)}function sy(t,e,n,r){if(t.rank<2||e.rank<2)throw new Km(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Km(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Ld({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ly(t.rank,r,"channelsLast"):null,activation:n});{const i=t.shape.slice(),s=i.pop();t=hu(t,[-1,s]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=hu(Ya(e,c),[l,-1]);const h=[...i,...u];return hu(Ld({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ly(t.rank,r,"channelsLast"):null,activation:n}),h)}}function ay(t,e,n){return Jo(()=>(e=Array.isArray(e)?td(e,"int32"):Aa(e,"int32"),oc(t,e,n)))}function oy(t){return pl(t,t)}function ly(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Ym(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?hu(e,[1,r[0],1,1,1]):hu(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?hu(e,[1,1,1,1,r[0]]):hu(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?hu(e,[1,r[0],1,1]):hu(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?hu(e,[1,1,1,r[0]]):hu(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?hu(e,[1,r[0],1]):hu(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?hu(e,[1,1,r[0]]):hu(e,[1].concat(r))}else if(t<3)return e;throw new Ym("Unsupported input rank by biasAdd: "+e.rank)}function uy(t,e,n){return Jo(()=>(null==n&&(n="channelsLast"),Fg(n),cl(t,ly(t.rank,e,n))))}function cy(t,e,n,r){return Jo(()=>bd(t,e,n,r))}function hy(t,e,n=!1){return n?t():e()}const dy=["fanIn","fanOut","fanAvg"],py=["normal","uniform","truncatedNormal"];class fy extends Co{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class my extends fy{apply(t,e){return Hc(t,e)}}my.className="Zeros",ko(my);class gy extends fy{apply(t,e){return Wc(t,e)}}gy.className="Ones",ko(gy);class yy extends fy{constructor(t){if(super(),"object"!=typeof t)throw new Ym("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new Ym("config must have value set but got "+t);this.value=t.value}apply(t,e){return Jo(()=>pl(Ml(this.value),Wc(t,e)))}getConfig(){return{value:this.value}}}yy.className="Constant",ko(yy);class xy extends fy{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return vh(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}xy.className="RandomUniform",ko(xy);class vy extends fy{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Km(`randomNormal does not support dType ${e}.`);return iy(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}vy.className="RandomNormal",ko(vy);class by extends fy{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Km(`truncatedNormal does not support dType ${e}.`);return ad(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}by.className="TruncatedNormal",ko(by);class wy extends fy{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Jo(()=>{if(2!==t.length||t[0]!==t[1])throw new Ym("Identity matrix initializer can only be used for 2D square matrices.");return pl(this.gain,sc(t[0]))})}getConfig(){return{gain:this.gain}}}wy.className="Identity",ko(wy);class _y extends fy{constructor(t){if(super(),t.scale<0)throw new Ym("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,dg(dy,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){dg(py,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Fg(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Gg(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Gg(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Gg(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],i=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,i):s/=Math.max(1,(r+i)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Km(`${this.getClassName()} does not support dType ${e}.`);return ad(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return vh(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_y.className="VarianceScaling",ko(_y);class Sy extends _y{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _y.className}}Sy.className="GlorotUniform",ko(Sy);class My extends _y{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _y.className}}My.className="GlorotNormal",ko(My);class Ty extends _y{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _y.className}}Ty.className="HeNormal",ko(Ty);class Ey extends _y{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _y.className}}Ey.className="HeUniform",ko(Ey);class Ay extends _y{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _y.className}}Ay.className="LeCunNormal",ko(Ay);class Cy extends _y{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _y.className}}Cy.className="LeCunNormal",ko(Cy);class Iy extends fy{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Km("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Jo(()=>{if(t.length<2)throw new Km("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=iy(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Ip.gramSchmidt(e);return t[0]>t[1]&&(n=Ya(n)),pl(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Iy.className="Orthogonal",ko(Iy);const ky={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ry(t,e={}){return lg(t,Io.getMap().classNameMap,e,"initializer")}function Ny(t){return ag(t)}function Ly(t){if("string"==typeof t){const e=t in ky?ky[t]:t;if("GlorotNormal"===e)return new My;if("GlorotUniform"===e)return new Sy;if("HeNormal"===e)return new Ty;if("HeUniform"===e)return new Ey;if("LeCunNormal"===e)return new Ay;if("LeCunUniform"===e)return new Cy;{const t={};return t.className=e,t.config={},Ry(t)}}return t instanceof fy?t:Ry(t)}function Dy(){return new my}function Py(){return new gy}function Oy(t){return new yy(t)}function Fy(t){return new xy(t)}function zy(t){return new vy(t)}function By(t){return new by(t)}function Uy(t){return new wy(t)}function $y(t){return new _y(t)}function qy(t){return new Sy(t)}function Vy(t){return new My(t)}function Hy(t){return new Ty(t)}function Wy(t){return new Ey(t)}function Gy(t){return new Ay(t)}function jy(t){return new Cy(t)}function Xy(t){return new Iy(t)}let Yy=0;function Ky(){return Yy++}const Jy={};function Zy(t=""){return t in Jy||(Jy[t]=0),Jy[t]+=1,t+Jy[t].toString()}function Qy(t){return Array.isArray(t)&&Array.isArray(t[0])}function tx(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ex(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Ym("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function nx(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Ym("Expected exactly 1 Shape; got "+t.length)}return t}function rx(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class ix{constructor(t,e="float32",n="Variable",r=!0,i=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Ky(),n=null==n?"Variable":n,this.originalName=qg(n),this.name=Vg(this.originalName),this.trainable_=r,this.constraint=i,this.val=cd(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function sx(t){return t.map(t=>t.read())}function ax(t){t.forEach(t=>{t[0].write(t[1])})}class ox{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class lx{constructor(t,e,n,r,i,s,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=Ky(),null!=s&&(this.originalName=qg(s),this.name=Vg(this.originalName)),this.rank=e.length}}let ux=0;class cx{constructor(t,e){this.callArgs=e,this.id=ux++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let hx=0;class dx extends Co{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=hx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=rg(t)+"_"+Zy(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Xm(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Ym(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return eg(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return eg(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new jm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new jm(`Layer ${this.name} is not connected, no input to return.`);return eg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new jm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new jm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return eg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ng(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=ng(this.inputSpec);if(t.length!==e.length)throw new Ym(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],i=e[n];if(null==i)continue;const s=r.rank;if(null!=i.ndim&&s!==i.ndim)throw new Ym(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${s}`);if(null!=i.maxNDim&&s>i.maxNDim)throw new Ym(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${s}`);if(null!=i.minNDim&&s<i.minNDim)throw new Ym(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${s}.`);if(null!=i.dtype&&r.dtype!==i.dtype)throw new Ym(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const t=r.shape;for(const e in i.axes){const r=Number(e),s=i.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(a))throw new Ym(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=i.shape)for(let t=0;t<i.shape.length;++t){const e=i.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new Ym(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=ng(t);let r=!0;for(const s of n)if(!(s instanceof lx)){r=!1;break}let i=!0;for(const s of n)if(s instanceof lx){i=!1;break}if(r===i)throw new Ym("Arguments to apply() must be all SymbolicTensors or all Tensors");return $g(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of ng(t))e.push(n.shape);this.build(eg(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let r=this.call(t,e);const i=ng(r),s=[];for(let t of i)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=eg(s),null!=this.activityRegularizer)throw new Km("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=ng(t);const e=[];for(const n of t)e.push(n.shape);return eg(e)}(t),r=this.computeOutputShape(n);let i;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),i=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new lx(s,n,this,ng(t),e,this.name,r)):new lx(s,r,this,ng(t),e,this.name),this.addInboundNode(t,i,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Km("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new jm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new jm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rx(this.weights)}build(t){this.built=!0}getWeights(t=!1){return sx(t?this.trainableWeights:this.weights)}setWeights(t){Jo(()=>{const e=this.weights;if(e.length!==t.length)throw new Ym(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=sx(e);for(let i=0;i<r.length;++i){const s=r[i],a=e[i],o=t[i];if(!ht(s.shape,o.shape))throw new Ym(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}ax(n)})}addWeight(t,e,n,r,i,s,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new Ym(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ly("zeros"));const l=r.apply(e,n),u=new ix(l,n,t,s,a);return l.dispose(),null!=i&&this.addLoss(()=>i.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ng(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,i,s,a=null){const o=ng(t);e=ng(e),n=ng(n),r=ng(r),i=tx(i),s=tx(s);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new cx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:i,outputShapes:s},a);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function px(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=px(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class fx extends dx{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Zy("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Ym("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Ym("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Ym("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new lx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new cx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Ym("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function mx(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Ym("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new fx({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function gx(t){if(null==t)return;const e=[],n=[],r=[];for(const i in t){const s=t[i];if("number"!=typeof s){const t=s;e.push(t.data()),n.push(i),r.push(t)}}if(e.length>0){const i=await Promise.all(e);for(let e=0;e<i.length;++e)t[n[e]]=i[e][0];Zo(r)}}function yx(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var xx;fx.className="InputLayer",ko(fx),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(xx||(xx={}));class vx{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class bx{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class wx extends vx{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"==typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const i=Jo(()=>cl(this.totals[r],pl(t,n)));this.totals[r]=i,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Jo(()=>{const t=pl(dl(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Qo(e[n])}))}}class _x extends vx{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const i in this.history){const r=this.history[i];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){const a=r[s];t.push(a.data()),e.push(i),n.push(s)}}const r=await Promise.all(t);for(let i=0;i<r.length;++i)this.history[e[i]][n[i]].dispose(),this.history[e[i]][n[i]]=r[i][0]}}class Sx extends vx{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Pp,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Rt(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,i=null!=n?n():Li();return(...s)=>{const a=null!=n?n():Li();return a-i<e||(i=a,r=t(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await gx(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await gx(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await gx(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await gx(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await gx(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Rt(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await gx(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await gx(t),await this.trainEnd(t))}}function Mx(t,e){return null==t&&(t={}),t instanceof vx?[t]:Array.isArray(t)&&t[0]instanceof vx?t:ng(t).map(t=>new Sx(t,e))}class Tx{constructor(){}static registerCallbackConstructor(t,e){st(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),Tx.checkForDuplicate(e),null==Tx.constructors[t]&&(Tx.constructors[t]=[]),Tx.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Tx.constructors)Tx.constructors[+e].forEach(e=>{if(e===t)throw new Ym("Duplicate callback constructor.")})}static clear(){Tx.constructors={}}static createCallbacks(t){const e=[];for(const n in Tx.constructors){const r=+n;t>=r&&e.push(...Tx.constructors[r])}return e.map(t=>new t)}}function Ex(t,e,n,r,i,s,a,o,l){const u=new _x,c=[new wx,...Tx.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new bx(c);return h.setParams({epochs:n,initialEpoch:r,samples:i,steps:s,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Ax(t,e={},n=!1){return lg(t,Io.getMap().classNameMap,e,"layer",n)}function Cx(t,e){return Jo(()=>{"float32"!==t.dtype&&(t=Aa(t,"float32"));const n=Tc(oy(t),e,!0),r=Al(n.shape,Gm()),i=fl(Ll(n,r));return dl(t,i)})}function Ix(t,e){return Jo(()=>Vc(oy(kl(e,t)),-1))}function kx(t,e){return Jo(()=>Vc(Nl(kl(e,t)),-1))}function Rx(t,e){return Jo(()=>{const n=kl(t,e),r=Cu(Nl(t),Gm(),Number.MAX_VALUE),i=Nl(dl(n,r));return pl(100,Vc(i,-1))})}function Nx(t,e,n=!1){return Jo(()=>{if(n)e=qh(e);else{const t=Tc(e,e.shape.length-1,!0);e=dl(e,t)}return e=Cu(e,Gm(),1-Gm()),wc(Tc(pl(Aa(t,"float32"),vc(e)),e.shape.length-1))})}function Lx(t,e,n=!1){return Jo(()=>{const r=Aa(ac(function(t){const e=[Gg(t.shape)];return hu(t,e)}(t)),"int32"),i=(e=Cu(e,Gm(),1-Gm())).shape;return Nx(hu(Xa(r,i[i.length-1]),i),e,n)})}function Dx(t,e){return Jo(()=>{let n;return n=Cu(e,Gm(),1-Gm()),n=vc(dl(n,kl(1,n))),Vc(function(t,e){if(!ht(t.shape,e.shape))throw new Ym(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Jo(()=>{const n=Sh(e),r=wc(Nl(e));return cl(kl(n,pl(e,t)),bc(ec(r)))})}(t,n),-1)})}function Px(t,e){return Jo(()=>{const n=Cx(t,-1),r=Cx(e,-1),i=pl(n,r);return wc(Tc(i,-1))})}Tx.constructors={};const Ox={meanSquaredError:Ix,meanAbsoluteError:kx,meanAbsolutePercentageError:Rx,meanSquaredLogarithmicError:function(t,e){return Jo(()=>{const n=Cu(e,Gm(),Number.MAX_VALUE),r=vc(cl(1,n)),i=Cu(t,Gm(),Number.MAX_VALUE),s=vc(cl(1,i));return Vc(oy(kl(r,s)),-1)})},squaredHinge:function(t,e){return Jo(()=>{const n=Ll(0,kl(1,pl(t,e)));return Vc(oy(n),-1)})},hinge:function(t,e){return Jo(()=>{const n=Ll(0,kl(1,pl(t,e)));return Vc(n,-1)})},categoricalHinge:function(t,e){return Jo(()=>{const n=Tc(pl(t,e),-1),r=Mc(pl(kl(1,t),e),-1);return Ll(0,cl(1,kl(r,n)))})},logcosh:function(t,e){return Jo(()=>{const n=Math.log(2),r=kl(e,t),i=kl(cl(r,_c(pl(-2,r))),n);return Vc(i,-1)})},categoricalCrossentropy:Nx,sparseCategoricalCrossentropy:Lx,binaryCrossentropy:Dx,kullbackLeiblerDivergence:function(t,e){return Jo(()=>{const n=Cu(t,Gm(),1),r=Cu(e,Gm(),1);return Tc(pl(t,vc(dl(n,r))),-1)})},poisson:function(t,e){return Jo(()=>{const n=vc(cl(Gm(),e));return Vc(kl(e,pl(t,n)),-1)})},cosineProximity:Px};function Fx(t){if("string"==typeof t){if(t in Ox)return Ox[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Ym(e)}return t}function zx(t,e){return Jo(()=>{const n=pl(.5,eh(e)),r=Kg(lc(e,n),t.dtype);return Vc(Xu(t,r),-1)})}function Bx(t,e){return Jo(()=>Kg(Xu(Hl(t,-1),Hl(e,-1)),"float32"))}function Ux(t,e){return Jo(()=>Aa(Tc(Oc(Xu(t,1),Xu(e,1))),"float32"))}function $x(t,e){return Jo(()=>{const n=Ux(t,e),r=function(t,e){return Jo(()=>Aa(Tc(Oc(Xu(t,0),Xu(e,1))),"float32"))}(t,e),i=cl(n,r);return Aa(Yu(lc(i,0),dl(n,i),0),"float32")})}function qx(t,e){return Dx(t,e)}function Vx(t,e){return t.rank===e.rank&&(t=Yh(t,[t.rank-1])),(e=Hl(e,-1)).dtype!==t.dtype&&(e=Aa(e,t.dtype)),Aa(Xu(t,e),"float32")}const Hx=Nx,Wx=Lx,Gx={binaryAccuracy:zx,categoricalAccuracy:Bx,precision:$x,categoricalCrossentropy:Hx,sparseCategoricalCrossentropy:Wx,mse:Ix,MSE:Ix,mae:kx,MAE:kx,mape:Rx,MAPE:Rx,cosine:Px};function jx(t){if("string"==typeof t&&t in Gx)return Gx[t];if("string"!=typeof t&&null!=t)return t;throw new Ym("Unknown metric "+t)}function Xx(t){if(Qm(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Ox))if(Ox[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Gx))if(Gx[n]===t){e=n;break}return void 0!==e?e:t.name}}function Yx(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Kx(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Kx(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Kx(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Kx(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Jx(t,e,n=console.log){let r="";for(let i=0;i<t.length;++i)i>0&&(r=r.slice(0,r.length-1)+" "),r+=t[i],r=r.slice(0,e[i]),r+=" ".repeat(e[i]-r.length);n(r)}function Zx(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Jx([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Qx(t,e,n,r){let i;try{i=JSON.stringify(t.outputShape)}catch(t){i="multiple"}const s=[];for(const u of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let t=0;t<u.inboundLayers.length;++t){const e=u.inboundLayers[t].name,n=u.nodeIndices[t],r=u.tensorIndices[t];s.push(`${e}[${n}][${r}]`)}const a=t.name,o=t.getClassName(),l=0===s.length?"":s[0];Jx([`${a} (${o})`,i,t.countParams().toString(),l],e,r);for(let u=1;u<s.length;++u)Jx(["","","",s[u]],e,r)}function tv(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function ev(t,e){if(null===t)return null;if("string"==typeof t)return ig(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];tv(e,i,r)?n.push(r):n.push(ev(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=ig(n);e[t]=ev(r,t)}}return e}}function nv(t,e){if(null==t)return null;if("string"==typeof t)return rg(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];tv(e,i,r)?n.push(r):n.push(nv(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[rg(n)]="name"!==n&&"className"!==n||"string"!=typeof r?nv(r,n):r}return e}}const rv="3.13.0";class iv{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof iv)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Ym(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Aa(e,t.dtype)}catch(n){throw new Ym(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof lx){if(null==this.id2Value[t.id])throw new Ym("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Ym("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof lx){if(null==this.id2Value[t.id])throw new Ym("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Ym("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Zo(this.id2Mask)}}const sv={},av={};function ov(t,e,n,r){const i=null!=n&&n.training,s=Array.isArray(t),a=s?t:[t],o=a.map(t=>t.name),l=[],u=e.names();for(const f of o)-1!==u.indexOf(f)?l.push(e.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==sv[c]){const t=function(t,e){st(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const i=uv(t[0],e);n=i.sorted,r=i.recipientMap}else{const i=new Set;for(const s of t){const{sorted:t,recipientMap:a}=uv(s,e);for(const e of t)i.has(e.name)||(n.push(e),i.add(e.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:lv(r)}}(a,e);h=t.sorted,d=t.recipientCounts,sv[c]=h,av[c]=d}h=sv[c],d={},i||Object.assign(d,av[c]);const p=new iv(e);for(let f=0;f<h.length;++f){if(null!=r){const t=Yo().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[f],s=t.sourceLayer;if(s instanceof fx)continue;const a=[],u=[],c=[];let m=!1;for(const n of t.inputs){const t=p.getValue(n),r=p.getMask(n);a.push(t),u.push(r),null!=r&&(m=!0),i||(d[n.name]--,0!==d[n.name]||e.hasKey(n)||-1!==o.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||c.push(t))}m&&((n=n||{}).mask=u[0]);const g=ng(s.apply(a,n));let y=null;s.supportsMasking&&(y=s.computeMask(a,u));const x=cv(t),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){p.hasKey(v[e])||p.add(v[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(v[e].name);-1!==t&&(l[t]=g[e])}i||Zo(c)}return p.disposeMasks(),s?l:l[0]}function lv(t){const e={};for(const n in t)e[n]=t[n].size;return e}function uv(t,e){const n=new Set,r=[],i={};for(const o of e.names())n.add(o);const s=[],a=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=a[a.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(s.length-1);for(const e of t.inputs)null==i[e.name]&&(i[e.name]=new Set),i[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:i}}function cv(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class hv extends dx{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Zy(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],cg(this.inputs).length!==this.inputs.length)throw new Ym("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));cg(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;Qm(0===e,"input layer has >1 nodes"),Qm(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof fx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},i={},s={},a=[],o=(t,e,n,r,i,l)=>{null!=r&&null!=i&&null!=l||(r=t.sourceLayer,i=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[i];if(-1!==n.indexOf(u))throw new Xm(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(hv.nodeKey(r,i)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let s=0;s<c;s++){const t=u.inputTensors[s],r=u.inboundLayers[s],i=u.nodeIndices[s],a=u.tensorIndices[s];o(t,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=a.slice().reverse();for(const y of c){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const s=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];t=Math.max(t,s),r[y.outboundLayer.id]=t,i[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let r=0;r<y.inboundLayers.length;r++){const i=y.inboundLayers[r],s=y.nodeIndices[r],a=i.inboundNodes[s],o=null==e[a.id]?0:e[a.id];e[a.id]=Math.max(t+1,o),n[a.id]=a}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const d={};for(const y in r){const t=r[y];t in d||(d[t]=[]),d[t].push(i[y])}let p=Object.keys(d).map(t=>parseInt(t,10)).sort(ug);this.layers=[];for(const y of p){const t=d[y];t.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof hv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map(t=>parseInt(t,10)).sort(ug);const f=this.inputs.slice(),m=[];for(const y of p)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Xm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map(t=>t.name);for(const y of g){const t=g.filter(t=>t===y).length;if(1!==t)throw new Xm(`The name "${y}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new cx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ym("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new Ym("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const i=[];for(const s in t){let r=s;if(null==n[s]){const t=s.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])i.push([n[r],t[s]]);else if(e)throw new Ym("Provided weight data has no target variable: "+s);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Ym(`${t.length} of ${r} weights are not set: ${t}`)}ax(i)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers "+rv,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=nv(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Jo(()=>{t=ng(t);const n=new iv;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return ov(this.outputs,n,e)})}computeMask(t,e){return Jo(()=>{let n;return t=ng(t),n=null==e?Zm(null,t.length):ng(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=tx(t);if(e.length!==this.inputLayers.length)throw new Ym(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const t=this.inputLayers[a],r=e[a];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(ug);if(r.length>1)for(const a of r){const t=this.nodesByDepth[a];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let a=0;a<e.inboundLayers.length;a++){const t=e.inboundLayers[a],i=e.nodeIndices[a],s=e.tensorIndices[a],o=n[`${t.name}_${i}_${s}`];r.push(o)}const i=tx(t.computeOutputShape(eg(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<i.length;e++)n[`${t.name}_${s}_${e}`]=i[e]}}const i=[],s=[];for(let a=0;a<this.outputLayers.length;a++){const t=this.outputLayers[a],e=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],r=`${t.name}_${e}_${n}`;s.push(r)}for(let a=0;a<s.length;a++){const t=s[a];Qm(t in n),i.push(n[t])}return eg(i)}runInternalGraph(t,e){null==e&&(e=Zm(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],i=t[o],s=e[o];n[r.id]=[i,s]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(ug);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,i=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),o=ng(t.call(e,u)),l=ng(t.computeMask(e,n)),r=[e],a=[n]}else r=s.map(t=>t[0]),a=s.map(t=>t[1]),null==u.mask&&(u.mask=a),o=ng(t.call(r,u)),l=ng(t.computeMask(r,a));if(t.activityRegularizer)throw new Km("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<i.length;++t){const e=i[t],r=o[t],s=l[t];n[e.id]=[r,s]}}}}const i=[],s=[],a=[];for(const o of this.outputs){Qm(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];a.push(t.shape),i.push(t),s.push(e)}return[i,s,a]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof hv?1:0;for(let t=0;t<r.inboundNodes.length;t++){const i=hv.nodeKey(r,t);this.containerNodes.has(i)&&(e[i]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Ym(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Ym("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new Ym("No such layer: "+t)}calculateLosses(){return Jo(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=hv.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const t=s.getClassName(),r=s.getConfig(),i=[];for(let n=0;n<s.inboundNodes.length;n++){const t=s.inboundNodes[n],r=hv.nodeKey(s,n);let a={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),a=t.callArgs}catch(e){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const i=t.inboundLayers[r],s=t.nodeIndices[r],o=t.tensorIndices[r];let l=e[hv.nodeKey(i,s)];null==l&&(l=0),n.push([i.name,l,o,a])}i.push(n)}}}const a={};a.name=s.name,a.className=t,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let s=0;s<this.inputLayers.length;s++){const t=this.inputLayers[s],n=this.inputLayersNodeIndices[s],i=hv.nodeKey(t,n);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[s];r.push([t.name,a,o])}t.inputLayers=r;const i=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],n=this.outputLayersNodeIndices[s],r=hv.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let a=e[r];null==a&&(a=0);const o=this.outputLayersTensorIndices[s];i.push([t.name,a,o])}return t.outputLayers=i,t}static fromConfig(t,e,n={},r=!1){const i={},s={};function a(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in i))return void a(t,e);const c=i[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(eg(n),r)}function l(t){const n=t.name,s=Ax(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),i[n]=s,t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new Ym("Corrupted configuration, expected array for nodeData: "+t);a(s,t)})}const u=e.name,c=e.layers;for(const m of c)l(m);for(;!hg(s);)for(const t of c){const e=i[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];Qm(t in i);const r=i[t].inboundNodes[e].outputTensors;h.push(r[n])}const f=e.outputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];Qm(t in i);const r=i[t].inboundNodes[e].outputTensors;d.push(r[n])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Ym("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Jo(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function dv(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function pv(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Jo(()=>{if(1===t.shape.length)return Ca(t);if(2===t.shape.length){if(t.shape[1]>1)return Hl(t,1);if(1===t.shape[1])return hu(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Zo(e);const i=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);i.push(n[t])}),td(i,"float32")}return null}function fv(t,e){return pl(t,e)}function mv(t,e){let n,r;const i=e;n=i.xs,r=i.ys,st(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const s=gv("input",t.inputNames,n),a=gv("output",t.outputNames,r),o=s[0].shape[0];st(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),st(a.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<s.length;l++)st(s[l].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let l=0;l<a.length;l++)st(a[l].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:s,ys:a}}function gv(t,e,n){if(n instanceof Yi)return[n];if(Array.isArray(n))return st(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const i of e){if(null==n[i])throw new Ym(`The feature data generated by the dataset lacks the required ${t} key '${i}'.`);r.push(n[i])}return r}}function yv(t){return"function"==typeof t.iterator}function xv(t){st(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function vv(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>Zg(t,e,n-e)):Zg(t,e,n-e)}function bv(t,e){return Jo(()=>null==t?null:Array.isArray(t)?t.map(t=>bv(t,e)):ay(t,"int32"===e.dtype?e:Aa(e,"int32")))}function wv(t,e){const n=[];let r=0,i=null;for(;r<t;)i=r+e,i>=t&&(i=t),n.push([r,i]),r=i;return n}function _v(t){const e=[];t instanceof Yi&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Jg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Sv(t,e){if(null==t)return;const n=[];if(e instanceof Yi)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const i in e){const t=e[i];n.push(t.id)}const r=[];if(t instanceof Yi)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const i in t){const e=t[i];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Mv(t){return Array.isArray(t)}function Tv(t){return!function(t){return t instanceof Yi}(t)&&!Mv(t)}function Ev(t,e,n,r=!0,i=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Mv(t)&&t.length>0)e=!0;else if(Tv(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Ym(`Error when checking model ${i} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(t=>null);let s;if(Tv(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new Ym(`No data provided for "${n}". Need data for each key in: ${e}`);s.push(t[n])}}else if(Mv(t)){if((t=t).length!==e.length)throw new Ym(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);s=t}else{if(t=t,e.length>1)throw new Ym(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);s=[t]}if(s=_v(s),null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=s[a];if(t.shape.length!==n[a].length)throw new Ym(`Error when checking ${i}: expected ${e[a]} to have ${n[a].length} dimension(s). but got array with shape ${t.shape}`);for(let e=0;e<n[a].length;++e){if(0===e&&!r)continue;const s=t.shape[e],o=n[a][e];if(null!=o&&o>=0&&s!==o)throw new Ym(`${i} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${i} received an input with ${t.shape[0]} examples, each with shape [${t.shape.slice(1,t.shape.length)}] (tensor shape [${t.shape}])`)}}return s}function Av(t,e,n,r=!0,i=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new Ym(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new Ym(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);s=[t]}if(null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=s[a];if(t.shape.length!==n[a].length)throw new Ym(`Error when checking ${i}: expected ${e[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let s=0;s<n[a].length;++s){if(0===s&&!r)continue;const o=t.shape[s],l=n[a][s];if(null!=l&&l!==o)throw new Ym(`Error when checking ${i}: expected ${e[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}class Cv extends hv{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Ym("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const i=function(t){let e=!0;const n=[],r=[];for(const i in t.nodesByDepth)n.push(t.nodesByDepth[i]);for(const i of n){if(i.length>1||1===i.length&&i[0].inboundLayers.length>1){e=!1;break}r.push(...i)}if(e)for(const i of t.layers){let t=!1;for(const n of i.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let a;if(i?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!i){s.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Jx(s,n,r),r("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)i?Zx(o[c],n,r):Qx(o[c],n,a,r),r((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?rx(t.collectedTrainableWeights):rx(t.trainableWeights),e}(t),u=rx(t.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Lp.adagrad(.01),Adadelta:()=>Lp.adadelta(1,.95,Gm()),Adam:()=>Lp.adam(.001,.9,.999,Gm()),Adamax:()=>Lp.adamax(.002,.9,.999,Gm(),0),RMSProp:()=>Lp.rmsprop(.001,.9,0,Gm()),SGD:()=>Lp.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Ym("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Tl))throw new Ym("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Ym(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>Fx(t))}else{const n=Fx(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Ym(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Fx(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],$g("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),i=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};$g("metric",()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,s;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let i;1===e[e.length-1]||this.lossFunctions[t]===Dx?-1!==["accuracy","acc"].indexOf(a)?r=zx:-1!==["crossentropy","ce"].indexOf(a)&&(r=qx):this.lossFunctions[t]===Lx?-1!==["accuracy","acc"].indexOf(a)?r=Vx:-1!==["crossentropy","ce"].indexOf(a)&&(r=Wx):-1!==["accuracy","acc"].indexOf(a)?r=Bx:-1!==["crossentropy","ce"].indexOf(a)&&(r=Hx),-1!==["accuracy","acc"].indexOf(a)?i="acc":-1!==["crossentropy","ce"].indexOf(a)&&(i="ce"),s=r,n=""+i}else{const t=jx(a);s=t,n=""+Xx(a)}let e;$g(n,()=>{e=s}),i(t,n,e)}})(r[t])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;xv(r);const i=this.standardizeUserDataXY(t,e,!0,r);try{const s=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction;return eg(this.testLoop(a,s,r,n.verbose,n.steps))}finally{Sv(i[0],t),Sv(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,i=t.testFunction;let s=[];if(n.verbose>0)throw new Km("Verbose mode is not implemented yet.");st(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(s=Jo(()=>{if(e.value){const{xs:n,ys:r}=mv(t,e.value),a=n.concat(r),u=Jo(()=>i(a));if(Zo(a),0===l)for(let t=0;t<u.length;++t)s.push(Ml(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=s[t];s[t]=Jo(()=>cl(s[t],pl(c,e))),l>0&&Zo(n)}Zo(u),o+=c,++l}return s}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){const t=s[u];s[u]=dl(s[u],o),Zo(t)}return eg(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let i;if(null!=n){if(i=null,null!=e)throw new Ym(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Ym(`Either the input data should have a defined shape, or ${r} shoud be specified.`);i=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return i}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Ym("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],i=this.retrieveSymbolicTensors(r),s=new iv;if(t instanceof Yi&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Ym(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const o of this.inputs){const e=t[o.name];if(null==e)throw new Ym("No value is provided for the model's input "+o.name);s.add(o,e)}const a=ov(i,s);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Zm(null,t.length);let n=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],s=i.map(t=>t.name);for(let r=0;r<t.length;++r){const a=s.indexOf(t[r]);if(-1!==a&&(e[r]=i[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new Ym("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return Jo(()=>{const r=this.checkNumSamples(t);if(n)throw new Km("Verbose predictLoop() is not implemented yet.");const i=wv(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<i.length;++e)Jo(()=>{const n=i[e][0],r=i[e][1],s=vv(t,n,r),a=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)a.push({key:this.inputs[t],value:s[t]});else a.push({key:this.inputs[0],value:s});const o=new iv(a);return ov(this.outputs,o)}).forEach((t,e)=>s[e].push(t));return eg(s.map(t=>fu(t,0)))})}predict(t,e={}){const n=_v(t);Av(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return xv(r),this.predictLoop(n,r)}finally{Sv(n,t)}}predictOnBatch(t){Av(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Xm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s];this.feedLossFns[s]===Lx?i.push(t.slice(0,t.length-1).concat([1])):i.push(t)}if(function(t,e,n){const r=cg(t.map(t=>t.shape[0]));r.sort();const i=cg(e.map(t=>t.shape[0]));if(i.sort(),r.length>1)throw new Ym("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(i.length>1)throw new Ym("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&i.length>0&&!ht(r,i))throw new Ym(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${i[0]} target sample(s).`)}(t=Ev(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Ev(e,this.feedOutputNames,i,!1,"target")),function(t,e,n){const r=[Ix,Dx,Nx];for(let i=0;i<t.length;++i){const s=t[i],a=e[i],o=n[i];if(null!=a){if(a===Nx&&1===s.shape[s.shape.length-1])throw new Ym(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],i=e[n];if(null!=i&&r!==i)throw new Ym(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Ym(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,i=!0,s){const[a,o]=this.standardizeUserDataXY(t,e,i,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=dv(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await pv(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,i){return Jo(()=>{const s=this.checkNumSamples(e,n,i,"steps"),a=[];if(r>0)throw new Km("Verbose mode is not implemented yet.");if(null!=i)throw new Km("steps mode in testLoop() is not implemented yet");{const r=wv(s,n),i=td(Yg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=Zg(i,s,o-s),u=bv(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Ml(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=cl(a[t],pl(o-s,e))}}for(let t=0;t<a.length;++t)a[t]=dl(a[t],s)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let i=r;tg(t,r)>1&&(i+="_"+tg(t.slice(0,n),r)),e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],a=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new iv(t),o=ov(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],o[n]);null!=i[n]&&(t=fv(t,i[n]));const s=Vc(t);e.push(s),l=0===n?t:cl(l,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],i=this.metricsTensors[n][1];t=Vc(e(r[i],o[i]))}Qo(t),s.push(t)}return l=Vc(l),this.calculateLosses().forEach(t=>{l=cl(l,t)}),l},!0,a)].concat(s)}}makeTestFunction(){this.testFunction=t=>Jo(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const a=new iv(s),o=ov(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=Vc(r(i[t],o[t]));n=0===t?s:cl(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=Vc(n(i[r],o[r]));e.push(s)}return e})}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,s,a,o,l,u,c,h,d;t.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;xv(p);const f=!1,m=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,f,p);i=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Km("validationData including sample weights is not supported yet."):new Ym(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(l,u,null,null,e,p);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(i[0].shape[0]*(1-r.validationSplit)),e=i[0].shape[0];c=vv(i,t,e),a=i,i=vv(i,0,t),h=vv(s,t,e),o=s,s=vv(s,0,t),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const x=i.concat(s).concat(d);t.checkTrainableWeightsConsistency();const v=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let w,_;y?(t.makeTestFunction(),w=t.testFunction,_=b.slice().concat(b.map(t=>"val_"+t))):(w=null,g=[],_=b.slice());const S=Mx(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f){null==i&&(i=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,i,p,"steps_per_epoch");let y;null!=g&&(y=Yg(0,g)),null==a&&(a=1);const{callbackList:x,history:v}=Ex(o,a,s,d,g,p,i,m,h);x.setModel(t),t.history=v,await x.onTrainBegin(),t.stopTraining_=!1;for(let b=d;b<s;++b){await x.onEpochBegin(b);const s={};{if("batch"===c)throw new Km("batch shuffling is not implemneted yet");c&&J(y);const a=td(y),o=wv(g,i);for(let c=0;c<o.length;++c){const h={};if(await x.onBatchBegin(c,h),Jo(()=>{const d=o[c][0],p=o[c][1],f=Zg(a,d,p-d);h.batch=c,h.size=p-d;const g=bv(n,f),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,Qo(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,i);for(let t=0;t<r.length;++t){const n=r[t],i=e[t];Qo(i),s["val_"+n]=i}}}),await x.onBatchEnd(c,h),yx(h),t.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(b,s),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,v,x,b,p,r.epochs,r.verbose,S,w,g,r.shuffle,_,r.initialEpoch,null)}finally{t.isTraining=!1,Sv(i,e),Sv(s,n),Sv(a,e),Sv(o,n),Sv(c,l),Sv(h,u),null!=d&&Zo(d)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(st(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),st(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),st(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),st(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),st(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const i=null!=n.validationData;let s,a;if(i)if(yv(n.validationData))st(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new Km("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=i?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const c=Mx(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Ex(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,i,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:i}=mv(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const a=[];if(null!=n.classWeight){const e=dv(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await pv(i[t],null,e[t]))}const u=r.concat(i).concat(a),p=o(u);Zo(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];s[e]=n,Qo(n)}await d.onBatchEnd(h,s),yx(s),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(i){let e;e=yv(n.validationData)?ng(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):ng(t.evaluate(s,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],i=n[1],s=this.makeTrainFunction()(r.concat(i)),a=[];for(const o of s){const t=await o.data();a.push(t[0])}return Zo(s),Sv(n[0],t),Sv(n[1],e),eg(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,i=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||e.push({name:r[s].originalName,tensor:i[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Yo().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Yo().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=rg(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>rg(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=rg(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[rg(Xx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>rg(Xx(t)));{const t={};for(const e in this.metrics)t[e]=rg(Xx(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Ax(ev(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=ig(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>ig(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=ig(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>ig(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=ig(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=js(t);if(0===e.length)throw new Ym(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Ym(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Ym("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ls(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+rv,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:i}=await Ls(await this.optimizer.getWeights(),t);n.specs.push(...i),n.data=zs([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Yx(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Yx(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Cv.className="Model",ko(Cv);class Iv extends Cv{}async function kv(t,e){"modelTopology"in t||(t={modelTopology:t});let n=(t=t).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ax(ev(n),e);if(null!=t.weightsManifest){const e=await Oa(t.weightsManifest,t.pathPrefix,r.weights.map(t=>t.originalName)),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),Zo(e)}return r}Iv.className="Functional",ko(Iv);class Rv extends Cv{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Zy("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new Ym(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Rv||t instanceof Cv;let n;if(e){if(n=t,1!==n.outputs.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ym("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Ym("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=mx({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Ym(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=px(this.outputs[0])}this.inboundNodes=[],new cx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(nx(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Cv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let i,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Ym("Legacy serialization format not supported yet.");i=e}else st(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=e.layers,delete e.layers,s=e;const a=new t(s);if(!(a instanceof Rv))throw new Km("Sequential.fromConfig called on non-Sequential input: "+a);for(const o of i){const t=Ax(o,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(t){if(null==this.model)throw new Ym("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Ym("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function Nv(t){return new Cv(t)}function Lv(t){return new Rv(t)}function Dv(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const n=Xs(t,e);if(0===n.length)n.push(qa(t,e));else if(n.length>1)throw new Ym(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Ym("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let i=r.modelTopology;null!=i.model_config&&(i=i.model_config);const s=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&s,o=Ax(ev(i),void 0,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Ym("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=Ds(t,e),r={},i=[];return e.forEach(t=>{"optimizer"===t.group?i.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]}),{modelWeights:r,optimizerWeights:i}}(r.weightData,r.weightSpecs);o.loadWeights(t,s),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),Zo(t),Zo(e.map(t=>t.tensor))}return o}(t,0,e)}(t,e)}function Pv(t){return mx(t)}function Ov(t,e){Tx.registerCallbackConstructor(t,e)}Rv.className="Sequential",ko(Rv);class Fv extends Co{getConfig(){return{}}}class zv extends Fv{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Km(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Qu(t)}(t,e)}}zv.className="elu",ko(zv);class Bv extends Fv{apply(t){return Nh(t)}}Bv.className="selu",ko(Bv);class Uv extends Fv{apply(t){return Sh(t)}}Uv.className="relu",ko(Uv);class $v extends Fv{apply(t){return Jo(()=>Xc(6,Sh(t)))}}$v.className="relu6",ko($v);class qv extends Fv{apply(t){return t}}qv.className="linear",ko(qv);class Vv extends Fv{apply(t){return mu(t)}}Vv.className="sigmoid",ko(Vv);class Hv extends Fv{apply(t){return function(t){return Jo(()=>{const e=cl(.5,pl(.2,t));return Cu(e,0,1)})}(t)}}Hv.className="hardSigmoid",ko(Hv);class Wv extends Fv{apply(t){return _c(t)}}Wv.className="softplus",ko(Wv);class Gv extends Fv{apply(t){return function(t){return Jo(()=>dl(t,cl(Nl(t),1)))}(t)}}Gv.className="softsign",ko(Gv);class jv extends Fv{apply(t){return yu(t)}}jv.className="tanh",ko(jv);class Xv extends Fv{apply(t,e=-1){return qh(t,e)}}Xv.className="softmax",ko(Xv);class Yv extends Fv{apply(t,e=-1){return Ec(t,e)}}Yv.className="logSoftmax",ko(Yv);class Kv extends Fv{apply(t,e=1){return Jo(()=>pl(mu(pl(t,e)),t))}}Kv.className="swish",ko(Kv);class Jv extends Fv{apply(t){return Jo(()=>pl(t,yu(_c(t))))}}function Zv(t){return t.getClassName()}function Qv(t,e={}){return lg(t,Io.getMap().classNameMap,e,"activation")}function tb(t){if(null==t)return Qv({className:"linear",config:{}});if("string"==typeof t){const e={};return e.className=t,e.config={},Qv(e)}return t instanceof Fv?t:Qv(t)}function eb(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Jv.className="mish",ko(Jv);class nb extends Co{}class rb extends nb{constructor(t){super(),eb(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Jo(()=>{let e=Hc([1]);return this.hasL1&&(e=cl(e,Tc(pl(this.l1,Nl(t))))),this.hasL2&&(e=cl(e,Tc(pl(this.l2,oy(t))))),hu(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}rb.className="L1L2",ko(rb);const ib={l1l2:"L1L2"};function sb(t){return ag(t)}function ab(t,e={}){return lg(t,Io.getMap().classNameMap,e,"regularizer")}function ob(t){return null==t?null:"string"==typeof t?ab({className:t in ib?ib[t]:t,config:{}}):t instanceof nb?t:ab(t)}class lb extends dx{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ex(t);let n=Sh(t);return null!=this.maxValue&&(n=Cu(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}lb.className="ReLU",ko(lb);class ub extends dx{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ex(t);return fc(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ub.className="LeakyReLU",ko(ub);class cb extends dx{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ly(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ob(t.alphaRegularizer),this.alphaConstraint=Eg(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Ym("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=nx(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new ox({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ex(t),ch(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ny(this.alphaInitializer),alphaRegularizer:sb(this.alphaRegularizer),alphaConstraint:Mg(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}cb.className="PReLU",ko(cb);class hb extends dx{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Km(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ex(t);return Qu(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}hb.className="ELU",ko(hb);class db extends dx{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ex(t);return pl(n,Aa(lc(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}db.className="ThresholdedReLU",ko(db);class pb extends dx{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Xv).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ex(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function fb(t,e,n){if("number"==typeof t)return Zm(t,e);if(t.length!==e)throw new Ym(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let i=0;i<e;++i){const s=t[i];if((r=s)!==parseInt(r.toString(),10))throw new Ym(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t;var r}function mb(t,e,n,r,i=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(i-1))+1,Math.floor((s+r-1)/r)}function gb(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Xg([n-e,0]);else{if("same"!==r)throw new Ym(`Unsupport padding mode: ${r}.`);t*=e}return t}function yb(t,e){return Jo(()=>(Fg(e),"channelsFirst"===e?Ya(t,[0,2,3,1]):t))}function xb(t,e){return Jo(()=>(Fg(e),"channelsFirst"===e?Ya(t,[0,2,3,4,1]):t))}function vb(t,e,n,r=[1,1],i="valid",s,a,o=null){return Jo(()=>{if(null==s&&(s="channelsLast"),Fg(s),3!==t.rank&&4!==t.rank)throw new Ym(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Ym(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=yb(t,s);if("causal"===i)throw new Km("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Id({x:l,filter:e,strides:r,pad:"same"===i?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Ya(l,[0,3,1,2])),l})}pb.className="Softmax",ko(pb);class bb extends dx{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bb.verifyArgs(e),this.rank=t,fg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Km(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=fb(e.kernelSize,t,"kernelSize"),this.strides=fb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,zg(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fg(this.dataFormat),this.activation=tb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Eg(e.biasConstraint),this.biasRegularizer=ob(e.biasRegularizer),this.activityRegularizer=ob(e.activityRegularizer),this.dilationRate=fb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ym("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ym("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ym("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(Qm("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!pg(t.kernelSize,"number",1,3))throw new Ym(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Zv(this.activation),useBias:this.useBias,biasInitializer:Ny(this.biasInitializer),biasRegularizer:sb(this.biasRegularizer),activityRegularizer:sb(this.activityRegularizer),biasConstraint:Mg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class wb extends bb{constructor(t,e){super(t,e),this.kernel=null,wb.verifyArgs(e),this.filters=e.filters,fg(this.filters,"filters"),this.kernelInitializer=Ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Eg(e.kernelConstraint),this.kernelRegularizer=ob(e.kernelRegularizer)}build(t){t=nx(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Ym("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Jo(()=>{let e;t=ex(t);const n=null==this.bias?null:this.bias.read(),r=gg(this.activation.getClassName());if(null!=r&&2===this.rank)e=vb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,i="valid",s,a=1){return Jo(()=>{if(null==s&&(s="channelsLast"),Fg(s),3!==t.shape.length)throw new Ym(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Ym(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Ym(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===s&&(t=Ya(t,[0,2,1])),"causal"===i)throw new Km("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Du(t,e,r,"same"===i?"same":"valid","NWC",a);return null!=n&&(o=uy(o,n)),o})}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=vb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Km("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],i="valid",s,a){return Jo(()=>{if(null==s&&(s="channelsLast"),Fg(s),4!==t.rank&&5!==t.rank)throw new Ym(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Ym(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=xb(t,s);if("causal"===i)throw new Km("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Fu(o,e,r,"same"===i?"same":"valid","NDHWC",a),null!=n&&(o=uy(o,n)),"channelsFirst"===s&&(o=Ya(o,[0,4,1,2,3])),o})}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=nx(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<n.length;++i){const t=mb(n[i],this.kernelSize[i],this.padding,this.strides[i],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[i]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ny(this.kernelInitializer),kernelRegularizer:sb(this.kernelRegularizer),kernelConstraint:Mg(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Ym("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class _b extends wb{constructor(t){super(2,t),_b.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!pg(t.kernelSize,"number",1,2))throw new Ym(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}_b.className="Conv2D",ko(_b);class Sb extends wb{constructor(t){super(3,t),Sb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Ym(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Sb.className="Conv3D",ko(Sb);class Mb extends _b{constructor(t){if(super(t),this.inputSpec=[new ox({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=nx(t)).length)throw new Ym("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ox({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Jo(()=>{let e=ex(t);if(4!==e.shape.length)throw new Ym("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let i,s;"channelsFirst"===this.dataFormat?(i=2,s=3):(i=1,s=2);const a=n[i],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,gb(a,c,l,this.padding),gb(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Ya(e,[0,2,3,1]));let p=Ou(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Ya(p,[0,3,1,2])),null!=this.bias&&(p=uy(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(t){const e=(t=nx(t)).slice();let n,r,i;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3):(n=3,r=1,i=2);const s=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=gb(e[r],o,s,this.padding),e[i]=gb(e[i],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Mb.className="Conv2DTranspose",ko(Mb);class Tb extends Sb{constructor(t){if(super(t),this.inputSpec=[new ox({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(5!==(t=nx(t)).length)throw new Ym("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ox({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Jo(()=>{let e=ex(t);if(5!==e.shape.length)throw new Ym("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let i,s,a;"channelsFirst"===this.dataFormat?(a=2,i=3,s=4):(a=1,i=2,s=3);const o=n[a],l=n[i],u=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,gb(o,p,c,this.padding),gb(l,f,h,this.padding),gb(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Ya(e,[0,2,3,4,1]));let y=Bu(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ya(y,[0,4,1,2,3])),null!==this.bias&&(y=uy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(t){const e=(t=nx(t)).slice();let n,r,i,s;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3,s=4):(n=4,r=1,i=2,s=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=gb(e[r],u,a,this.padding),e[i]=gb(e[i],c,o,this.padding),e[s]=gb(e[s],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Tb.className="Conv3DTranspose",ko(Tb);class Eb extends wb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Ym("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Ym("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Ym(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ly(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ob(e.depthwiseRegularizer),this.depthwiseConstraint=Eg(e.depthwiseConstraint),this.pointwiseInitializer=Ly(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ob(e.pointwiseRegularizer),this.pointwiseConstraint=Eg(e.pointwiseConstraint)}build(t){if((t=nx(t)).length<this.rank+2)throw new Ym(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Ym("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new ox({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Jo(()=>{let e;if(t=ex(t),1===this.rank)throw new Km("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Ya(t,[0,2,3,1])),e=Lh(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=uy(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Ya(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ny(this.depthwiseInitializer),t.pointwiseInitializer=Ny(this.pointwiseInitializer),t.depthwiseRegularizer=sb(this.depthwiseRegularizer),t.pointwiseRegularizer=sb(this.pointwiseRegularizer),t.depthwiseConstraint=Mg(this.depthwiseConstraint),t.pointwiseConstraint=Mg(this.pointwiseConstraint),t}}Eb.className="SeparableConv";class Ab extends Eb{constructor(t){super(2,t)}}Ab.className="SeparableConv2D",ko(Ab);class Cb extends wb{constructor(t){super(1,t),Cb.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!pg(t.kernelSize,"number",1,1))throw new Ym(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Cb.className="Conv1D",ko(Cb);class Ib extends dx{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Jo(()=>{if(t=ex(t),"channelsLast"===this.dataFormat){const e=ty(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ty(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ty(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ty(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ib.className="Cropping2D",ko(Ib);class kb extends dx{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fg(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,dg(Ng,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Jo(()=>{let e=ex(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Ya(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],i="nearest"===this.interpolation?Cp.resizeNearestNeighbor(e,[t,r]):Cp.resizeBilinear(e,[t,r]);return Ya(i,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Cp.resizeNearestNeighbor(e,[t,r]):Cp.resizeBilinear(e,[t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}kb.className="UpSampling2D",ko(kb);class Rb extends bb{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ly(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Eg(t.depthwiseConstraint),this.depthwiseRegularizer=ob(t.depthwiseRegularizer)}build(t){if((t=nx(t)).length<4)throw new Ym(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Ym(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Jo(()=>{let e=function(t,e,n=[1,1],r="valid",i,s){return Jo(()=>{null==i&&(i="channelsLast"),Fg(i);let a=yb(t,i);if(4!==t.rank)throw new Ym(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Ym(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Wu(a,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===i&&(a=Ya(a,[0,3,1,2])),a})}(t=ex(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=uy(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=nx(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=mb(e,this.kernelSize[0],this.padding,this.strides[0]),s=mb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,i,s]:[t[0],i,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ny(this.depthwiseInitializer),t.depthwiseRegularizer=sb(this.depthwiseRegularizer),t.depthwiseConstraint=Mg(this.depthwiseRegularizer),t}}function Nb(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Ym("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function i(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=i(e),constants:n=i(n)}}function Lb(t,e,n,r=!1,i,s,a=!1,o=!1){return Jo(()=>{const l=e.shape.length;if(l<3)throw new Ym(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Yg(2,l));if(e=Ya(e,u),null!=s)throw new Km("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=Aa(Aa(i,"bool"),"float32")).rank===l-1&&(i=nc(i,-1)),i=Ya(i,u)),r&&(e=Th(e,0),null!=i&&(i=Th(i,0)));const c=[];let h,d=n;const p=e.shape[0],f=ud(e);let m,g;null!=i&&(m=ud(i));for(let e=0;e<p;++e){const n=f[e],r=Jo(()=>t(n,d));if(null==i)h=r[0],d=r[1];else{const t=Jo(()=>{const t=m[e],n=kl(eh(t),t);return{output:cl(pl(r[0],t),pl(d[0],n)),newStates:d.map((e,i)=>cl(pl(r[1][i],t),pl(e,n)))}});h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=Kh(c,1)),[h,g,d]})}Rb.className="DepthwiseConv2D",ko(Rb);class Db extends dx{constructor(t){let e;if(super(t),null==t.cell)throw new Ym("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new qb({cells:t.cell}):t.cell,null==e.stateSize)throw new Ym("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new ox({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Yg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Qy(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Jo(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Km("Constants support is not implemented in RNN yet.");Qy(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new ox({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ht(this.stateSpec.map(t=>t.shape[t.shape.length-1]),i))throw new Ym(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(t=>new ox({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Jo(()=>{if(!this.stateful)throw new jm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>Hc([n,t])):this.states_=[Hc([n,this.cell.stateSize])];else if(null==t)Zo(this.states_),null!=this.keptStates&&(Zo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>Hc([n,t])):this.states_[0]=Hc([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Ym(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Zo(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,i];if(!ht(r.shape,s))throw new Ym(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>Qo(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=Nb(t,n,r,this.numConstants);t=i.inputs,n=i.initialState,r=i.constants;let s=[],a=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new ox({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof lx){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Jo(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let i=null==e?null:e.initialState;t=ex(t),null==i&&(i=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==s)throw new Ym(`RNN Layer has ${s} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Lb((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]},t,i,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(t){return Jo(()=>{let e=Hc(t.shape);return e=Tc(e,[1,2]),e=Jg(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?ry(e,[1,t]):e):this.cell.stateSize>1?[ry(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Db.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Ax(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Db.className="RNN",ko(Db);class Pb extends dx{}class Ob extends Pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,fg(this.units,"units"),this.activation=tb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ob(t.kernelRegularizer),this.recurrentRegularizer=ob(t.recurrentRegularizer),this.biasRegularizer=ob(t.biasRegularizer),this.kernelConstraint=Eg(t.kernelConstraint),this.recurrentConstraint=Eg(t.recurrentConstraint),this.biasConstraint=Eg(t.biasConstraint),this.dropout=jg([1,Xg([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jg([1,Xg([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=nx(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Jo(()=>{if(2!==(t=t).length)throw new Ym(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vb({ones:()=>eh(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vb({ones:()=>eh(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;i=sy(null!=s?pl(t,s):t,this.kernel.read()),null!=this.bias&&(i=uy(i,this.bias.read())),null!=a&&(n=pl(n,a));let o=cl(i,sy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zv(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:sb(this.kernelRegularizer),recurrentRegularizer:sb(this.recurrentRegularizer),biasRegularizer:sb(this.biasRegularizer),activityRegularizer:sb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ob.className="SimpleRNNCell",ko(Ob);class Fb extends Db{constructor(t){t.cell=new Ob(t),super(t)}call(t,e){return Jo(()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return new t(e)}}Fb.className="SimpleRNN",ko(Fb);class zb extends Pb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Ym("GRUCell does not support reset_after parameter set to true.");this.units=t.units,fg(this.units,"units"),this.activation=tb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=tb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ob(t.kernelRegularizer),this.recurrentRegularizer=ob(t.recurrentRegularizer),this.biasRegularizer=ob(t.biasRegularizer),this.kernelConstraint=Eg(t.kernelConstraint),this.recurrentConstraint=Eg(t.recurrentConstraint),this.biasConstraint=Eg(t.biasConstraint),this.dropout=jg([1,Xg([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jg([1,Xg([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=nx(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Jo(()=>{if(2!==(t=t).length)throw new Ym(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vb({ones:()=>eh(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vb({ones:()=>eh(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=pl(t,i[0]));let u=sy(t,this.kernel.read());this.useBias&&(u=uy(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=pl(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=Gh(c,[2*this.units,this.units],c.rank-1),p=sy(r,h),[f,m,g]=Gh(u,3,u.rank-1),[y,x]=Gh(p,2,p.rank-1);a=this.recurrentActivation.apply(cl(f,y)),o=this.recurrentActivation.apply(cl(m,x));const v=sy(pl(o,r),d);l=this.activation.apply(cl(g,v));const b=cl(pl(a,r),pl(cl(1,wc(a)),l));return[b,b]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zv(this.activation),recurrentActivation:Zv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:sb(this.kernelRegularizer),recurrentRegularizer:sb(this.recurrentRegularizer),biasRegularizer:sb(this.biasRegularizer),activityRegularizer:sb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}zb.className="GRUCell",ko(zb);class Bb extends Db{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new zb(t),super(t)}call(t,e){return Jo(()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Bb.className="GRU",ko(Bb);class Ub extends Pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,fg(this.units,"units"),this.activation=tb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=tb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ly(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ob(t.kernelRegularizer),this.recurrentRegularizer=ob(t.recurrentRegularizer),this.biasRegularizer=ob(t.biasRegularizer),this.kernelConstraint=Eg(t.kernelConstraint),this.recurrentConstraint=Eg(t.recurrentConstraint),this.biasConstraint=Eg(t.biasConstraint),this.dropout=jg([1,Xg([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jg([1,Xg([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=nx(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends fy{apply(e,r){const i=t.apply([n]),s=(new gy).apply([n]),a=t.apply([2*n]);return ny(ny(i,s),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Jo(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Ym(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vb({ones:()=>eh(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vb({ones:()=>eh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=pl(t,s[0]));let h=sy(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=pl(r,a[0])),h=cl(h,sy(r,this.recurrentKernel.read())),this.useBias&&(h=uy(h,this.bias.read()));const[d,p,f,m]=Gh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=cl(pl(l,i),pl(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=pl(c,this.activation.apply(u));return[g,g,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zv(this.activation),recurrentActivation:Zv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:sb(this.kernelRegularizer),recurrentRegularizer:sb(this.recurrentRegularizer),biasRegularizer:sb(this.biasRegularizer),activityRegularizer:sb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Ub.className="LSTMCell",ko(Ub);class $b extends Db{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ub(t),super(t)}call(t,e){return Jo(()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}$b.className="LSTM",ko($b);class qb extends Pb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Jo(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const i=[];let s;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],s=0===a?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),i.push(s.slice(1))}n=[];for(const t of i.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;Qy(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{$g("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const i of e.cells)r.push(Ax(i,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return sx(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,i=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],i[t]])}ax(e)}}function Vb(t){const{ones:e,rate:n,training:r=!1,count:i=1,dropoutFunc:s}=t,a=()=>null!=s?s(e(),n):cy(e(),n),o=()=>hy(a,e,r);return!i||i<=1?Qo(o().clone()):Array(i).fill(void 0).map(o).map(t=>Qo(t.clone()))}qb.className="StackedRNNCells",ko(qb);class Hb extends Db{constructor(t){if(t.unroll)throw new Km("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Km("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ox({ndim:5})]}call(t,e){return Jo(()=>{if(null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Ym("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Jo(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),i=Hc([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){Jo(()=>{if(!this.stateful)throw new jm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),i=[r[0],...r.slice(2)];if(null==n[0])throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hc(i)):this.states_=[Hc(i)];else if(null==t)Zo(this.states_),null!=this.keptStates&&(Zo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hc(i)):this.states_[0]=Hc(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Ym(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Zo(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=i;if(!ht(n.shape,r))throw new Ym(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>Qo(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:i,strides:s,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=mb(l,r[0],i,s[0],a[0]),h=mb(u,r[1],i,s[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Hb.className="ConvRNN2D";class Wb extends Ub{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:i,dataFormat:s,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,fg(this.filters,"filters"),this.kernelSize=fb(n,2,"kernelSize"),this.kernelSize.forEach(t=>fg(t,"kernelSize")),this.strides=fb(r||1,2,"strides"),this.strides.forEach(t=>fg(t,"strides")),this.padding=i||"valid",zg(this.padding),this.dataFormat=s||"channelsLast",Fg(this.dataFormat),this.dilationRate=fb(a||1,2,"dilationRate"),this.dilationRate.forEach(t=>fg(t,"dilationRate"))}build(t){var e;t=nx(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Ym("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],i=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends fy{apply(t,e){return ey([n.apply([r]),Wc([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Jo(()=>{if(3!==t.length)throw new Ym(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],i=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vb({ones:()=>eh(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?pl(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vb({ones:()=>eh(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(i,d,0),f=o(i,d,1),m=o(i,d,2),g=o(i,d,3);const[y,x,v,b]=Gh(this.kernel.read(),4,3),[w,_,S,M]=this.useBias?Gh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,x,_,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,b,M,this.padding);const[T,E,A,C]=Gh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,T),f=this.recurrentConv(f,E),m=this.recurrentConv(m,A),g=this.recurrentConv(g,C);const I=this.recurrentActivation.apply(cl(l,p)),k=this.recurrentActivation.apply(cl(u,f)),R=cl(pl(k,s),pl(I,this.activation.apply(cl(c,m)))),N=pl(this.recurrentActivation.apply(cl(h,g)),this.activation.apply(R));return[N,N,R]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const i=Lu(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?uy(i,n,this.dataFormat):i}recurrentConv(t,e){return Lu(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Wb.className="ConvLSTM2DCell",ko(Wb);class Gb extends Hb{constructor(t){const e=new Wb(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Gb.className="ConvLSTM2D",ko(Gb);class jb extends dx{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return hy(()=>cy(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}jb.className="Dropout",ko(jb);class Xb extends jb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Xb.className="SpatialDropout1D",ko(Xb);class Yb extends dx{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,fg(this.units,"units"),this.activation=tb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Eg(t.kernelConstraint),this.biasConstraint=Eg(t.biasConstraint),this.kernelRegularizer=ob(t.kernelRegularizer),this.biasRegularizer=ob(t.biasRegularizer),this.activityRegularizer=ob(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=nx(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=nx(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t),r=gg(this.activation.getClassName());let i;return null!=r?i=sy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(i=sy(n,this.kernel.read()),null!=this.bias&&(i=uy(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:Zv(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:sb(this.kernelRegularizer),biasRegularizer:sb(this.biasRegularizer),activityRegularizer:sb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),biasConstraint:Mg(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Yb.className="Dense",ko(Yb);class Kb extends dx{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=nx(t);for(const e of t.slice(1))if(null==e)throw new Ym(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Gg(t,1)]}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);let n=ex(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Ya(n,t)}return function(t){if(t.rank<=1)throw new Ym(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Gg(t.shape,1)];return hu(t,e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Kb.className="Flatten",ko(Kb);class Jb extends dx{constructor(t){super(t),this.supportsMasking=!0,this.activation=tb(t.activation)}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t);return this.activation.apply(n)})}getConfig(){const t={activation:Zv(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Jb.className="Activation",ko(Jb);class Zb extends dx{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Jo(()=>{return t=ex(t),e=t,n=this.n,Jo(()=>{if(2!==e.shape.length)throw new Ym(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return ry(Jg(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Zb.className="RepeatVector",ko(Zb);class Qb extends dx{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let i=1,s=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==s)throw new Ym("Can only specifiy one unknown dimension.");s=o}else i*=t}const a=Gg(t);if(null!==s){if(0===i||a%i!=0)throw new Ym(n);r[s]=a/i}else if(a!==i)throw new Ym(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t),r=n.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return hu(n,i)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Qb.className="Reshape",ko(Qb);class tw extends dx{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Yg(1,t.dims.length+1);if(!ht(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ox({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=nx(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Ya(ex(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}tw.className="Permute",ko(tw);class ew extends dx{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ex(t);return Vl(th(n,this.maskValue),-1)}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t),r=Vl(th(n,this.maskValue),-1,!0);return pl(n,Aa(r,n.dtype))})}}ew.className="Masking",ko(ew);class nw extends dx{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ng(t.inputLength))}this.inputDim=t.inputDim,fg(this.inputDim,"inputDim"),this.outputDim=t.outputDim,fg(this.outputDim,"outputDim"),this.embeddingsInitializer=Ly(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ob(t.embeddingsRegularizer),this.activityRegularizer=ob(t.activityRegularizer),this.embeddingsConstraint=Eg(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Jo(()=>this.maskZero?(t=ex(t),th(t,gl(t))):null)}computeOutputShape(t){if(t=nx(t),null==this.inputLength)return[...t,this.outputDim];const e=ng(this.inputLength);if(e.length!==t.length-1)throw new Ym(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const i=e[r],s=t[r+1];if(null!=i&&null!=s&&i!==s)throw new Ym(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==i&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);let n=ex(t);"int32"!==n.dtype&&(n=Kg(n,"int32"));const r=ay(this.embeddings.read(),hu(n,[n.size]));return hu(r,nx(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ny(this.embeddingsInitializer),embeddingsRegularizer:sb(this.embeddingsRegularizer),activityRegularizer:sb(this.activityRegularizer),embeddingsConstraint:Mg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}nw.className="Embedding",ko(nw);class rw extends dx{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Km}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],s=e[r];if(null==i||null==s||i<0||s<0)n.push(null);else if(1===i)n.push(s);else if(1===s)n.push(i);else{if(i!==s)throw new Ym("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(i)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[nx(t)]),(t=t).length<2)throw new Ym(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const i of t)null!=i&&null!==i[0]&&e.push(i[0]);if(e=cg(e),e.length>1)throw new Ym(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let i=1;i<t.length;++i){const e=null==t[i]?null:t[i].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===cg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Jo(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=Xg(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Jg(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],i=t.slice(1).concat([r]);let a=hu(s,[r].concat(Gg(t.slice(1))));a=Ya(a,[1,0]),a=hu(a,i),e.push(a),n=!0}else if(t>1){const r=Yg(1,t).concat([0]);e.push(Ya(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const i=r.rank;if(n)if(null==i){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=hu(Ya(hu(r,[-1,e]),[1,0]),n)}else if(i>1){const t=[i-1].concat(Yg(0,i-1));r=Ya(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=cg(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Jo(()=>{if(null==e)return null;if(!Array.isArray(e))throw new Ym("`mask` should be an Array");if(!Array.isArray(t))throw new Ym("`inputs` should be an Array");if(e.length!==t.length)throw new Ym(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:nc(t,0)))[0];for(let t=1;t<e.length-1;++t)n=Oc(n,e[t]);return n})}}class iw extends rw{constructor(t){super(t)}mergeFunction(t){return Jo(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=cl(e,t[n]);return e})}}iw.className="Add",ko(iw);class sw extends rw{constructor(t){super(t)}mergeFunction(t){return Jo(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=pl(e,t[n]);return e})}}sw.className="Multiply",ko(sw);class aw extends rw{constructor(t){super(t)}mergeFunction(t){return Jo(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=cl(e,t[n]);return pl(1/t.length,e)})}}aw.className="Average",ko(aw);class ow extends rw{constructor(t){super(t)}mergeFunction(t){return Jo(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ll(e,t[n]);return e})}}ow.className="Maximum",ko(ow);class lw extends rw{constructor(t){super(t)}mergeFunction(t){return Jo(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Xc(e,t[n]);return e})}}lw.className="Minimum",ko(lw);class uw extends rw{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Ym("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let i=!1;for(const t of n)if(ht(t,e)){i=!0;break}i||n.push(e)}if(n.length>1)throw new Ym("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Jo(()=>ey(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Ym("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const i of e.slice(1)){if(null==n[r]||null==i[r]){n[r]=null;break}n[r]+=i[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Ym("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Ym("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Ym(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Jo(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(Aa(eh(t[s]),"bool")):e[s].rank<t[s].rank?r.push(nc(e[s],-1)):r.push(e[s]);const i=fu(r,this.axis);return ql(i,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function cw(t,e){for(;t<0;)t+=e;return t}uw.className="Concatenate",ko(uw);class hw extends rw{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){st(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Km("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Ym(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Ym(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>cw(e,t[n].shape.length)):[cw(this.axes,n.shape.length),cw(this.axes,r.shape.length)],this.normalize&&(n=Cx(n,e[0]),r=Cx(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Km("batchDot is not implemented for tensors of 4D or higher rank yet");if(st(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),st(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Km("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,i=e.shape.length;null==n&&(n=[r-1,i-2]);const s=n;return Jo(()=>{let n,a;if(r>i){n=r-i;const t=[];for(let e=0;e<n;++e)t.push(1);e=hu(e,e.shape.concat(t))}else if(i>r){n=i-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=hu(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=s[0]===s[1]?Tc(pl(t,e),s[0]):Tc(pl(Ya(t,[1,0]),e),s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;a=ja(t,e,n,r)}if(n>0){let t;t=r>i?r+i-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=Yh(a,e)}return 1===a.shape.length&&(a=nc(a,1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[cw(this.axes,t.length),cw(this.axes,e.length)],n}computeOutputShape(t){st(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Km("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const i=e.concat(n);return 1===i.length&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}hw.className="Dot",ko(hw);class dw extends dx{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t);return hy(()=>cl(iy(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}dw.className="GaussianNoise",ko(dw);class pw extends dx{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Jo(()=>{this.invokeCallHook(t,e);const n=ex(t);return this.rate>0&&this.rate<1?hy(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return pl(n,iy(n.shape,1,t))},()=>n,e.training||!1):n})}}pw.className="GaussianDropout",ko(pw);class fw extends dx{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ex(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Jo(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return hy(()=>{const e=ex(t),r=-1.7580993408473766;let i=uc(vh(n),this.rate);i=Kg(i,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-s*r*this.rate,o=cl(pl(e,i),pl(cl(i,-1),r));return cl(pl(o,s),a)},()=>ex(t),e.training||!1)}return t})}}function mw(t,e,n,r,i,s=.001){let a;if(2===t.rank)a=wu(t,e,n,r,i,s);else if(3===t.rank)a=_u(t,e,n,r,i,s);else{if(4!==t.rank)throw new Km(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=Su(t,e,n,r,i,s)}return a}fw.className="AlphaDropout",ko(fw);class gw extends dx{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Ly(t.betaInitializer||"zeros"),this.gammaInitializer=Ly(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ly(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ly(t.movingVarianceInitializer||"ones"),this.betaConstraint=Eg(t.betaConstraint),this.gammaConstraint=Eg(t.gammaConstraint),this.betaRegularizer=ob(t.betaRegularizer),this.gammaRegularizer=ob(t.gammaRegularizer)}build(t){t=nx(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Ym(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ox({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Jo(()=>{const n=null!=e.training&&e.training,r=ex(t),i=r.shape,s=i.length,a=Yg(0,s),o=this.axis>=0?this.axis:this.axis+s;a.splice(o,1);const l=Zm(1,s);l[o]=i[o];const u=a.slice();u.sort();const c=!ht(u,Yg(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const t=hu(this.movingMean.read(),l),e=hu(this.movingVariance.read(),l),n=this.center?hu(this.beta.read(),l):null,i=this.scale?hu(this.gamma.read(),l):null;return mw(r,t,e,n,i,this.epsilon)}return mw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,i=.001){return ht(r.slice().sort(),Yg(0,t.rank-1))?function(t,e,n,r,i=.001){return Jo(()=>{const s=Jc(t,r),a=s.mean,o=s.variance;return[mw(t,a,o,n,e,i),a,o]})}(t,e,n,r,i):function(t,e,n,r,i=.001){return Jo(()=>{const s=Jc(t,r),a=s.mean,o=s.variance,l=[];for(const e of Yg(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=hu(a,l),c=hu(o,l),h=null==e?null:hu(e,l),d=null==n?null:hu(n,l);return[mw(t,u,c,d,h,i),a,o]})}(t,e,n,r,i)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Jo(()=>{const r=1-n,i=t.read(),s=pl(kl(i,e),r);t.write(kl(i,s))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),movingMeanInitializer:Ny(this.movingMeanInitializer),movingVarianceInitializer:Ny(this.movingVarianceInitializer),betaRegularizer:sb(this.betaRegularizer),gammaRegularizer:sb(this.gammaRegularizer),betaConstraint:Mg(this.betaConstraint),gammaConstraint:Mg(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}gw.className="BatchNormalization",ko(gw);class yw extends dx{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Ly(t.betaInitializer||"zeros"),this.gammaInitializer=Ly(t.gammaInitializer||"ones"),this.betaRegularizer=ob(t.betaRegularizer),this.gammaRegularizer=ob(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=nx(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: "+r);if(this.axis.length!==cg(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ex(t),r=n.shape,i=r.length;return Jo(()=>{let{mean:t,variance:e}=Jc(n,this.axis,!0);const s=Zm(1,i);for(const n of this.axis)s[n]=r[n];const a=t=>null!=t&&t.shape.length!==i?hu(t,s):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let n=0;n<i;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return t=ic(t,u),e=ic(e,u),o=ic(o,c),l=ic(l,c),mw(n,t,e,l,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),betaRegularizer:sb(this.betaRegularizer),gammaRegularizer:sb(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}yw.className="LayerNormalization",ko(yw);class xw extends dx{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Ym(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Ym(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Ym(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new ox({ndim:4})]}computeOutputShape(t){let e,n;return t=nx(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Jo(()=>{return e=ex(t),n=this.padding,r=this.dataFormat,Jo(()=>{if(4!==e.rank)throw new Ym(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ym("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Ym(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],rh(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function vw(t,e,n,r,i,s){return Jo(()=>{let a;Fg(i),Bg(s),zg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=yb(t,i);const o="same"===r?"same":"valid";return a="max"===s?Uc(t,e,n,o):du(t,e,n,o),"channelsFirst"===i&&(a=Ya(a,[0,3,1,2])),a})}function bw(t,e,n,r,i,s){return Jo(()=>{let a;Fg(i),Bg(s),zg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=xb(t,i);const o="same"===r?"same":"valid";return a="max"===s?$c(t,e,n,o):pu(t,e,n,o),"channelsFirst"===i&&(a=Ya(a,[0,4,1,2,3])),a})}xw.className="ZeroPadding2D",ko(xw);class ww extends dx{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Ym("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(fg(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Ym("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}fg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,zg(this.padding),this.inputSpec=[new ox({ndim:3})]}computeOutputShape(t){const e=mb((t=nx(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Jo(()=>{this.invokeCallHook(t,e),t=Jg(ex(t),2);const n=this.poolingFunction(ex(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yh(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class _w extends ww{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),vw(t,e,n,r,i,"max")}}_w.className="MaxPooling1D",ko(_w);class Sw extends ww{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),vw(t,e,n,r,i,"avg")}}Sw.className="AveragePooling1D",ko(Sw);class Mw extends dx{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Ym(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];fg(this.poolSize,"poolSize"),fg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fg(this.dataFormat),zg(this.padding),this.inputSpec=[new ox({ndim:4})]}computeOutputShape(t){t=nx(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=mb(e,this.poolSize[0],this.padding,this.strides[0]),n=mb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Jo(()=>(this.invokeCallHook(t,e),this.poolingFunction(ex(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Tw extends Mw{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),vw(t,e,n,r,i,"max")}}Tw.className="MaxPooling2D",ko(Tw);class Ew extends Mw{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),vw(t,e,n,r,i,"avg")}}Ew.className="AveragePooling2D",ko(Ew);class Aw extends dx{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Ym(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];fg(this.poolSize,"poolSize"),fg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fg(this.dataFormat),zg(this.padding),this.inputSpec=[new ox({ndim:5})]}computeOutputShape(t){t=nx(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=mb(e,this.poolSize[0],this.padding,this.strides[0]),n=mb(n,this.poolSize[1],this.padding,this.strides[1]),r=mb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Jo(()=>(this.invokeCallHook(t,e),this.poolingFunction(ex(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Cw extends Aw{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),bw(t,e,n,r,i,"max")}}Cw.className="MaxPooling3D",ko(Cw);class Iw extends Aw{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return Fg(i),zg(r),bw(t,e,n,r,i,"avg")}}Iw.className="AveragePooling3D",ko(Iw);class kw extends dx{constructor(t){super(t),this.inputSpec=[new ox({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Km}}class Rw extends kw{constructor(t){super(t||{})}call(t,e){return Jo(()=>{const e=ex(t);return Vc(e,1)})}}Rw.className="GlobalAveragePooling1D",ko(Rw);class Nw extends kw{constructor(t){super(t||{})}call(t,e){return Jo(()=>{const e=ex(t);return Mc(e,1)})}}Nw.className="GlobalMaxPooling1D",ko(Nw);class Lw extends dx{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fg(this.dataFormat),this.inputSpec=[new ox({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Km}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Dw extends Lw{call(t,e){return Jo(()=>{const e=ex(t);return"channelsLast"===this.dataFormat?Vc(e,[1,2]):Vc(e,[2,3])})}}Dw.className="GlobalAveragePooling2D",ko(Dw);class Pw extends Lw{call(t,e){return Jo(()=>{const e=ex(t);return"channelsLast"===this.dataFormat?Mc(e,[1,2]):Mc(e,[2,3])})}}Pw.className="GlobalMaxPooling2D",ko(Pw);class Ow extends dx{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Ax(e.layer,n);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class Fw extends Ow{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=nx(t)).length<3)throw new Ym("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=nx(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Jo(()=>Lb((t,n)=>[ex(this.layer.call(t,e)),[]],t=ex(t),[],!1,null,null,!1,!0)[1])}}Fw.className="TimeDistributed",ko(Fw);class zw extends Ow{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Ax(n),e.goBackwards=!0!==e.goBackwards;const r={};var i;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Ax(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,i=this.mergeMode,dg(Pg,"BidirectionalMergeMode",i),t.weights)throw new Km("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,i=this.forwardLayer.computeOutputShape(t);return Array.isArray(i)&&Array.isArray(i[0])||(i=[i]),i=i,this.returnState?(r=i.slice(1),e=i[0]):e=i[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):eg(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=Nb(t,n,r,this.numConstants);if(t=i.inputs,n=i.initialState,r=i.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Ym("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map(t=>new ox({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Km("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof lx;for(const l of s)if(l instanceof lx!==o)throw new Ym("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Jo(()=>{const n=e.initialState;let r,i,s,a;if(null==n)r=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Th(i,1)),"concat"===this.mergeMode?a=ey([r,i]):"sum"===this.mergeMode?a=cl(r,i):"ave"===this.mergeMode?a=pl(.5,cl(r,i)):"mul"===this.mergeMode?a=pl(r,i):null==this.mergeMode&&(a=[r,i]),this.returnState?null==this.mergeMode?a.concat(s):[a].concat(s):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){$g(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),$g(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Ax(e.layer);if(delete e.layer,null!=e.numConstants)throw new Km("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function Bw(t){return new fx(t)}function Uw(t){return new hb(t)}function $w(t){return new lb(t)}function qw(t){return new ub(t)}function Vw(t){return new cb(t)}function Hw(t){return new pb(t)}function Ww(t){return new db(t)}function Gw(t){return new Cb(t)}function jw(t){return new _b(t)}function Xw(t){return new Mb(t)}function Yw(t){return new Sb(t)}function Kw(t){return new Tb(t)}function Jw(t){return new Ab(t)}function Zw(t){return new Ib(t)}function Qw(t){return new kb(t)}function t_(t){return new Rb(t)}function e_(t){return new Jb(t)}function n_(t){return new Yb(t)}function r_(t){return new jb(t)}function i_(t){return new Xb(t)}function s_(t){return new Kb(t)}function a_(t){return new Zb(t)}function o_(t){return new Qb(t)}function l_(t){return new tw(t)}function u_(t){return new nw(t)}function c_(t){return new iw(t)}function h_(t){return new aw(t)}function d_(t){return new uw(t)}function p_(t){return new ow(t)}function f_(t){return new lw(t)}function m_(t){return new sw(t)}function g_(t){return new hw(t)}function y_(t){return new gw(t)}function x_(t){return new yw(t)}function v_(t){return new xw(t)}function b_(t){return new Sw(t)}function w_(t){return b_(t)}function __(t){return b_(t)}function S_(t){return new Ew(t)}function M_(t){return S_(t)}function T_(t){return S_(t)}function E_(t){return new Iw(t)}function A_(t){return E_(t)}function C_(t){return E_(t)}function I_(t){return new Rw(t)}function k_(t){return new Dw(t)}function R_(t){return new Nw(t)}function N_(t){return new Pw(t)}function L_(t){return new _w(t)}function D_(t){return new Tw(t)}function P_(t){return new Cw(t)}function O_(t){return new Bb(t)}function F_(t){return new zb(t)}function z_(t){return new $b(t)}function B_(t){return new Ub(t)}function U_(t){return new Fb(t)}function $_(t){return new Ob(t)}function q_(t){return new Gb(t)}function V_(t){return new Wb(t)}function H_(t){return new Db(t)}function W_(t){return new qb(t)}function G_(t){return new zw(t)}function j_(t){return new Fw(t)}zw.className="Bidirectional",ko(zw);const X_=R_,Y_=N_,K_=L_,J_=D_;function Z_(t){return new dw(t)}function Q_(t){return new pw(t)}function tS(t){return new fw(t)}function eS(t){return new ew(t)}function nS(t,e){return zx(t,e)}function rS(t,e){return qx(t,e)}function iS(t,e){return Vx(t,e)}function sS(t,e){return Bx(t,e)}function aS(t,e){return Hx(t,e)}function oS(t,e){return $x(t,e)}function lS(t,e){return function(t,e){return Jo(()=>{const n=Ux(t,e),r=function(t,e){return Jo(()=>Aa(Tc(Oc(Xu(t,1),Xu(e,0))),"float32"))}(t,e),i=cl(n,r);return Aa(Yu(lc(i,0),dl(n,i),0),"float32")})}(t,e)}function uS(t,e){return Px(t,e)}function cS(t,e){return kx(t,e)}function hS(t,e){return Rx(t,e)}function dS(t,e){return Rx(t,e)}function pS(t,e){return Rx(t,e)}function fS(t,e){return Ix(t,e)}function mS(t,e){return Ix(t,e)}function gS(t,e){return Ix(t,e)}function yS(t){return new rb(t)}function xS(t){return eb(e=t),new rb({l1:null!=e?e.l1:null,l2:0});var e}function vS(t){return eb(e=t),new rb({l2:null!=e?e.l2:null,l1:0});var e}class bS extends vx{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof Cv))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function wS(t,e){return t<e}function _S(t,e){return t>e}class SS extends bS{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new Km("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=wS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=_S:this.monitorFunc=wS,this.monitorFunc===wS&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===wS?1/0:-1/0}async onEpochEnd(t,e){await gx(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}const MS={earlyStopping:function(t){return new SS(t)}};var TS,ES;jt().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(TS||(TS={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(ES||(ES={}));const AS={};function CS(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};AS[t]=n}function IS(t){return AS[t]}function kS(t){delete AS[t]}function RS(t,e,n,r,i){const s=e.inputParams[t];if(s&&void 0!==s.inputIndexStart){const t=s.inputIndexStart,a=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?t+1:s.inputIndexEnd;if("tensor"===s.type)return NS(e.inputNames[s.inputIndexStart],n,r,i);if("tensors"===s.type)return e.inputNames.slice(t,a).map(t=>NS(t,n,r,i));const o=NS(e.inputNames.slice(t)[0],n,r,i),l=o.dataSync();return"number"===s.type?l[0]:Ft(o.shape,l)}const a=e.attrParams[t];return a&&a.value}function NS(t,e,n,r){const[i,s]=PS(t);if(null!=r){const t=r.getHashTableHandleByName(i);if(null!=t)return t}const a=n.currentContextIds.find(t=>!!e[DS(i,t)]);return void 0!==a?e[DS(i,a)][s]:void 0}function LS(t,e){const[n,r,i]=PS(t);return[DS(n,e&&e.currentContextId),r,i]}function DS(t,e){return e?`${t}-${e}`:t}function PS(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],r=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),r]}function OS(t,e,n){let r=RS("pad",t,e,n);if("explicit"===r){r=RS("explicitPaddings",t,e,n);const i=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)i[t][0]=r[2*t],i[t][1]=r[2*t+1];return i}return r}function FS(t){return t.kept?t:Ca(t)}const zS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],US=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],$S=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],qS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],VS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],HS=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],WS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],GS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],jS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],XS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],YS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],KS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],JS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ZS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],QS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],tM=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],eM=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],nM=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class rM{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[A,C,I,k,R,N,L,D,P,O,F,z,B,U,$,q,V,H,W].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],i=[],s=[],a=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?i.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let o=[];const l=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(a);h.forEach(t=>{const e=a[t];e.inputNames.forEach((t,n)=>{const[r,,i]=LS(t),s=a[r];if(null!=s.outputs){const t=s.outputs.indexOf(i);if(-1!==t){const i=`${r}:${t}`;e.inputNames[n]=i}}e.inputs.push(s),s.children.push(e)})}),0===Object.keys(c).length?h.forEach(t=>{const e=a[t];0===e.children.length&&l.push(e)}):Object.keys(c).forEach(t=>{const[e]=LS(t),n=a[e];null!=n&&(n.signatureKey=c[t],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(t=>{const[e]=LS(t),n=a[e];n&&(n.signatureKey=u[t],o.push(n))}):o=r;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const p={nodes:a,inputs:o,outputs:l,weights:i,placeholders:r,signature:e,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=IS(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let i;switch(n.type){case"string":i=sM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=sM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":i=mM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=mM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":i=oM(t.attr,n.tfName,n.defaultValue||0),void 0===i&&n.tfDeprecatedName&&(i=oM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":i=fM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=fM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":i=aM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=aM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":i=yM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=yM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":i=pM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=pM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":i=gM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=gM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":i=cM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=cM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":i=hM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=hM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":i=uM(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=uM(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:i,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const i=[],s=[];t.signature.inputArg.forEach(t=>{const[e]=LS(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lM(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,i.push(n),r[e]=n}),Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach((t,n)=>{const[i,,s]=LS(t),a=r[i];if(null!=a.outputs){const t=a.outputs.indexOf(s);if(-1!==t){const r=`${i}:${t}`;e.inputNames[n]=r}}e.inputs.push(a),a.children.push(e)})});const a=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=LS(a[t.name]),i=r[e];null!=i&&(i.defaultOutput=n,s.push(i))});const o=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function iM(t,n){const r=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const n=jt().global;if(void 0!==n.atob)return n.atob(t);if("undefined"!=typeof e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?r:r.toLowerCase()}function sM(t,e,n,r=!1){const i=t[e];return null!=i?iM(i.s,r):n}function aM(t,e,n){const r=t[e];return r?r.b:n}function oM(t,e,n){const r=t[e]||{},i=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof i?i:parseInt(i,10)}function lM(t){switch("string"==typeof t&&(t=TS[t]),t){case TS.DT_FLOAT:case TS.DT_HALF:return"float32";case TS.DT_INT32:case TS.DT_INT64:case TS.DT_INT8:case TS.DT_UINT8:return"int32";case TS.DT_BOOL:return"bool";case TS.DT_DOUBLE:return"float32";case TS.DT_STRING:return"string";default:return null}}function uM(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function cM(t,e,n){const r=t[e];return r&&r.type?lM(r.type):n}function hM(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>lM(t)):n}function dM(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function pM(t,e,n){const r=t[e];return r&&r.shape?dM(r.shape):n}function fM(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function mM(t,e,n,r=!1){const i=t[e];return i&&i.list&&i.list.s?i.list.s.map(t=>iM(t,r)):n}function gM(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>dM(t)):n}function yM(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class xM{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return NS(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return NS(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oM(this.node.rawAttrs,t,e);if(null!=n.s)return sM(this.node.rawAttrs,t,e);if(null!=n.b)return aM(this.node.rawAttrs,t,e);if(null!=n.shape)return pM(this.node.rawAttrs,t,e);if(null!=n.type)return cM(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fM(this.node.rawAttrs,t,e);if(null!=n.list.s)return mM(this.node.rawAttrs,t,e);if(null!=n.list.shape)return gM(this.node.rawAttrs,t,e);if(null!=n.list.b)return yM(this.node.rawAttrs,t,e);if(null!=n.list.type)return hM(this.node.rawAttrs,t,e)}return e}}function vM(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){st(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const i=t[r],s=e[r];st(i<0||s<0||i===s,()=>n+` Shapes ${t} and ${e} must match`)}}}function bM(t){return"number"!=typeof t&&!t.some(t=>t<0)}function wM(t,e,n){let r=_M(t,n);const i=!bM(r);if(i&&0===e.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(i&&e.forEach(t=>{r=_M(t.shape,r)}),!bM(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function _M(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const i=t[r],s=e[r];if(i>=0&&s>=0&&i!==s)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=i>=0?i:s}return n}class SM{constructor(t,e,n,r,i,s,a){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ml(0),Qo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),vM(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Qo(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Rs([],[0].concat(this.elementShape));const n=this.readMany(t);return vM(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Kh(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Rs([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return vM(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),fu(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,ud(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const i=0===n?0:e.size/n,s=[];Jo(()=>{e=hu(e,[1,n,i]);for(let n=0;n<t.length;++n){const a=[0,0===n?0:r[n-1],0],o=[1,t[n],i];s[n]=hu(gu(e,a,o),this.elementShape)}return s});const a=[];for(let o=0;o<t.length;o++)a[o]=o;this.writeMany(a,s)}}class MM{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);vM(e,t.shape,"TensorList shape mismatch: "),Qo(t)}),this.idTensor=Ml(0),this.maxNumElements=r,Qo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new MM([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);vM(t,this.elementShape,"TensorList shape mismatch: ");const r=wM(this.elementShape,this.tensors,t);return Jo(()=>{const t=this.tensors.map(t=>hu(t,r));return Kh(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=wM(this.elementShape,this.tensors,t),r=this.tensors.pop();return vM(r.shape,t,"TensorList shape mismatch: "),hu(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(vM(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qo(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);vM(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=wM(this.elementShape,this.tensors,e);return hu(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);vM(this.elementShape,e.shape,"TensorList shape mismatch: "),Qo(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);vM(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=wM(this.elementShape,this.tensors,n);return 0===t.length?Rs([],[0].concat(r)):Jo(()=>{const e=t.map(t=>hu(this.tensors[t],r));return Kh(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);vM(this.elementShape,e,"TensorList shape mismatch: ");const n=wM(this.elementShape,this.tensors,e);return 0===this.size()?Rs([],[0].concat(n)):Jo(()=>{const t=this.tensors.map(t=>hu(t,n));return fu(t,0)})}}function TM(t,e,n){const[r,i]=RS("fusedOps",t,e,n),s="biasadd"===r,a=!s,o="prelu"===i,l="fusedbatchnorm"===r,u=RS("numArgs",t,e,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=RS("strides",t,e,n),h=OS(t,e,n),d=RS("dataFormat",t,e,n).toUpperCase(),p=RS("dilations",t,e,n);let[f,m]=RS("args",t,e,n);return a&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:i,leakyreluAlpha:RS("leakyreluAlpha",t,e,n)}}function EM(t,e,n){return{boxes:RS("boxes",t,e,n),scores:RS("scores",t,e,n),maxOutputSize:RS("maxOutputSize",t,e,n),iouThreshold:RS("iouThreshold",t,e,n),scoreThreshold:RS("scoreThreshold",t,e,n),softNmsSigma:RS("softNmsSigma",t,e,n)}}class AM{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ml(0),this.tensorMap=new Map,Qo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ml(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Jo(()=>{const t=ud(e),r=n.length,i=t.length;st(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let e=0;e<r;e++){const r=n[e],i=t[e];Qo(i),this.tensorMap.set(r,i)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Jo(()=>{const t=[];for(let r=0;r<n.length;r++){const i=n[r],s=this.findWithDefault(i,e);t.push(s)}return Kh(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function CM(t,e,n,r){const i=((t,e,n)=>{switch(t.category){case"arithmetic":return Jo(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[cl(RS("a",t,e,n),RS("b",t,e,n))];case"AddN":return[$l(RS("tensors",t,e,n))];case"FloorMod":case"Mod":return[Kc(RS("a",t,e,n),RS("b",t,e,n))];case"Mul":return[pl(RS("a",t,e,n),RS("b",t,e,n))];case"RealDiv":case"Div":return[dl(RS("a",t,e,n),RS("b",t,e,n))];case"DivNoNan":return[Ku(RS("a",t,e,n),RS("b",t,e,n))];case"FloorDiv":return[hl(RS("a",t,e,n),RS("b",t,e,n))];case"Sub":return[kl(RS("a",t,e,n),RS("b",t,e,n))];case"Minimum":return[Xc(RS("a",t,e,n),RS("b",t,e,n))];case"Maximum":return[Ll(RS("a",t,e,n),RS("b",t,e,n))];case"Pow":return[Il(RS("a",t,e,n),RS("b",t,e,n))];case"SquaredDifference":return[Xh(RS("a",t,e,n),RS("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return Jo(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Nl(RS("x",t,e,n))];case"Acos":return[Bl(RS("x",t,e,n))];case"Acosh":return[Ul(RS("x",t,e,n))];case"Asin":return[Gl(RS("x",t,e,n))];case"Asinh":return[jl(RS("x",t,e,n))];case"Atan":return[Xl(RS("x",t,e,n))];case"Atan2":return[Yl(RS("x",t,e,n),RS("y",t,e,n))];case"Atanh":return[Kl(RS("x",t,e,n))];case"Ceil":return[Au(RS("x",t,e,n))];case"Complex":return[Is(RS("real",t,e,n),RS("imag",t,e,n))];case"Cos":return[Uu(RS("x",t,e,n))];case"Cosh":return[$u(RS("x",t,e,n))];case"Elu":return[Qu(RS("x",t,e,n))];case"Erf":return[tc(RS("x",t,e,n))];case"Exp":return[ec(RS("x",t,e,n))];case"Expm1":return[rc(RS("x",t,e,n))];case"Floor":return[ac(RS("x",t,e,n))];case"Log":return[vc(RS("x",t,e,n))];case"Log1p":return[bc(RS("x",t,e,n))];case"Imag":return[cc(RS("x",t,e,n))];case"Neg":return[wc(RS("x",t,e,n))];case"Reciprocal":return[_h(RS("x",t,e,n))];case"Real":return[wh(RS("x",t,e,n))];case"Relu":return[Sh(RS("x",t,e,n))];case"Round":return[kh(RS("x",t,e,n))];case"Selu":return[Nh(RS("x",t,e,n))];case"Sigmoid":return[mu(RS("x",t,e,n))];case"Sin":return[Oh(RS("x",t,e,n))];case"Sign":return[Ph(RS("x",t,e,n))];case"Sinh":return[Fh(RS("x",t,e,n))];case"Softplus":return[_c(RS("x",t,e,n))];case"Sqrt":return[fl(RS("x",t,e,n))];case"Square":return[ml(RS("x",t,e,n))];case"Tanh":return[yu(RS("x",t,e,n))];case"Tan":return[Qh(RS("x",t,e,n))];case"ClipByValue":return[Cu(RS("x",t,e,n),RS("clipValueMin",t,e,n),RS("clipValueMax",t,e,n))];case"Relu6":return[Mh(RS("x",t,e,n))];case"Rsqrt":return[Rh(NS(t.inputNames[0],e,n))];case"Prod":return[hh(RS("x",t,e,n),RS("axes",t,e,n))];case"LeakyRelu":return[fc(RS("x",t,e,n),RS("alpha",t,e,n))];case"Prelu":return[ch(RS("x",t,e,n),RS("alpha",t,e,n))];case"IsNan":return[pc(NS(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=RS("thenBranch",t,e,n),i=RS("elseBranch",t,e,n),s=RS("cond",t,e,n),a=RS("args",t,e,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[i].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=RS("body",t,e,n),i=RS("cond",t,e,n),s=RS("args",t,e,n),a=await n.functionMap[i].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(t=>t.id);let l=await a[0].data();a.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()});let u=s;for(;l[0];){const t=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map(t=>t.id);t.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const s=await n.functionMap[i].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return u}case"LoopCond":return[FS(RS("pred",t,e,n))];case"Switch":{const r=RS("pred",t,e,n);let i=RS("data",t,e,n);return i.kept||(i=FS(i)),(await r.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==NS(t,e,n));return r?[FS(NS(r,e,n))]:void 0}case"Enter":{const r=RS("frameName",t,e,n),i=RS("tensor",t,e,n);return n.enterFrame(r),[FS(i)]}case"Exit":{const r=RS("tensor",t,e,n);return n.exitFrame(),[FS(r)]}case"NextIteration":{const r=RS("tensor",t,e,n);return n.nextIteration(),[FS(r)]}case"TensorArrayV3":{const r=RS("size",t,e,n),i=RS("dtype",t,e,n),s=RS("elementShape",t,e,n),a=RS("dynamicSize",t,e,n),o=RS("clearAfterRead",t,e,n),l=RS("identicalElementShapes",t,e,n),u=RS("name",t,e,n),c=new SM(u,i,r,s,l,a,o);return n.addTensorArray(c),[c.idTensor,Ml(1)]}case"TensorArrayWriteV3":{const r=RS("tensorArrayId",t,e,n),i=RS("index",t,e,n),s=RS("tensor",t,e,n),a=n.getTensorArray(r.id);return a.write(i,s),[a.idTensor]}case"TensorArrayReadV3":{const r=RS("tensorArrayId",t,e,n),i=RS("index",t,e,n);return[n.getTensorArray(r.id).read(i)]}case"TensorArrayGatherV3":{const r=RS("tensorArrayId",t,e,n),i=RS("indices",t,e,n),s=RS("dtype",t,e,n);return[n.getTensorArray(r.id).gather(i,s)]}case"TensorArrayScatterV3":{const r=RS("tensorArrayId",t,e,n),i=RS("indices",t,e,n),s=RS("tensor",t,e,n),a=n.getTensorArray(r.id);return a.scatter(i,s),[a.idTensor]}case"TensorArrayConcatV3":{const r=RS("tensorArrayId",t,e,n),i=n.getTensorArray(r.id),s=RS("dtype",t,e,n);return[i.concat(s)]}case"TensorArraySplitV3":{const r=RS("tensorArrayId",t,e,n),i=RS("tensor",t,e,n),s=RS("lengths",t,e,n),a=n.getTensorArray(r.id);return a.split(s,i),[a.idTensor]}case"TensorArraySizeV3":{const r=RS("tensorArrayId",t,e,n);return[Ml(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=RS("tensorArrayId",t,e,n),i=n.getTensorArray(r.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const r=RS("tensorListId",t,e,n),i=RS("index",t,e,n),s=RS("tensor",t,e,n),a=n.getTensorList(r.id);return a.setItem(i,s),[a.idTensor]}case"TensorListGetItem":{const r=RS("tensorListId",t,e,n),i=RS("index",t,e,n),s=RS("elementShape",t,e,n),a=RS("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(i,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=RS("indices",t,e,n),i=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const i=Math.max(...e);if(null!=r&&-1!==r&&i>=r)throw new Error(`Max index must be < array size (${i}  vs. ${r})`);const s=new MM([],n,t.dtype,r),a=ud(t,0);return e.forEach((t,e)=>{s.setItem(t,a[e])}),s}(RS("tensor",t,e,n),r,RS("elementShape",t,e,n),RS("numElements",t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=RS("elementShape",t,e,n),i=RS("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const a=function(t,e,n){return new MM([],t,e,n)}(r,i,RS(s,t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListGather":{const r=RS("tensorListId",t,e,n),i=RS("indices",t,e,n),s=RS("elementShape",t,e,n),a=RS("elementDType",t,e,n);return[n.getTensorList(r.id).gather(i,a,s)]}case"TensorListStack":{const r=RS("tensorListId",t,e,n),i=RS("elementShape",t,e,n),s=RS("elementDType",t,e,n),a=RS("numElements",t,e,n);return[n.getTensorList(r.id).stack(i,s,a)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);vM(t.shape.slice(1),e,"TensorList shape mismatch: ");const i=ud(t);return new MM(i,e,r)}(RS("tensor",t,e,n),RS("elementShape",t,e,n),RS("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=RS("tensorListId",t,e,n),i=n.getTensorList(r.id),s=RS("dtype",t,e,n),a=RS("elementShape",t,e,n);return[i.concat(s,a)]}case"TensorListPushBack":{const r=RS("tensorListId",t,e,n),i=RS("tensor",t,e,n),s=n.getTensorList(r.id);return s.pushBack(i),[s.idTensor]}case"TensorListPopBack":{const r=RS("tensorListId",t,e,n),i=RS("elementShape",t,e,n),s=RS("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(i,s)]}case"TensorListSplit":{const r=RS("tensor",t,e,n),i=RS("elementShape",t,e,n),s=function(t,e,n){let r=0;const i=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const s=_M(t.shape.slice(1),n),a=0===r?0:t.size/r,o=Jo(()=>{const n=[];t=hu(t,[1,r,a]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:i[r-1],0],l=[1,e[r],a];n[r]=hu(gu(t,o,l),s)}return t.dispose(),n}),l=new MM([],n,t.dtype,e.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,RS("lengths",t,e,n),i);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return Jo(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=RS("stride",t,e,n),i=RS("pad",t,e,n),s=RS("dataFormat",t,e,n).toUpperCase(),a=RS("dilation",t,e,n);return[Du(RS("x",t,e,n),RS("filter",t,e,n),r,i,s,a)]}case"Conv2D":{const r=RS("strides",t,e,n),i=OS(t,e,n),s=RS("dataFormat",t,e,n).toUpperCase(),a=RS("dilations",t,e,n);return[Lu(RS("x",t,e,n),RS("filter",t,e,n),[r[1],r[2]],i,s,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:s,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=TM(t,e,n);return[Id({x:RS("x",t,e,n),filter:RS("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:s,dilations:a,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=TM(t,e,n);return[Nd({x:RS("x",t,e,n),filter:RS("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[a[1],a[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=RS("outputShape",t,e,n),i=RS("strides",t,e,n),s=OS(t,e,n);return[Ou(RS("x",t,e,n),RS("filter",t,e,n),r,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=RS("strides",t,e,n),i=OS(t,e,n),s=RS("dilations",t,e,n),a=RS("dataFormat",t,e,n).toUpperCase();return[Wu(RS("input",t,e,n),RS("filter",t,e,n),[r[1],r[2]],i,a,[s[1],s[2]])]}case"Conv3D":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("dataFormat",t,e,n).toUpperCase(),a=RS("dilations",t,e,n);return[Fu(RS("x",t,e,n),RS("filter",t,e,n),[r[1],r[2],r[3]],i,s,[a[1],a[2],a[3]])]}case"AvgPool":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("kernelSize",t,e,n);return[du(RS("x",t,e,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("kernelSize",t,e,n);return[Uc(RS("x",t,e,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("kernelSize",t,e,n),a=RS("includeBatchInIndex",t,e,n),{result:o,indexes:l}=qc(RS("x",t,e,n),[s[1],s[2]],[r[1],r[2]],i,a);return[o,l]}case"AvgPool3D":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("kernelSize",t,e,n);return[pu(RS("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("kernelSize",t,e,n);return[$c(RS("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=RS("strides",t,e,n),i=RS("pad",t,e,n),s=RS("dilations",t,e,n),a=r[1],o=r[2],l=s[1],u=s[2];return[ju(RS("x",t,e,n),RS("filter",t,e,n),[a,o],i,[l,u],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return Jo(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=RS("shape",t,e,n),i=RS("dtype",t,e,n);return[Al(r,RS("value",t,e,n),i)]}case"LinSpace":return[yc(RS("start",t,e,n),RS("stop",t,e,n),RS("num",t,e,n))];case"Multinomial":{const r=RS("logits",t,e,n),i=RS("numSamples",t,e,n),s=RS("seed",t,e,n);return[Qc(r,i,s)]}case"OneHot":{const r=RS("indices",t,e,n),i=RS("depth",t,e,n),s=RS("onValue",t,e,n),a=RS("offValue",t,e,n);return[Xa(r,i,s,a)]}case"Ones":return[Wc(RS("shape",t,e,n),RS("dtype",t,e,n))];case"OnesLike":return[eh(RS("x",t,e,n))];case"RandomUniform":return[vh(RS("shape",t,e,n),RS("minval",t,e,n),RS("maxval",t,e,n),RS("dtype",t,e,n))];case"Range":return[bh(RS("start",t,e,n),RS("stop",t,e,n),RS("step",t,e,n),RS("dtype",t,e,n))];case"TruncatedNormal":{const r=RS("shape",t,e,n),i=RS("mean",t,e,n),s=RS("stdDev",t,e,n),a=RS("seed",t,e,n);return[ad(r,i,s,RS("dtype",t,e,n),a)]}case"Zeros":return[Hc(RS("shape",t,e,n),RS("dtype",t,e,n))];case"ZerosLike":return[gl(RS("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:s,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=EM(t,e,n),u=await Cp.nonMaxSuppressionWithScoreAsync(r,i,s,a,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:s,iouThreshold:a,scoreThreshold:o}=EM(t,e,n),l=RS("padToMaxOutputSize",t,e,n),u=await Cp.nonMaxSuppressionPaddedAsync(r,i,s,a,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:s,iouThreshold:a,scoreThreshold:o}=EM(t,e,n);return[await Cp.nonMaxSuppressionAsync(r,i,s,a,o)]}case"Where":{const r=Aa(RS("condition",t,e,n),"bool"),i=[await dd(r)];return r.dispose(),i}case"ListDiff":return Dh(RS("x",t,e,n),RS("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return Jo(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=RS("x",t,e,n),i=RS("k",t,e,n),s=RS("sorted",t,e,n),a=sd(r,i,s);return[a.values,a.indices]}case"Unique":{const r=RS("x",t,e,n),i=od(r);return[i.values,i.indices]}case"UniqueV2":{const r=RS("x",t,e,n),i=RS("axis",t,e,n),s=od(r,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return Jo(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=RS("images",t,e,n),i=RS("size",t,e,n),s=RS("alignCorners",t,e,n),a=RS("halfPixelCenters",t,e,n);return[Cp.resizeBilinear(r,[i[0],i[1]],s,a)]}case"ResizeNearestNeighbor":{const r=RS("images",t,e,n),i=RS("size",t,e,n),s=RS("alignCorners",t,e,n),a=RS("halfPixelCenters",t,e,n);return[Cp.resizeNearestNeighbor(r,[i[0],i[1]],s,a)]}case"CropAndResize":{const r=RS("image",t,e,n),i=RS("boxes",t,e,n),s=RS("boxInd",t,e,n),a=RS("cropSize",t,e,n),o=RS("method",t,e,n),l=RS("extrapolationValue",t,e,n);return[Cp.cropAndResize(r,i,s,a,o,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return Jo(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=RS("default",t,e,n);return[NS(t.name,e,n)||r];case"Placeholder":return[NS(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[FS(RS("x",t,e,n))];case"IdentityN":return RS("x",t,e,n).map(t=>FS(t));case"Snapshot":return[FS(RS("x",t,e,n))];case"Shape":return[td(RS("x",t,e,n).shape,"int32")];case"ShapeN":return RS("x",t,e,n).map(t=>td(t.shape));case"Size":return[Ml(RS("x",t,e,n).size,"int32")];case"Rank":return[Ml(RS("x",t,e,n).rank,"int32")];case"NoOp":return[Ml(1)];case"Print":const i=RS("x",t,e,n),s=RS("data",t,e,n),a=RS("message",t,e,n),o=RS("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let t=0;t<s.length;t++)console.log(Array.prototype.slice.call(s[t].dataSync()).slice(0,o));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return Jo(()=>((t,e,n)=>{switch(t.op){case"Equal":return[Xu(RS("a",t,e,n),RS("b",t,e,n))];case"NotEqual":return[th(RS("a",t,e,n),RS("b",t,e,n))];case"Greater":return[lc(RS("a",t,e,n),RS("b",t,e,n))];case"GreaterEqual":return[uc(RS("a",t,e,n),RS("b",t,e,n))];case"Less":return[mc(RS("a",t,e,n),RS("b",t,e,n))];case"LessEqual":return[gc(RS("a",t,e,n),RS("b",t,e,n))];case"LogicalAnd":return[Oc(RS("a",t,e,n),RS("b",t,e,n))];case"LogicalNot":return[Fc(RS("a",t,e,n))];case"LogicalOr":return[zc(RS("a",t,e,n),RS("b",t,e,n))];case"Select":case"SelectV2":return[Yu(RS("condition",t,e,n),RS("a",t,e,n),RS("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return Jo(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ja(RS("a",t,e,n),RS("b",t,e,n),RS("transposeA",t,e,n),RS("transposeB",t,e,n))];case"Einsum":return[Zu(RS("equation",t,e,n),...RS("tensors",t,e,n))];case"Transpose":return[Ya(RS("x",t,e,n),RS("perm",t,e,n))];case"_FusedMatMul":const[r,i]=RS("fusedOps",t,e,n),s="biasadd"===r,a="prelu"===i,o=RS("numArgs",t,e,n),l=RS("leakyreluAlpha",t,e,n);if(s){if(a&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=RS("args",t,e,n);return[Ld({a:RS("a",t,e,n),b:RS("b",t,e,n),transposeA:RS("transposeA",t,e,n),transposeB:RS("transposeB",t,e,n),bias:u,activation:i,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return Jo(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[bu(RS("x",t,e,n),RS("mean",t,e,n),RS("variance",t,e,n),RS("offset",t,e,n),RS("scale",t,e,n),RS("epsilon",t,e,n))];case"LRN":return[xc(RS("x",t,e,n),RS("radius",t,e,n),RS("bias",t,e,n),RS("alpha",t,e,n),RS("beta",t,e,n))];case"Softmax":return[qh(RS("x",t,e,n))];case"LogSoftmax":return[Ec(RS("x",t,e,n))];case"SparseToDense":return[xd(RS("sparseIndices",t,e,n),RS("outputShape",t,e,n),RS("sparseValues",t,e,n),RS("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return Jo(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[Mc(RS("x",t,e,n),r,i)]}case"Mean":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[Vc(RS("x",t,e,n),r,i)]}case"Min":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[jc(RS("x",t,e,n),r,i)]}case"Sum":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[Tc(RS("x",t,e,n),r,i)]}case"All":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[ql(RS("x",t,e,n),r,i)]}case"Any":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[Vl(RS("x",t,e,n),r,i)]}case"ArgMax":{const r=RS("axis",t,e,n);return[Hl(RS("x",t,e,n),r)]}case"ArgMin":{const r=RS("axis",t,e,n);return[Wl(RS("x",t,e,n),r)]}case"Prod":{const r=RS("axis",t,e,n),i=RS("keepDims",t,e,n);return[hh(RS("x",t,e,n),r,i)]}case"Cumsum":{const r=RS("axis",t,e,n),i=RS("exclusive",t,e,n),s=RS("reverse",t,e,n);return[qu(RS("x",t,e,n),r,i,s)]}case"Bincount":const r=RS("x",t,e,n),i=RS("weights",t,e,n),s=RS("size",t,e,n);return[Mu(r,i,s)];case"DenseBincount":{const r=RS("x",t,e,n),i=RS("weights",t,e,n),s=RS("size",t,e,n),a=RS("binaryOutput",t,e,n);return[Vu(r,i,s,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return Jo(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=RS("n",t,e,n),i=RS("axis",t,e,n);let s=RS("tensors",t,e,n);return s=s.slice(0,r),[fu(s,i)]}case"Gather":{const r=RS("x",t,e,n),i=RS("indices",t,e,n);return[oc(r,Aa(i,"int32"),0)]}case"GatherV2":{const r=RS("axis",t,e,n),i=RS("batchDims",t,e,n),s=RS("x",t,e,n),a=RS("indices",t,e,n);return[oc(s,Aa(a,"int32"),r,i)]}case"Reverse":{const r=RS("dims",t,e,n),i=[];for(let t=0;t<r.length;t++)r[t]&&i.push(t);const s=RS("x",t,e,n);return[Th(s,i)]}case"ReverseV2":{const r=RS("axis",t,e,n),i=RS("x",t,e,n);return[Th(i,r)]}case"Slice":{const r=RS("begin",t,e,n),i=RS("size",t,e,n);return[gu(RS("x",t,e,n),r,i)]}case"StridedSlice":{const r=RS("begin",t,e,n),i=RS("end",t,e,n),s=RS("strides",t,e,n),a=RS("beginMask",t,e,n),o=RS("endMask",t,e,n),l=RS("ellipsisMask",t,e,n),u=RS("newAxisMask",t,e,n),c=RS("shrinkAxisMask",t,e,n),h=RS("x",t,e,n);return[Zh(h,r,i,s,a,o,l,u,c)]}case"Pack":return Jo(()=>{const r=RS("axis",t,e,n),i=RS("tensors",t,e,n),s=i[0].shape,a=Yh(i[0]).shape,o=i.map(t=>{const e=ht(t.shape,s);if(!e&&!ht(Yh(t).shape,a))throw new Error("the input tensors shape does not match");return e?t:hu(t,s)});return[Kh(o,r)]});case"Unpack":{const r=RS("axis",t,e,n),i=RS("tensor",t,e,n);return ud(i,r)}case"Tile":{const r=RS("reps",t,e,n);return[ic(RS("x",t,e,n),r)]}case"Split":case"SplitV":{const r=RS("axis",t,e,n),i=RS("numOrSizeSplits",t,e,n),s=RS("x",t,e,n);return Gh(s,i,r)}case"ScatterNd":{const r=RS("indices",t,e,n),i=RS("values",t,e,n),s=RS("shape",t,e,n);return[yd(r,i,s)]}case"GatherNd":{const r=RS("x",t,e,n),i=RS("indices",t,e,n);return[vd(r,i)]}case"SparseToDense":{const r=RS("sparseIndices",t,e,n),i=RS("outputShape",t,e,n),s=RS("sparseValues",t,e,n),a=RS("defaultValue",t,e,n);return[xd(r,s,i,s.dtype===a.dtype?a:Aa(a,s.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"sparse":return Jo(()=>((t,e,n)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:s,reverseIndexMap:a}=Rp.sparseFillEmptyRows(RS("indices",t,e,n),RS("values",t,e,n),RS("denseShape",t,e,n),RS("defaultValue",t,e,n));return[r,i,s,a]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=Rp.sparseReshape(RS("inputIndices",t,e,n),RS("inputShape",t,e,n),RS("newShape",t,e,n));return[r,i]}case"SparseSegmentMean":return[Rp.sparseSegmentMean(RS("data",t,e,n),RS("indices",t,e,n),RS("segmentIds",t,e,n))];case"SparseSegmentSum":return[Rp.sparseSegmentSum(RS("data",t,e,n),RS("indices",t,e,n),RS("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return Jo(()=>((t,e,n)=>{switch(t.op){case"FFT":return[Vh(RS("x",t,e,n))];case"IFFT":return[Hh(RS("x",t,e,n))];case"RFFT":return[jh(RS("x",t,e,n))];case"IRFFT":return[Wh(RS("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"string":return Jo(()=>((t,e,n)=>{switch(t.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=Np.stringNGrams(RS("data",t,e,n),RS("dataSplits",t,e,n),RS("separator",t,e,n),RS("nGramWidths",t,e,n),RS("leftPad",t,e,n),RS("rightPad",t,e,n),RS("padWidth",t,e,n),RS("preserveShortSequences",t,e,n));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:s}=Np.stringSplit(RS("input",t,e,n),RS("delimiter",t,e,n),RS("skipEmpty",t,e,n));return[r,i,s]}case"StringToHashBucketFast":return[Np.stringToHashBucketFast(RS("input",t,e,n),RS("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return Jo(()=>((t,e,n)=>{switch(t.op){case"Cast":return[Aa(RS("x",t,e,n),RS("dtype",t,e,n))];case"ExpandDims":{const r=RS("axis",t,e,n);return[nc(RS("x",t,e,n),r)]}case"Squeeze":{const r=RS("axis",t,e,n);return[Yh(RS("x",t,e,n),r)]}case"Reshape":return[hu(RS("x",t,e,n),RS("shape",t,e,n))];case"MirrorPad":return[Yc(RS("x",t,e,n),RS("padding",t,e,n),RS("mode",t,e,n))];case"PadV2":case"Pad":return[rh(RS("x",t,e,n),RS("padding",t,e,n),RS("constantValue",t,e,n))];case"SpaceToBatchND":{const r=RS("blockShape",t,e,n),i=RS("paddings",t,e,n);return[lh(RS("x",t,e,n),r,i)]}case"BatchToSpaceND":{const r=RS("blockShape",t,e,n),i=RS("crops",t,e,n);return[vu(RS("x",t,e,n),r,i)]}case"DepthToSpace":{const r=RS("blockSize",t,e,n),i=RS("dataFormat",t,e,n).toUpperCase();return[Hu(RS("x",t,e,n),r,i)]}case"BroadcastTo":return[Eu(RS("x",t,e,n),RS("shape",t,e,n))];case"BroadcastArgs":return[Tu(RS("s0",t,e,n),RS("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const i=RS("keyDType",t,e,n),s=RS("valueDType",t,e,n),a=new AM(i,s);return r.addHashTable(t.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const i=RS("tableHandle",t,e,n,r),s=RS("keys",t,e,n),a=RS("values",t,e,n),o=r.getHashTableById(i.id);return[await o.import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{const i=RS("tableHandle",t,e,n,r),s=RS("keys",t,e,n),a=RS("defaultValue",t,e,n),o=r.getHashTableById(i.id);return[await o.find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const i=RS("tableHandle",t,e,n,r);return[r.getHashTableById(i.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const i=IS(t.op);if(i&&i.customExecutor)return i.customExecutor(new xM(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Ht(i)?i.then(t=>[].concat(t)):[].concat(i)}class IM{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function kM(t,e,n,r){const i=new Set,s=[];let a=null,o=null;const l=new Set,u=Object.keys(t).map(t=>PS(t)[0]);let c=[];null!=r&&(c=r.map(t=>PS(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(DM(t)||PM(t)||OM(t))&&null==a&&(a=t,o=a.children.map(t=>t.name).filter(t=>i.has(t))),i.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{l.has(t.name)||(l.add(t.name),h.push(t))}):s.push(t.name))}return{inputs:t,outputs:e,usedNodes:i,missingInputs:s,dynamicNode:a,syncInputs:o}}const RM=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],NM=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],LM=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function DM(t){return RM.indexOf(t.op)>=0}function PM(t){return NM.indexOf(t.op)>=0}function OM(t){return LM.indexOf(t.op)>=0}class FM{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new FM(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=kM(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:s}=n;if(null!=i)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=e.map(t=>t.name),i=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:i}=n,s=[],a=Object.keys(i).map(t=>PS(t)[0]).map(e=>t.nodes[e]),o=t.initNodes;a.forEach(t=>{r.has(t.name)&&s.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&s.push(t)}),null!=o&&o.forEach(t=>{r.has(t.name)&&s.push(t)});const l=new Set,u=[];for(;s.length>0;){const t=s.pop();l.add(t.name),e[t.name]||u.push(t),t.children.forEach(t=>{!l.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>l.has(t.name))&&s.push(t)})}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[PS(t)[0]]),i=e.map(t=>PS(t)[0]);let s=i.map(t=>this.graph.nodes[t]);this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const a=this.getCompilationKey(r,s);let o=this.compiledMap.get(a);null==o&&(o=this.compile(t,s),this.compiledMap.set(a,o));const l={},u={};return Jo(()=>{const n=new IM(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,i]=PS(e),s=[];s[i]=t[e],r[n]=s});const s=this.getFrozenTensorIds(r),a={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=CM(e,r,n,this._resourceManager);if(Ht(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,s,i,a)}}return null==this.parent&&n.dispose(s),e.map(t=>NS(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,i,s,a){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(a[t.id]=(a[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const s=function(t,e,n){return e[DS(t,n.currentContextId)]}(t.name,n,r);null!=s&&s.forEach(t=>{if(t&&!t.kept&&!i.has(t.id)){const n=a[t.id];if(1===n){if(this.keepTensorForDebug){const[n,i]=LS(e.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][i]=t}else t.dispose();delete a[t.id]}else null!=n&&a[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(t=>t.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,r={},i={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=jt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(t){console.warn(t.message)}this.resetIntermediateTensors();const s=new IM(this.weightMap,r,i,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,s,e,n);const a=e.map(t=>NS(t,this.tensorsMap,s)),o=a.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),a}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const i=Object.keys(t),s=i.map(t=>this.graph.nodes[PS(t)[0]]),a=n.map(t=>PS(t)[0]);let o=a.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=kM(t,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),p=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=PS(e),i=[];i[r]=t[e],p[n]=i});const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const t=this.processStack(s,d,e,p,g,m,a,f,l);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(t=>!DM(t)&&!NS(t.name,p,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${i}]. Consider providing the following inputs: [${u}]. ${t}`)}return p}processStack(t,e,n,r,i,s,a,o,l){const u=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&RS("isConstant",t.node,r,n)&&([c]=LS(t.node.name,n)),null==r[t.node.name]){const h=CM(t.node,r,n,this._resourceManager);c||([c]=LS(t.node.name,n));const d=n.currentContext;Ht(h)?u.push(h.then(u=>(r[c]=u,n.currentContext=d,this.checkTensorForDisposal(c,t.node,r,n,s,a,o),this.processChildNodes(t.node,e,n,r,i,l),u))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,s,a,o),this.processChildNodes(t.node,e,n,r,i,l))}else this.processChildNodes(t.node,e,n,r,i,l)}return u}processChildNodes(t,e,n,r,i,s){t.children.forEach(t=>{const[a]=LS(t.name,n);!i[a]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!NS(t,r,n))&&(i[a]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!NS(t,r,n))&&(i[a]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=PS(e),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const t=i.attrParams.shape.value;st(t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e),()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&st(n.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=PS(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t,{})}checkOutputs(t){t.forEach(t=>{const[e]=PS(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class zM{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class BM{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new zM}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=qa(t,this.loadOptions);else{const e=Xs(t,this.loadOptions);if(0===e.length)e.push(qa(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=Ds(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new FM(rM.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=rM.Instance.transformGraph(t.modelInitializer);this.initializer=new FM(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=js(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Yi||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function UM(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new BM(t,e);return await n.load(),n}const $M="3.13.0";function qM(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(jM(t)){const i=Array.isArray(t)?[]:{};r.add(t);for(const s in t){const a=qM(t[s],e,n,r);i[s]=a}return r.delete(t),t.__proto__&&(i.__proto__=t.__proto__),i}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,i.value),i.value}function VM(t,e=WM){return HM(t,e)}function HM(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse){if(jM(r)){const i=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=HM(t.map(t=>t[s]),e,n);i[s]=r}return n.delete(r),i}throw new Error("Can't recurse into non-iterable type: "+r)}return i.value}function WM(t){return null===t?null:jM(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function GM(t,e){const n=new Map;qM(t,e,n);for(const r of Array.from(n.keys())){const t=n.get(r);if(Ht(t)){const e=await t;n.set(r,e)}}return qM(t,e,n)}function jM(t){let e=!1;if(jt().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:n}=i(4589);e=t instanceof n}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Yi)&&!(t instanceof Promise)&&!e)}function XM(t){return t instanceof Yi?{value:t.clone(),recurse:!1}:jM(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class YM{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class KM extends YM{constructor(){super(KM.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function JM(t){return new tT(t)}function ZM(t){return new eT(t)}KM.INITIAL_CAPACITY=32;class QM{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new lT(this,t)}filter(t){return new aT(this,t)}map(t){return new oT(this,t)}mapAsync(t){return new uT(this,t)}serialMapAsync(t){return new uT(this,t).serial()}flatmap(t){return new hT(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new sT(this,t,e)}columnMajorBatch(t,e=!0,n=WM){return this.rowMajorBatch(t,e).map(t=>VM(t,n))}concatenate(t,e){return new dT(JM([this,t]),e)}take(t){return t<0||null==t?this:new iT(this,t)}skip(t){return t<0||null==t?this:new rT(this,t)}prefetch(t){return new mT(this,t)}shuffle(t,e){return new gT(this,t,e)}serial(){return new nT(this)}}class tT extends QM{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,function(t,e){return qM(t,e)}(e,XM)),done:!1};var e}}class eT extends QM{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(n){throw n.message="Error thrown while iterating through a dataset: "+n.message,n}}}class nT extends QM{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class rT extends QM{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Zo(t.value)}return this.upstream.next()}}class iT extends QM{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class sT extends QM{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class aT extends QM{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Zo(t.value)}}}class oT extends QM{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=us(t.value),n=this.transform(t.value),r=us(n);for(const i of e)ls(i,r)||i.dispose();return{value:n,done:!1}}}class lT extends QM{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(n){if(!this.handler(n))return{value:null,done:!0}}}}class uT extends QM{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=us(t.value),n=await this.transform(t.value),r=us(n);for(const i of e)ls(i,r)||i.dispose();return{value:n,done:!1}}}class cT extends QM{constructor(){super(),this.outputQueue=new KM,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hT extends cT{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=us(t.value),n=this.transform(t.value),r=us(n);this.outputQueue.pushAll(n);for(const i of e)ls(i,r)||i.dispose();return!0}}class dT extends QM{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var pT;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(pT||(pT={}));class fT extends QM{constructor(t,e=pT.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await GM(this.iterators,(function(t){return t instanceof QM?{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}:{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case pT.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case pT.SHORTEST:return{value:null,done:!0};case pT.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class mT extends QM{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new YM(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class gT extends mT{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=ph.alea(n||Li().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class yT{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return st(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),xT(async()=>(await n.iterator()).columnMajorBatch(t,e,wT),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,xT(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,xT(async()=>(await e.iterator()).filter(e=>Jo(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return xT(async()=>(await e.iterator()).map(e=>Jo(()=>t(e))),this.size)}mapAsync(t){const e=this;return xT(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return xT(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,xT(async()=>{return n=ZM(async()=>({value:await e.iterator(),done:!1})).take(t),new dT(n,r);var n,r},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,xT(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,i=ph.alea(e||Li().toString());return xT(async()=>{let e=i.int32();return n&&(e+=i.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,xT(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function xT(t,e=null){return new class extends yT{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function vT(t){return xT(async()=>JM(t),t.length)}function bT(t){if(!jM(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return xT(async()=>function(t,e=pT.FAIL){return new fT(t,e)}(await GM(t,t=>{if(t instanceof yT)return{value:t.iterator(),recurse:!1};if(jM(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),pT.SHORTEST),e)}function wT(t){return null===t?null:null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Yi||Et(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Yi?Kh(t):Rs(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}yT.MAX_BUFFER_SIZE=1e4;class _T extends yT{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t))}}const ST='"',MT=Symbol("out"),TT=Symbol("field"),ET=Symbol("quote"),AT=Symbol("quoteafterquote"),CT=Symbol("quoteinquote");class IT extends yT{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new _T(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(st(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&st(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce((t,e)=>(t[e]=t[e]+1||1,t),{}),n=Object.keys(e).filter(t=>e[t]>1);if(st(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(t=>this.makeDataElement(t))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let i=0;i<this.fullColumnNames.length;i++){const s=this.fullColumnNames[i],a=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||a){const o=e[i];let l=null;if(""===o)if(a&&void 0!==a.default)l=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${s} is empty in this line: ${t}`);l=void 0}else{const t=Number(o);if(isNaN(t))l=a&&"bool"===a.dtype?this.getBoolean(o):o;else if(a&&a.dtype)switch(a.dtype){case"float32":l=t;break;case"int32":l=Math.floor(t);break;case"bool":l=this.getBoolean(o);break;default:l=t}else l=t}a&&a.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const i=t.length;let s=MT;for(let a=0;a<i;a++)switch(s){case MT:switch(t.charAt(a)){case ST:r=a+1,s=ET;break;case this.delimiter:if(r=a+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=MT;break;default:s=TT,r=a}break;case TT:switch(t.charAt(a)){case this.delimiter:n.push(t.substring(r,a)),s=MT,r=a+1}break;case ET:switch(t.charAt(a)){case ST:s=AT}break;case AT:switch(t.charAt(a)){case this.delimiter:n.push(t.substring(r,a-1)),s=MT,r=a+1;break;case ST:s=ET;break;default:s=CT}break;case CT:switch(t.charAt(a)){case ST:s=ET}}if(s===AT?n.push(t.substring(r,i-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class kT extends QM{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(jt().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new kT(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(t){throw new Error("Error thrown while initializing video stream: "+t.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise(r=>{const i=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(i),r({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((t,r)=>n.set(t,r*e)),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(ut(e));return n.set(t,n.length-t.length),Rs(n,e)}}class RT extends QM{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=td([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,i=n+t,s=e+r;this.cropBox=ed([r,n,s,i],[1,4])}else this.cropBox=ed([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(jt().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new RT(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&st("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(n){throw n.message="Error thrown while initializing video stream: "+n.message,n}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(n){console.log(n),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=so(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return Jo(()=>{const e=nc(Aa(t,"float32"),0);let n;n=Cp.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return hu(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class NT{}class LT extends QM{split(t){return new DT(this,t)}}class DT extends LT{constructor(t,e){super(),this.upstream=t,this.impl=new PT(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class PT extends cT{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}class OT extends QM{decodeUTF8(){return new FT(this)}}class FT extends LT{constructor(t){super(),this.upstream=t,this.impl=new zT(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class zT extends cT{constructor(t){if(super(),this.upstream=t,jt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=i(4589);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const t=await this.upstream.next();let n,r;return!t.done&&(n=t.value,r=jt().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(r),!0)}}class BT extends OT{constructor(t,e={}){super(),this.file=t,this.options=e,st(t instanceof Uint8Array||!!jt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const i=this.file.slice(this.offset,n);r.readAsArrayBuffer(i)}this.offset=n});return{value:await t,done:!1}}}function UT(t){return"string"==typeof t&&"file://"===t.substr(0,7)}class $T extends NT{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(UT(this.input)&&jt().get("IS_NODE")){const t=i(2993);this.input=t.readFileSync(this.input.substr(7))}return new BT(this.input,this.options)}}class qT extends NT{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return UT(this.url)?new $T(this.url,this.fileOptions).iterator():async function(t,e={},n){let r,i;var s;"string"==typeof t?r=t:(r=t.url,i={method:(s=t).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const a=await(n||Di)(r,i);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new BT(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function VT(t,e={}){return new IT(new qT(t),e)}function HT(t){const e=ZM(t);return xT(async()=>e)}function WT(t){return xT(async()=>{const e=await t();return ZM(()=>e.next())})}async function GT(t,e){return RT.create(t,e)}async function jT(t){return kT.create(t)}const XT="3.13.0";function YT(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&st("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}const KT=hd;class JT extends Y{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,Xo())}nextDataId(){return JT.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,jt().get("IS_NODE")&&ii("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&It(n[0])){const i=n.map(t=>Pi(t));r=this.write(i,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,i){this.data.set(t,{values:e,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?tf(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>Oi(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ea(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Xo().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Li();return t(),{kernelMs:Li()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){YT([t],"where");const e=this.readSync(t.dataId);return KT(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function ZT(t,e,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(YT(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=ut(a.shape),c=n||a.dtype,h=_t(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],i);return o.makeTensorInfo(a.shape,c,h)}}function QT(t,e,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(YT(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,i);return o.makeTensorInfo(a.shape,u,c)}}JT.nextDataId=0,ol("cpu",()=>new JT,1);const tE=ZT(Xe,t=>t>=0?t:Math.exp(t)-1),eE={kernelName:Xe,backendName:"cpu",kernelFunc:tE};function nE(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rE={kernelName:dn,backendName:"cpu",kernelFunc:nE};function iE(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r;YT([i],"leakyRelu");const a=ut(i.shape),o=n.data.get(i.dataId).values,l=wt("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(i.shape,"float32",l)}const sE={kernelName:xn,backendName:"cpu",kernelFunc:iE};function aE(t){return(e,n,r,i,s)=>{const a=Qa(e,n),o=a.length,l=Pt(a),u=wt(s,ut(a)),c=e.length,h=n.length,d=Pt(e),p=Pt(n),f=Ja(e,a),m=Ja(n,a);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=t(r[g%r.length],i[g%i.length]);else for(let g=0;g<u.length;++g){const e=Vt(g,o,l),n=e.slice(-c);f.forEach(t=>n[t]=0);const s=qt(n,c,d),a=e.slice(-h);m.forEach(t=>a[t]=0);const y=qt(a,h,p);u[g]=t(r[s],i[y])}return[u,a]}}const oE=aE((t,e)=>t<0?e*t:t);function lE(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e;YT([r,i],"prelu");const s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,[o,l]=oE(r.shape,i.shape,s,a,"float32");return n.makeTensorInfo(l,"float32",o)}const uE={kernelName:er,backendName:"cpu",kernelFunc:lE},cE=ZT(ar,t=>Math.max(0,t)),hE={kernelName:ar,backendName:"cpu",kernelFunc:cE},dE=ZT(dr,t=>Math.min(Math.max(0,t),6)),pE={kernelName:dr,backendName:"cpu",kernelFunc:dE};function fE(t){return(e,n,r)=>{const i=wt(n,e.length);for(let s=0;s<e.length;++s)i[s]=t(e[s],r);return i}}const mE=fE(t=>1/(1+Math.exp(-t))),gE=ZT(Sr,t=>1/(1+Math.exp(-t))),yE={kernelName:Sr,backendName:"cpu",kernelFunc:gE};function xE(t,e,n,r,i){if("linear"===n)return nE({inputs:{x:e},backend:t});if("relu"===n)return cE({inputs:{x:e},backend:t});if("elu"===n)return tE({inputs:{x:e},backend:t});if("relu6"===n)return dE({inputs:{x:e},backend:t});if("prelu"===n)return lE({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return iE({inputs:{x:e},backend:t,attrs:{alpha:i}});if("sigmoid"===n)return gE({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function vE(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(i.shape,"float32",a)},o}const bE={kernelName:Me,backendName:"cpu",kernelFunc:vE};function wE(t,e,n="float32"){if("complex64"===n)return vE({inputs:{real:wE(t,e,"float32"),imag:wE(t,e,"float32")},backend:t});const r=Bt(ut(e),n);return t.makeTensorInfo(e,n,r)}function _E(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const SE={kernelName:ir,backendName:"cpu",kernelFunc:_E};function ME(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return nE({inputs:{x:i},backend:n});const t=wE(n,i.shape,i.dtype),e=ME({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=vE({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===i.dtype){const t=_E({inputs:{input:i},backend:n}),e=ME({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!Tt(i.dtype,s)){const t=nE({inputs:{x:i},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(i.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(i.shape,"int32",e)}if("bool"===s){const t=n.data.get(i.dataId).values,e=Ni([0],i.dtype),[r,s]=aE((t,e)=>t!==e?1:0)(i.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}const TE={kernelName:we,backendName:"cpu",kernelFunc:ME};function EE(t,e,n,r){return null==n?({inputs:n,backend:i})=>{const{a:s,b:a}=n,o=i;YT([s,a],t);const l=o.data.get(s.dataId).values,u=o.data.get(a.dataId).values,c="string"===s.dtype?Nf(l):l,h="string"===s.dtype?Nf(u):u,d=r||s.dtype,[p,f]=e(s.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:i})=>{const{a:s,b:a}=t,o=i;if("complex64"===s.dtype||"complex64"===a.dtype){const t=ME({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,i=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c=ME({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,x]=n(s.shape,a.shape,l,u,f,m),v=o.makeTensorInfo(x,"float32",g),b=o.makeTensorInfo(x,"float32",y),w=vE({inputs:{real:v,imag:b},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(b),w}{const t=o.data.get(s.dataId).values,n=o.data.get(a.dataId).values,i=r||s.dtype,[l,u]=e(s.shape,a.shape,t,n,i);return o.makeTensorInfo(u,i,l)}}}function AE(t){return(e,n,r,i,s,a)=>{const o=Qa(e,n),l=ut(o),u=o.length,c=Pt(o),h=wt("float32",l),d=wt("float32",l),p=Ja(e,o),f=Ja(n,o),m=tf(r,i),g=tf(s,a),y=e.length,x=Pt(e),v=n.length,b=Pt(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const e=w%m.length,n=w%g.length,r=t(m[2*e],m[2*e+1],g[2*n],g[2*n+1]);h[w]=r.real,d[w]=r.imag}else for(let w=0;w<h.length;w++){const e=Vt(w,u,c),n=e.slice(-y);p.forEach(t=>n[t]=0);const r=qt(n,y,x),i=e.slice(-v);f.forEach(t=>i[t]=0);const s=qt(i,v,b),a=t(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}const CE=aE((t,e)=>t+e),IE=AE((t,e,n,r)=>({real:t+n,imag:e+r})),kE=EE(ee,CE,IE),RE={kernelName:ee,backendName:"cpu",kernelFunc:kE};function NE(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=ut(i.shape),o=xt(s,a),l=ut(o);st(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(i.dataId);const u=n.data.get(i.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:i.dataId,shape:o,dtype:i.dtype}}const LE={kernelName:or,backendName:"cpu",kernelFunc:NE};function DE(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;YT([i,s],"matMul");const l=i.shape.length,u=s.shape.length,c=a?i.shape[l-2]:i.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=a?i.shape[l-1]:i.shape[l-2],p=o?s.shape[u-2]:s.shape[u-1],f=i.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ut(f),y=ut(m),x=Qa(i.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);st(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${a} and transposeB=${o} must match.`);const v=o?[y,p,h]:[y,h,p],b=NE({inputs:{x:i},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=NE({inputs:{x:s},backend:n,attrs:{shape:v}}),_=a?b.shape[1]:b.shape[2],S=a?b.shape[2]:b.shape[1],M=o?w.shape[1]:w.shape[2],T=Math.max(g,y),E=n.data.get(b.dataId).values,A=n.data.get(w.dataId).values,C=Pt(b.shape),I=Pt(w.shape),[k,R,N]=a?[C[0],1,C[1]]:[C[0],C[1],1],[L,D,P]=o?[1,I[1],I[0]]:[I[1],1,I[0]],O=S*M,F=Ea([T,S,M],b.dtype),z=F.values,B=n.blockSize;for(let U=0;U<T;U++)for(let t=0;t<S;t+=B)for(let e=0;e<M;e+=B)for(let n=0;n<_;n+=B){const r=Math.min(t+B,S),i=Math.min(e+B,M),s=Math.min(n+B,_);for(let a=t;a<r;a++)for(let t=e;t<i;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(U,g-1)*k,i=Math.min(U,y-1)*P;e+=E[n+a*R+r*N]*A[r*L+t*D+i]}z[U*O+(a*M+t)]+=e}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(x,F.dtype,F.values)}const PE={kernelName:ge,backendName:"cpu",kernelFunc:DE},OE={kernelName:ei,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=DE({inputs:{a:i,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=kE({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=xE(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function FE(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const zE={kernelName:Zt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;YT(e,"abs");let r=new Float32Array(ut(e.shape));return r=FE(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},BE=ZT(Qt,t=>Math.acos(t)),UE={kernelName:Qt,backendName:"cpu",kernelFunc:BE},$E=ZT(te,t=>Math.acosh(t)),qE={kernelName:te,backendName:"cpu",kernelFunc:$E},VE={kernelName:ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;YT(e,"addN");const i=r.map(t=>n.data.get(t.dataId).values),s=Ea(r[0].shape,r[0].dtype),a=s.values;for(let o=0;o<r.length;o++){const t=i[o];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function HE(t,e,n,r,i){const s=e.length,a=ut(e),o=Pt(e),l=Pt(i),u=wt(n,ut(i));for(let c=0;c<a;++c){const e=Vt(c,s,o),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];u[qt(n,s,l)]=t[c]}return u}function WE(t){const{inputs:e,attrs:n,backend:r}=t,{x:i}=e,{perm:s}=n;YT(i,"transpose");const a=i.shape.length,o=new Array(a);for(let u=0;u<o.length;u++)o[u]=i.shape[s[u]];const l=HE(r.data.get(i.dataId).values,i.shape,i.dtype,s,o);return{dataId:r.write(l,o,i.dtype),shape:o,dtype:i.dtype}}const GE={kernelName:jr,backendName:"cpu",kernelFunc:WE},jE={kernelName:re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;YT(i,"all");const o=vt(s,i.shape);let l=o;const u=Nc(l,i.shape.length);let c=i;null!=u&&(c=WE({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Dc(l.length,i.shape.length)),Rc("all",l,c.shape.length);const[h,d]=Ic(c.shape,l),p=ut(d),f=Bt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const r=m[t+n];e=e&&r}f[y]=e}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=NE({inputs:{x:g},backend:n,attrs:{shape:kc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},XE={kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;YT(i,"any");const o=vt(s,i.shape);let l=o;const u=Nc(l,i.shape.length);let c=i;null!=u&&(c=WE({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Dc(l.length,i.shape.length)),Rc("any",l,c.shape.length);const[h,d]=Ic(c.shape,l),p=ut(d),f=Bt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const r=m[t+n];e=e||r}f[y]=e}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=NE({inputs:{x:g},backend:n,attrs:{shape:kc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},YE={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;YT(i,"argMax");let a=vt(s,i.shape);const o=Nc(a,i.shape.length);let l=i;const u=[];null!=o&&(l=WE({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Dc(a.length,l.shape.length)),a=[a[0]],Rc("argMax",a,l.shape.length);const[c,h]=Ic(l.shape,a),d=Bt(ut(c),"int32"),p=ut(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let r=0;r<p;++r){const i=f[t+r];i>e&&(e=i,n=r)}d[m]=n}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},KE={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;YT(i,"argMin");let a=vt(s,i.shape);const o=Nc(a,i.shape.length);let l=i;const u=[];null!=o&&(l=WE({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Dc(a.length,l.shape.length)),a=[a[0]],Rc("argMin",a,l.shape.length);const[c,h]=Ic(l.shape,a),d=Bt(ut(c),"int32"),p=ut(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let r=0;r<p;++r){const i=f[t+r];i<e&&(e=i,n=r)}d[m]=n}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},JE=ZT(oe,t=>Math.asin(t)),ZE={kernelName:oe,backendName:"cpu",kernelFunc:JE},QE=ZT(le,t=>Math.asinh(t)),tA={kernelName:le,backendName:"cpu",kernelFunc:QE},eA=ZT(ue,t=>Math.atan(t)),nA={kernelName:ue,backendName:"cpu",kernelFunc:eA},rA=aE((t,e)=>Math.atan2(t,e)),iA=EE(he,rA),sA={kernelName:he,backendName:"cpu",kernelFunc:iA},aA=ZT(ce,t=>Math.atanh(t)),oA={kernelName:ce,backendName:"cpu",kernelFunc:aA};function lA(t,e,n,r,i,s){const a=i.strideHeight,o=i.strideWidth,l=i.dilationHeight,u=i.dilationWidth,c=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ea(i.outShape,n),g=m.values,y=i.outShape[1]*i.outShape[2]*i.outShape[3],x=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let b=0;b<i.batchSize;++b){const e=b*y,n=b*r[0];for(let m=0;m<i.inChannels;++m)for(let y=0;y<i.outHeight;++y){const b=y*a-d,w=Math.max(0,b),_=Math.min(i.inHeight,c+b),S=e+y*x;for(let e=0;e<i.outWidth;++e){const a=e*o-p,c=Math.max(0,a),d=Math.min(i.inWidth,h+a);let y=f,x=0,b=0;for(let e=w;e<_;e+=l){const i=n+e*r[1];for(let e=c;e<d;e+=u){const n=t[i+e*r[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(x+=n,b++)}if(isNaN(y))break}g[S+e*v+m]="avg"===s?x/b:y}}}return m}function uA(t,e,n,r,i=!1,s=!1){const a=Ea(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Ea(e,n,t);for(let g=0;g<r.batchSize;++g)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*o-p;let y=n;for(;y<0;)y+=u;const x=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let b=Number.NEGATIVE_INFINITY,w=-1;for(let e=y;e<x;e+=u){const a=e-n;for(let n=p;n<v;n+=c){const o=n-h,l=m.get(g,e,n,t);l>b&&(b=l,w=i?s?((g*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:a*d+o)}}a.set(w,g,e,o,t)}}return a}function cA(t,e,n,r,i,s){const a=i.strideDepth,o=i.strideHeight,l=i.strideWidth,u=i.dilationDepth,c=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,f=i.effectiveFilterWidth,m=i.padInfo.front,g=i.padInfo.top,y=i.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Ea(i.outShape,n),b=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[3]*i.outShape[4],M=i.outShape[4];for(let T=0;T<i.batchSize;++T){const e=T*w,n=T*r[0];for(let v=0;v<i.inChannels;++v)for(let w=0;w<i.outDepth;++w){const T=w*a-m;let E=T;for(;E<0;)E+=u;const A=Math.min(i.inDepth,d+T),C=e+w*_;for(let e=0;e<i.outHeight;++e){const a=e*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(i.inHeight,p+a),w=C+e*S;for(let e=0;e<i.outWidth;++e){const a=e*l-y;let o=a;for(;o<0;)o+=h;const p=Math.min(i.inWidth,f+a),g=w+e*M;let _=x,S=0,T=0;for(let e=E;e<A;e+=u){const i=n+e*r[1];for(let e=d;e<m;e+=c){const n=i+e*r[2];for(let e=o;e<p;e+=h){const i=t[n+e*r[3]+v];if("max"===s&&i>_?_=i:"avg"===s&&(S+=i,T++),isNaN(_))break}if(isNaN(_))break}if(isNaN(_))break}b[g+v]="avg"===s?S/T:_}}}}return v}const hA={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;YT(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;st(lu(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=Zl(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ht(u.inShape,u.outShape))c=nE({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Pt(i.shape),r=lA(t,i.shape,i.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},dA={kernelName:fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;YT(i,"avgPool3d");const c=Ql(i.shape,s,a,1,o,l,u),h=cA(n.data.get(i.dataId).values,i.shape,i.dtype,Pt(i.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},pA={kernelName:me,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;YT([i,s],"avgPool3DGrad");const c=Ql(s.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,v=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,_=c.effectiveFilterWidth,S=b-1-c.padInfo.front,M=_-1-c.padInfo.left,T=w-1-c.padInfo.top,E=Ea(s.shape,"float32"),A=1/(f*m*g),C=n.bufferSync(i);for(let I=0;I<c.batchSize;++I)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const i=e-S,s=n-T,a=r-M;let o=0;for(let e=0;e<b;e+=y){const n=(i+e)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let e=0;e<w;e+=x){const r=(s+e)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let e=0;e<_;e+=v){const i=(a+e)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(o+=C.get(I,n,r,i,t))}}}E.set(o*A,I,e,n,r,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},fA={kernelName:pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;YT([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Zl(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=x-1-c.padInfo.left,b=y-1-c.padInfo.top,w=Ea(a.shape,"float32"),_=1/(p*f),S=n.data.get(i.dataId).values,M=Ea(i.shape,"float32",S);for(let T=0;T<c.batchSize;++T)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inHeight;++e)for(let n=0;n<c.inWidth;++n){const r=e-b,i=n-v;let s=0;for(let e=0;e<y;e+=m){const n=(r+e)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=g){const r=(i+e)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(s+=M.get(T,n,r,t))}}w.set(s*_,T,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},mA={kernelName:on,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,scale:s,offset:a,mean:o,variance:l}=e;st(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),st(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),st(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),YT([i,o,l,s,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,x=d.length,v=h.length;let b=0,w=0,_=0,S=0;for(let M=0;M<c.length;++M)m[M]=f[b++]+(c[M]-h[w++])*p[_++]/Math.sqrt(d[S++]+u),b>=g&&(b=0),w>=v&&(w=0),_>=y&&(_=0),S>=x&&(S=0);return n.makeTensorInfo(i.shape,i.dtype,m)}};function gA(t,e,n,r,i){const s=So(r,e,n),a=ut(n),o=Pt(r);if(s){const n=Mo(e,o);return"string"===i?t.slice(n,n+a):t.subarray(n,n+a)}const l=Ea(r,i,"string"===i?Nf(t):t),u=Ea(n,i);for(let c=0;c<u.size;++c){const t=u.indexToLoc(c),n=t.map((t,n)=>t+e[n]);u.set(l.get(...n),...t)}return"string"===i?Lf(u.values):u.values}function yA(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r;YT(i,"slice");const[o,l]=To(i,s,a);co(i,o,l);const u=gA(n.data.get(i.dataId).values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,u)}const xA={kernelName:vr,backendName:"cpu",kernelFunc:yA},vA={kernelName:ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;YT([i],"batchToSpaceND");const o=s.reduce((t,e)=>t*e),l=$p(i.shape,s,o),u=qp(l.length,s.length),c=Vp(i.shape,s,o),h=Hp(a,s.length),d=Wp(c,a,s.length),p=NE({inputs:{x:i},backend:n,attrs:{shape:l}}),f=WE({inputs:{x:p},backend:n,attrs:{perm:u}}),m=NE({inputs:{x:f},backend:n,attrs:{shape:c}}),g=yA({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function bA(t,e,n,r,i){const s=ut(r),a=Bt(i,n);for(let o=0;o<t.length;o++){const n=t[o];if(n<0)throw new Error("Input x must be non-negative!");n>=i||(a[n]+=s>0?e[o]:1)}return a}function wA(t,e,n,r=!1){const i=t.shape[0],s=t.shape[1],a=Ea([i,n],e.dtype);for(let o=0;o<i;o++)for(let i=0;i<s;i++){const s=t.get(o,i);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?a.set(1,o,s):e.size>0?a.set(a.get(o,s)+e.get(o,i),o,s):a.set(a.get(o,s)+1,o,s))}return a}const _A={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=bA(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,o)}},SA={kernelName:be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=Qa(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},MA=fE(t=>Math.ceil(t)),TA=QT(_e,MA),EA={kernelName:_e,backendName:"cpu",kernelFunc:TA},AA=ZT(Se,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),CA={kernelName:Se,backendName:"cpu",kernelFunc:AA},IA={kernelName:Te,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(ut(e.shape)),i=n.data.get(e.dataId),s=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const t=o[u],e=l[u];r[u]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}};function kA(t,e,n,r){const i=_t(n,ut(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=ut(t.shape);i.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const s="string"===n?Nf(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)i[o+e]=s[a++]}r+=t.shape[1]})}return i}function RA(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const NA={kernelName:fn,backendName:"cpu",kernelFunc:RA};function LA(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=vt(i,e[0].shape)[0];let a=Fp(e.map(t=>t.shape),s);if(0===ut(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter(t=>ut(t.shape)>0);if(1===o.length)return nE({inputs:{x:o[0]},backend:n});if(Op(o.map(t=>t.shape),s),"complex64"===o[0].dtype){const t=o.map(t=>_E({inputs:{input:t},backend:n})),e=o.map(t=>RA({inputs:{input:t},backend:n})),r=LA({inputs:t,backend:n,attrs:{axis:s}}),i=LA({inputs:e,backend:n,attrs:{axis:s}}),a=vE({inputs:{real:r,imag:i},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}const l=o.map(t=>{const e=ut(t.shape.slice(s));return NE({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),u=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));a=Fp(l.map(t=>t.shape),1);const c=1===l[0].shape[0],h=kA(u,a,e[0].dtype,c),d=Fp(o.map(t=>t.shape),s),p=n.makeTensorInfo(d,e[0].dtype,h);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}const DA={kernelName:Ee,backendName:"cpu",kernelFunc:LA};function PA(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;YT([i,s],"conv2d");const h=uu(l),d=tu(i.shape,s.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,v="channelsLast"===d.dataFormat,b=new Wi(d.outShape,i.dtype),w=Pt(i.shape),_=Pt(s.shape),S=w[0],M=v?w[1]:w[2],T=v?w[2]:1,E=v?1:w[1],A=b.strides[0],C=v?b.strides[1]:b.strides[2],I=v?b.strides[2]:1,k=v?1:b.strides[1],R=n.data.get(i.dataId).values,N=n.data.get(s.dataId).values,L=b.values;for(let D=0;D<d.batchSize;++D){const t=D*S,e=D*A;for(let n=0;n<d.outHeight;++n){const r=e+n*C,i=n*d.strideHeight-x;for(let e=0;e<p;++e){const n=i+e*m;if(n<0||n>=d.inHeight)continue;const s=e*_[0],a=t+n*M;for(let t=0;t<d.outWidth;++t){const e=r+t*I,n=t*d.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const i=a+r*T;let o=s+t*_[1];for(let t=0;t<d.inChannels;++t){const n=R[i+t*E];for(let t=0;t<d.outChannels;++t)L[e+t*k]+=n*N[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,L)}const OA={kernelName:Ae,backendName:"cpu",kernelFunc:PA},FA={kernelName:Ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;YT([i,s],"conv2dBackpropFilter");const h=uu(l),d=tu(i.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,x=new Wi(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=new Wi(i.shape,i.dtype,w),M=new Wi(s.shape,s.dtype,_);for(let T=0;T<m;++T){const t=Math.max(0,Math.ceil((b-T)/p)),e=Math.min(d.outHeight,(d.inHeight+b-T)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((v-n)/f)),i=Math.min(d.outWidth,(d.inWidth+v-n)/f);for(let s=0;s<d.inChannels;++s)for(let a=0;a<d.outChannels;++a){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=t;u<e;++u){const t=T+u*p-b;for(let e=r;e<i;++e){const r=n+e*f-v;o+=y?S.get(l,t,r,s)*M.get(l,u,e,a):S.get(l,s,t,r)*M.get(l,a,u,e)}}x.set(o,T,n,s,a)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},zA={kernelName:Ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;YT([i,s],"conv2dBackpropInput");const h=Pt(s.shape),d=Pt(i.shape);let p=uu(u);const f=tu(a,s.shape,o,1,l,c,!1,p),m=new Wi(f.inShape,"float32"),g=m.values,y=n.data.get(i.dataId).values,x=n.data.get(s.dataId).values,[v,b,w]=h,{batchSize:_,filterHeight:S,filterWidth:M,inChannels:T,inHeight:E,inWidth:A,outChannels:C,outHeight:I,outWidth:k,strideHeight:R,strideWidth:N}=f;p=f.dataFormat;const L=S-1-f.padInfo.top,D=M-1-f.padInfo.left,P="channelsLast"===p,O=m.strides[0],F=P?m.strides[1]:m.strides[2],z=P?m.strides[2]:1,B=P?1:m.strides[1],U=d[0],$=P?d[1]:d[2],q=P?d[2]:1,V=P?1:d[1];for(let H=0;H<_;++H)for(let t=0;t<T;++t)for(let e=0;e<E;++e){const n=e-L,r=Math.max(0,Math.ceil(n/R)),i=Math.min(I,(S+n)/R);for(let s=0;s<A;++s){const a=s-D,o=Math.max(0,Math.ceil(a/N)),l=Math.min(k,(M+a)/N);let u=0;for(let e=r;e<i;++e){const r=e*R-n;for(let n=o;n<l;++n){const i=U*H+$*e+q*n,s=v*(S-1-r)+b*(M-1-(n*N-a))+w*t;for(let t=0;t<C;++t)u+=y[i+V*t]*x[s+t]}}g[O*H+F*e+z*s+B*t]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},BA={kernelName:ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r;YT([i,s],"conv3d");const u=eu(i.shape,s.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,v=g.top,b=new Wi(u.outShape,i.dtype),w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=b.values,M=Pt(i.shape),T=Pt(s.shape);for(let E=0;E<u.batchSize;++E){const t=E*M[0],e=E*b.strides[0];for(let n=0;n<u.outDepth;++n){const r=e+n*b.strides[1],i=n*u.strideDepth-y;for(let e=0;e<c;++e){const n=i+e*p;if(n<0||n>=u.inDepth)continue;const s=e*T[0],a=t+n*M[1];for(let t=0;t<u.outHeight;++t){const e=r+t*b.strides[2],n=t*u.strideHeight-v;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const i=s+t*T[1],o=a+r*M[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-x;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const s=i+t*T[2],a=o+e*u.inChannels;let l=s;for(let t=0;t<u.inChannels;++t){const e=w[a+t];for(let t=0;t<u.outChannels;++t)S[n+t]+=e*_[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},UA={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r;YT([i,s],"conv3dBackpropFilterV2");const u=Pt(i.shape),c=Pt(s.shape),h=eu(i.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new Wi(h.filterShape,"float32"),v=x.values,[b,w,_,S]=x.strides,M=n.data.get(s.dataId).values,[T,E,A,C]=c,I=n.data.get(i.dataId).values,[k,R,N,L]=u,D=h.padInfo.front,P=h.padInfo.left,O=h.padInfo.top;for(let F=0;F<m;++F){const t=Math.max(0,Math.ceil((D-F)/d)),e=Math.min(h.outDepth,(h.inDepth+D-F)/d),n=F*b;for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((O-r)/p)),s=Math.min(h.outHeight,(h.inHeight+O-r)/p),a=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((P-n)/f)),l=Math.min(h.outWidth,(h.inWidth+P-n)/f),u=n*_+a;for(let a=0;a<h.inChannels;++a){const c=a*S+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*k,g=c*T;for(let c=t;c<e;++c){const t=(F+c*d-D)*R+h,e=c*E+g;for(let c=i;c<s;++c){const i=(r+c*p-O)*N+t,s=c*A+e;for(let t=o;t<l;++t){const e=t*C+s;m+=I[(n+t*f-P)*L+i+a]*M[e+u]}}}}v[c+u]=m}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},$A={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r;YT([i],"conv3dBackpropInputV2");const u=Pt(i.shape),c=Pt(s.shape),h=eu(l,s.shape,o,1,a),d=new Wi(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,x=n.data.get(i.dataId).values,[v,b,w,_]=u,S=n.data.get(s.dataId).values,[M,T,E,A]=c,{batchSize:C,filterDepth:I,filterHeight:k,filterWidth:R,inChannels:N,inDepth:L,inHeight:D,inWidth:P,outChannels:O,outDepth:F,outHeight:z,outWidth:B,strideDepth:U,strideHeight:$,strideWidth:q}=h,V=I-1-h.padInfo.front,H=k-1-h.padInfo.top,W=R-1-h.padInfo.left;for(let G=0;G<C;++G)for(let t=0;t<N;++t)for(let e=0;e<L;++e){const n=e-V,r=Math.max(0,Math.ceil(n/U)),i=Math.min(F,(I+n)/U);for(let s=0;s<D;++s){const a=s-H,o=Math.max(0,Math.ceil(a/$)),l=Math.min(z,(k+a)/$);for(let u=0;u<P;++u){const c=u-W,h=Math.max(0,Math.ceil(c/q)),d=Math.min(B,(R+c)/q);let C=0;for(let e=r;e<i;++e){const r=e*U-n;for(let n=o;n<l;++n){const i=n*$-a;for(let s=h;s<d;++s){const a=v*G+b*e+w*n+_*s,o=M*(I-1-r)+T*(k-1-i)+E*(R-1-(s*q-c))+A*t;for(let t=0;t<O;++t)C+=x[a+t]*S[o+t]}}}p[f*G+m*e+g*s+y*u+t]=C}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},qA=ZT(Le,t=>Math.cos(t)),VA={kernelName:Le,backendName:"cpu",kernelFunc:qA},HA=ZT(De,t=>Math.cosh(t)),WA={kernelName:De,backendName:"cpu",kernelFunc:HA},GA={kernelName:Oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=i.shape,f=s.shape[0],[m,g]=o,y=Ea([f,m,g,p],"float32"),x=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,b=n.data.get(i.dataId).values,w=Pt(i.shape),_=Pt(y.shape);for(let S=0;S<f;S++){const t=4*S,e=x[t],n=x[t+1],r=x[t+2],i=x[t+3],s=v[S];if(s>=c)continue;const a=m>1?(r-e)*(h-1)/(m-1):0,o=g>1?(i-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const t=m>1?e*(h-1)+c*a:.5*(e+r)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<p;t++){const n=t+e*_[2]+c*_[1]+S*_[0];y.values[n]=u}else if("bilinear"===l){const e=Math.floor(t),r=Math.ceil(t),a=t-e;for(let t=0;t<g;t++){const l=g>1?n*(d-1)+t*o:.5*(n+i)*(d-1);if(l<0||l>d-1){for(let e=0;e<p;e++){const n=e+t*_[2]+c*_[1]+S*_[0];y.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<p;n++){let i=n+h*w[2]+e*w[1]+s*w[0];const o=b[i];i=n+f*w[2]+e*w[1]+s*w[0];const l=b[i];i=n+h*w[2]+r*w[1]+s*w[0];const u=b[i];i=n+f*w[2]+r*w[1]+s*w[0];const d=o+(l-o)*m,p=u+(b[i]-u)*m;i=n+t*_[2]+c*_[1]+S*_[0],y.values[i]=d+(p-d)*a}}}else for(let e=0;e<g;++e){const r=g>1?n*(d-1)+e*o:.5*(n+i)*(d-1);if(r<0||r>d-1){for(let t=0;t<p;t++){const n=t+e*_[2]+c*_[1]+S*_[0];y.values[n]=u}continue}const a=Math.round(r),l=Math.round(t);for(let t=0;t<p;t++){const n=t+a*w[2]+l*w[1]+s*w[0],r=t+e*_[2]+c*_[1]+S*_[0];y.values[r]=b[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},jA={kernelName:Pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;YT(i,"cumsum");const l=Nc([s],i.shape.length);let u=i;null!=l&&(u=WE({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=Dc(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=is(u.dtype,"int32"),d=Bt(ut(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<p.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)d[e]=a?0:p[e];else{const n=m(y,t-1);d[e]=a?p[n]+d[n]:p[e]+d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=WE({inputs:{x:g},backend:n,attrs:{perm:Lc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},XA={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=bA(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,t)}if(2===i.shape.length){const t=wA(n.bufferSync(i),n.bufferSync(s),a,o);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}},YA={kernelName:ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r;st("NHWC"===a,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+a);const o=i.shape[0],l=i.shape[1],u=i.shape[2],c=i.shape[3],h=l*s,d=u*s,p=c/(s*s),f=n.data.get(i.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let y=0;y<o;++y)for(let t=0;t<h;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<d;++t){const r=Math.floor(t/s),i=(n*s+t%s)*p;for(let t=0;t<p;++t){const n=t+i+c*(r+u*(e+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,d,p],i.dtype,m)}};function KA(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;YT([i,s],"depthwiseConv2DNative");const c=Pt(i.shape),h=Pt(s.shape);let d=l;null==d&&(d=[1,1]),st(lu(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=tu(i.shape,s.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=p,v=x.left,b=x.top,w=p.outChannels/p.inChannels,_=new Wi(p.outShape,i.dtype),S=n.data.get(i.dataId).values,M=n.data.get(s.dataId).values,T=_.values;for(let E=0;E<p.batchSize;++E){const t=E*c[0],e=E*_.strides[0];for(let n=0;n<p.outHeight;++n){const r=e+n*_.strides[1],i=n*p.strideHeight-b;for(let e=0;e<f;++e){const n=i+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],a=t+n*c[1];for(let t=0;t<p.outWidth;++t){const e=r+t*_.strides[2],n=t*p.strideWidth-v;for(let t=0;t<m;++t){const r=n+t*y;if(r<0||r>=p.inWidth)continue;const i=s+t*h[1],o=a+r*p.inChannels;let l=e,u=i;for(let t=0;t<p.inChannels;++t){const e=S[o+t];for(let t=0;t<w;++t)T[l+t]+=e*M[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const JA={kernelName:Be,backendName:"cpu",kernelFunc:KA},ZA={kernelName:Ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;YT([i,s],"depthwiseConv2dNativeBackpropFilter");const h=tu(i.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Wi(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,b=n.data.get(i.dataId).values,w=new Wi(i.shape,i.dtype,b),_=n.data.get(s.dataId).values,S=new Wi(s.shape,s.dtype,_);for(let M=0;M<f;++M){const t=Math.max(0,Math.ceil((x-M)/d)),e=Math.min(h.outHeight,(h.inHeight+x-M)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/p)),i=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const a=Math.trunc(s/v),o=s%v;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=t;o<e;++o){const t=M+o*d-x;for(let e=r;e<i;++e){const r=n+e*p-y;l+=w.get(u,t,r,a)*S.get(u,o,e,s)}}g.set(l,M,n,a,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},QA={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;YT([i,s],"depthwiseConv2DNativeBackpropInput");const h=Pt(i.shape),d=Pt(s.shape),p=tu(c,s.shape,a,o,l,u,!0),f=new Wi(p.inShape,"float32"),m=f.values,[g,y,x]=f.strides,v=n.data.get(i.dataId).values,[b,w,_]=h,S=n.data.get(s.dataId).values,[M,T,E]=d,{batchSize:A,filterHeight:C,filterWidth:I,inChannels:k,inHeight:R,inWidth:N,outChannels:L,outHeight:D,outWidth:P,strideHeight:O,strideWidth:F}=p,z=C-1-p.padInfo.top,B=I-1-p.padInfo.left,U=L/k;for(let $=0;$<A;++$)for(let t=0;t<k;++t)for(let e=0;e<R;++e){const n=e-z,r=Math.max(0,Math.ceil(n/O)),i=Math.min(D,(C+n)/O);for(let s=0;s<N;++s){const a=s-B,o=Math.max(0,Math.ceil(a/F)),l=Math.min(P,(I+a)/F);let u=0;for(let e=r;e<i;++e){const r=e*O-n;for(let n=o;n<l;++n){const i=b*$+w*e+_*n,s=M*(C-1-r)+T*(I-1-(n*F-a))+E*t;for(let e=0;e<U;++e)u+=v[i+(t*U+e)]*S[s+e]}}m[g*$+y*e+x*s+t]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},tC={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=ut(r.shape),s=n.data.get(r.dataId).values,a=Ea([i,i],r.dtype),o=a.values;for(let u=0;u<s.length;u++)o[u*i+u]=s[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},eC={kernelName:Ve,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i}=t,{strides:s,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:S,dilationHeight:M,dilationWidth:T,outShape:E}=Jl(r.shape,i.shape,s,a,"NHWC",o),A=ut(E),C=E.length,I=_t(r.dtype,A);for(let k=0;k<p;++k)for(let t=0;t<y;++t){const e=t*b-v.top;for(let n=0;n<x;++n){const s=n*w-v.left;for(let a=0;a<g;++a){let o=Number.MIN_SAFE_INTEGER;for(let t=0;t<_;++t){const n=e+t*M;if(n>=0&&n<f)for(let e=0;e<S;++e){const l=s+e*T;if(l>=0&&l<m){const s=qt([k,n,l,a],c,Pt(r.shape)),p=qt([t,e,a],d,Pt(i.shape)),f=u[s]+h[p];f>o&&(o=f)}}}I[qt([k,t,n,a],C,Pt(E))]=o}}}return{dataId:l.write(Ni(I,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},nC={kernelName:We,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Ft(r.shape,u.data.get(r.dataId).values),h=Ft(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:M,outShape:T}=Jl(r.shape,i.shape,a,o,"NHWC",l);st(s.rank===T.length,()=>`Error in ${We}, dy must have the same rank as output ${T.length}, but got ${s.rank}`);const E=Ft(T,u.data.get(s.dataId).values),A=Ut(i.shape,i.dtype);for(let C=0;C<d;++C)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const r=n*b-x.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let t=0;t<w;++t){const n=e+t*S;if(n>=0&&n<p)for(let e=0;e<_;++e){const l=r+e*M;if(l>=0&&l<f){const r=c[C][n][l][i]+h[t][e][i];r>s&&(s=r,a=t,o=e)}}}A[a][o][i]+=E[C][t][n][i]}}}return{dataId:u.write(Ni(A,r.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},rC={kernelName:He,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Ft(r.shape,u.data.get(r.dataId).values),h=Ft(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:M,outShape:T}=Jl(r.shape,i.shape,a,o,"NHWC",l);st(s.rank===T.length,()=>`Error in ${He}, dy must have the same rank as output ${T.length}, but got ${s.rank}`);const E=Ft(T,u.data.get(s.dataId).values),A=Ut(r.shape,r.dtype);for(let C=0;C<d;++C)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const r=n*b-x.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,a=e<0?0:e,o=r<0?0:r;for(let t=0;t<w;++t){const n=e+t*S;if(n>=0&&n<p)for(let e=0;e<_;++e){const l=r+e*M;if(l>=0&&l<f){const r=c[C][n][l][i]+h[t][e][i];r>s&&(s=r,a=n,o=l)}}}A[C][a][o][i]+=E[C][t][n][i]}}}return{dataId:u.write(Ni(A,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},iC=aE((t,e)=>t*e),sC=AE((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),aC=EE(Vn,iC,sC),oC={kernelName:Vn,backendName:"cpu",kernelFunc:aC};function lC(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;let o;YT(i,"sum"),o="bool"===i.dtype?ME({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):nE({inputs:{x:i},backend:n});const l=o.shape.length,u=vt(s,o.shape),c=Nc(u,l);let h=u,d=o;null!=c&&(d=WE({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Dc(h.length,l)),Rc("sum",h,d.shape.length);const[p,f]=Ic(d.shape,h);let m=wE(n,p,is(d.dtype,"int32"));const g=ut(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const t=v*g;let e=0;for(let n=0;n<g;++n)e+=x[t+n];y[v]=e}if(a){const t=m;m=NE({inputs:{x:m},backend:n,attrs:{shape:kc(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const uC={kernelName:Er,backendName:"cpu",kernelFunc:lC},cC={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=cf(i,s.length);df(a.length,l,s);const{path:u,steps:c}=pf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=hf(p,l[t]);let i;ff(e)?i=s[t]:(i=WE({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);ht(i.shape,a)||(i=NE({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=aC({inputs:{a:i,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=lC({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},hC={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:i}=e;YT([r,i],"eluGrad");const s=new Float32Array(ut(i.shape)),a=n.data.get(i.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<a.length;++l){const t=a[l];s[l]=t>=1?o[l]:o[l]*(t+1)}return n.makeTensorInfo(i.shape,"float32",s)}},dC=aE((t,e)=>t===e?1:0),pC=EE(Je,dC,null,"bool"),fC={kernelName:Je,backendName:"cpu",kernelFunc:pC},mC=Xp,gC=Yp,yC=Kp,xC=Jp,vC=Zp,bC=Qp,wC=ZT(Ke,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+mC*n);return e*(1-((((bC*r+vC)*r+xC)*r+yC)*r+gC)*r*Math.exp(-n*n))}),_C={kernelName:Ke,backendName:"cpu",kernelFunc:wC},SC=fE(t=>Math.exp(t)),MC=QT(Ze,SC,"float32"),TC={kernelName:Ze,backendName:"cpu",kernelFunc:MC};function EC(t){const{inputs:e,backend:n,attrs:r}=t,{input:i}=e,{dim:s}=r,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(st(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),NE({inputs:{x:i},backend:n,attrs:{shape:o}})}const AC={kernelName:Qe,backendName:"cpu",kernelFunc:EC},CC=fE(t=>Math.expm1(t)),IC=QT(tn,CC),kC={kernelName:tn,backendName:"cpu",kernelFunc:IC},RC=aE((t,e)=>t/e),NC=EE(Ge,RC),LC={kernelName:Ge,backendName:"cpu",kernelFunc:NC},DC=aE((t,e)=>t-e),PC=AE((t,e,n,r)=>({real:t-n,imag:e-r})),OC=EE($r,DC,PC),FC={kernelName:$r,backendName:"cpu",kernelFunc:OC};function zC(t,e,n){const r=t.shape,i=r[0],s=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[i,s],c=ut(u),h=wt("float32",c),d=wt("float32",c);for(let g=0;g<i;g++){const t=yA({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=yA({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),i=vE({inputs:{real:t,imag:r},backend:n}),{real:a,imag:u}=BC(i,e,n),c=tf(a,u);for(let e=0;e<s;e++){const t=sf(c,e);h[g*s+e]=t.real,d[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=vE({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function BC(t,e,n){const r=ut(t.shape),i=n.data.get(t.dataId),s=n.data.get(i.complexTensorInfos.real.dataId).values,a=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const i=UC(s,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",i.real),e=n.makeTensorInfo(o,"float32",i.imag),s=n.makeTensorInfo([],"float32",Ri(r,"float32")),a=nE({inputs:{x:s},backend:n}),l=LC.kernelFunc({inputs:{a:t,b:s},backend:n}),u=LC.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return i}return ef(function(t,e,n){const r=new Float32Array(2*e);for(let i=0;i<e;i++){let s=0,a=0;for(let r=0;r<e;r++){const o=lf(i*r,e,n),l=sf(t,r);s+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(s/=e,a/=e),af(r,s,a,i)}return r}(tf(s,a),r,e));var o}function UC(t,e,n,r,i){if(1===n)return{real:t,imag:e};const s=tf(t,e),a=n/2,o=nf(s),l=o.real,u=o.imag,c=[l.length],h=i.makeTensorInfo(c,"float32",l),d=i.makeTensorInfo(c,"float32",u),p=vE({inputs:{real:h,imag:d},backend:i}),f=rf(s),m=f.real,g=f.imag,y=[m.length],x=i.makeTensorInfo(y,"float32",m),v=i.makeTensorInfo(y,"float32",g),b=vE({inputs:{real:x,imag:v},backend:i}),w=UC(l,u,a,r,i),_=w.real,S=w.imag,M=[_.length],T=i.makeTensorInfo(M,"float32",_),E=i.makeTensorInfo(M,"float32",S),A=vE({inputs:{real:T,imag:E},backend:i}),C=UC(m,g,a,r,i),I=C.real,k=C.imag,R=[I.length],N=i.makeTensorInfo(R,"float32",I),L=i.makeTensorInfo(R,"float32",k),D=vE({inputs:{real:N,imag:L},backend:i}),P=of(n,r),O=[P.real.length],F=i.makeTensorInfo(O,"float32",P.real),z=i.makeTensorInfo(O,"float32",P.imag),B=vE({inputs:{real:F,imag:z},backend:i}),U=aC({inputs:{a:B,b:D},backend:i}),$=kE({inputs:{a:A,b:U},backend:i}),q=OC({inputs:{a:A,b:U},backend:i}),V=_E({inputs:{input:$},backend:i}),H=_E({inputs:{input:q},backend:i}),W=RA({inputs:{input:$},backend:i}),G=RA({inputs:{input:q},backend:i}),j=LA({inputs:[V,H],backend:i,attrs:{axis:0}}),X=LA({inputs:[W,G],backend:i,attrs:{axis:0}}),Y=i.data.get(j.dataId).values,K=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(X),{real:Y,imag:K}}const $C={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=ut(r.shape),s=r.shape[r.shape.length-1],a=NE({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=zC(a,!1,n),l=NE({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function qC(t){const{backend:e,attrs:n}=t,{shape:r,value:i,dtype:s}=n,a=s||Nt(i),o=_t(a,ut(r));return function(t,e,n){t.fill(e)}(o,i),e.makeTensorInfo(r,a,o)}const VC={kernelName:nn,backendName:"cpu",kernelFunc:qC},HC={kernelName:rn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,i=n,s=wt(r.dtype,ut(r.shape)),[a,o,l,u]=r.shape,c=i.data.get(r.dataId).values;for(let h=0;h<a;h++){const t=h*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let i=0;i<u;i++){const a=Math.round(l-e-1),o=t+n+r+i;let h=c[o];a>=0&&a<l&&(h=c[t+n+a*u+i]),s[o]=h}}}}return{dataId:i.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WC=fE(t=>Math.floor(t)),GC=QT(sn,WC),jC={kernelName:sn,backendName:"cpu",kernelFunc:GC},XC=aE((t,e)=>Math.floor(t/e)),YC=EE(an,XC,null,"int32"),KC={kernelName:an,backendName:"cpu",kernelFunc:YC},JC={kernelName:ni,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=PA({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=kE({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=xE(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}},ZC={kernelName:ri,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=KA({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=kE({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=xE(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function QC(t,e,n,r,i,s,a,o,l){const u=Ea([r,s],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let e=0;e<i;e++){const s=t[c*i+e];r+=s*a[e],n.push(s)}if(r<0||r>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let t=0;t<s;t++)u.values[c*s+t]=e.get(...e.indexToLoc(r*s+t))}return u}const tI={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=ut(r.shape),a=i.shape,o=a[a.length-1],[l,u,c,h]=ao(r,i);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=QC(n.data.get(i.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};function eI(t,e,n){const r=Ea(n,t.dtype);for(let i=0;i<r.size;++i){const n=r.indexToLoc(i).slice(),s=n[0],a=n[2],o=e.locToIndex([s,a]);n[2]=e.values[o];const l=t.locToIndex(n);0<=l&&l<t.values.length&&(r.values[i]=t.values[l])}return r}const nI={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r;YT([i,s],"gatherV2");const l=vt(a,i.shape)[0],u=n.data.get(s.dataId).values,c=i.shape[l];for(let v=0;v<u.length;++v){const t=u[v];st(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=o;null==o&&(h=0);const d=ut(s.shape),p=Rf(i,s,l,h),f=NE({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=NE({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),x=eI(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}},rI=aE((t,e)=>t>e?1:0),iI=EE(cn,rI,null,"bool"),sI={kernelName:cn,backendName:"cpu",kernelFunc:iI},aI=aE((t,e)=>t>=e?1:0),oI=EE(hn,aI,null,"bool"),lI={kernelName:hn,backendName:"cpu",kernelFunc:oI},uI={kernelName:pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=ut(r.shape),s=r.shape[r.shape.length-1],a=NE({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=zC(a,!0,n),l=NE({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},cI=ZT(mn,t=>Number.isFinite(t)?1:0,"bool"),hI={kernelName:mn,backendName:"cpu",kernelFunc:cI},dI=ZT(gn,t=>Math.abs(t)===1/0?1:0,"bool"),pI={kernelName:gn,backendName:"cpu",kernelFunc:dI},fI=ZT(yn,t=>Number.isNaN(t)?1:0,"bool"),mI={kernelName:yn,backendName:"cpu",kernelFunc:fI},gI=aE((t,e)=>t<e?1:0),yI=EE(vn,gI,null,"bool"),xI={kernelName:vn,backendName:"cpu",kernelFunc:yI},vI=aE((t,e)=>t<=e?1:0),bI=EE(bn,vI,null,"bool"),wI={kernelName:bn,backendName:"cpu",kernelFunc:bI};function _I(t,e,n){const r=(e-t)/(n-1),i=Bt(n,"float32");i[0]=t;for(let s=1;s<i.length;s++)i[s]=i[s-1]+r;return i}const SI={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=_I(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},MI=fE(t=>Math.log(t)),TI=QT(_n,MI),EI={kernelName:_n,backendName:"cpu",kernelFunc:TI},AI=ZT(Sn,t=>Math.log1p(t)),CI={kernelName:Sn,backendName:"cpu",kernelFunc:AI},II=aE((t,e)=>t&&e),kI=EE(Mn,II,null,"bool"),RI={kernelName:Mn,backendName:"cpu",kernelFunc:kI},NI=ZT(Tn,t=>t?0:1,"bool"),LI={kernelName:Tn,backendName:"cpu",kernelFunc:NI},DI=aE((t,e)=>t||e),PI=EE(En,DI,null,"bool"),OI={kernelName:En,backendName:"cpu",kernelFunc:PI},FI={kernelName:Cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r;YT(i,"LRN");const u=i.shape[3],c=u-1,h=n.data.get(i.dataId).values,d=ut(i.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,c);let i=0;for(;n<=r;n++){const t=h[n];i+=t*t}return i}for(let m=0;m<d;m++){const t=f(m),e=h[m]*Math.pow(a+o*t,-l);p[m]=e}return n.makeTensorInfo(i.shape,i.dtype,p)}},zI={kernelName:In,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;YT(a,"LRNGrad");const h=ut(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let x=0;x<y;x++){const t=x%d,e=x-t+Math.max(0,t-o),n=x-t+Math.min(d,t+o+1);let r=0;for(let i=e;i<n;i++)r+=Math.pow(f[i],2);r=u*r+l;for(let i=e;i<n;i++){let t=-2*u*c*f[i]*m[x]/r;x===i&&(t+=Math.pow(r,-c)),t*=p[x],g[i]+=t}}return n.makeTensorInfo(a.shape,i.dtype,g)}};function BI(t,e,n,r){const i=wt(r,ut(n));for(let s=0;s<i.length;++s){const n=s*e;let r=t[n];for(let i=0;i<e;++i){const e=t[n+i];(Number.isNaN(e)||e>r)&&(r=e)}i[s]=r}return i}function UI(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=n;let l=i.shape;const u=l.length,c=vt(s,l);let h=c;const d=Nc(h,u);let p=o.data.get(i.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=HE(p,l,i.dtype,d,t),h=Dc(h.length,u),l=t}YT(i,"max"),Rc("max",h,u);const[f,m]=Ic(l,h),g=BI(p,ut(m),f,i.dtype),y=o.write(g,f,i.dtype);let x=f;return a&&(x=kc(f,c)),{dataId:y,shape:x,dtype:i.dtype}}const $I={kernelName:kn,backendName:"cpu",kernelFunc:UI},qI=aE((t,e)=>Math.max(t,e)),VI=EE(Rn,qI),HI={kernelName:Rn,backendName:"cpu",kernelFunc:VI},WI={kernelName:Nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;YT(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;st(lu(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=Zl(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ht(u.inShape,u.outShape))c=nE({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Pt(i.shape),r=lA(t,i.shape,i.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},GI={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;YT(i,"maxPool3d");const c=Ql(i.shape,s,a,1,o,l,u),h=cA(n.data.get(i.dataId).values,i.shape,i.dtype,Pt(i.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},jI={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;YT([i,s],"maxPool3DGrad");const c=Ql(s.shape,a,o,1,l,u),h=function(t,e){const n=Ea(e.outShape,"int32"),r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const x=y*r-d;let v=x;for(;v<0;)v+=a;const b=Math.min(e.inDepth,u+x);for(let r=0;r<e.outHeight;++r){const u=r*i-p;let d=u;for(;d<0;)d+=o;const w=Math.min(e.inHeight,c+u);for(let i=0;i<e.outWidth;++i){const p=i*s-f;let _=p;for(;_<0;)_+=l;const S=Math.min(e.inWidth,h+p);let M=Number.NEGATIVE_INFINITY,T=-1;for(let e=v;e<b;e+=a){const n=e-x;for(let r=d;r<w;r+=o){const i=r-u;for(let s=_;s<S;s+=l){const a=s-p,o=t.get(m,e,r,s,g);o>=M&&(M=o,T=n*c*h+i*c+a)}}}n.set(T,m,y,r,i,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=x-1-c.padInfo.front,_=b-1-c.padInfo.left,S=v-1-c.padInfo.top,M=Ea(s.shape,"float32"),T=n.bufferSync(i);for(let E=0;E<c.batchSize;++E)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const i=e-w,s=n-S,a=r-_;let o=0;for(let e=0;e<x;e+=m){const n=(i+e)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=g){const i=(s+r)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let s=0;s<b;s+=y){const l=(a+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*v*b-1-h.get(E,n,i,l,t)===e*v*b+r*b+s?1:0;0!==u&&(o+=T.get(E,n,i,l,t)*u)}}}M.set(o,E,e,n,r,t)}return n.makeTensorInfo(M.shape,M.dtype,M.values)}},XI={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;YT([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Zl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Ea(d.outShape,o.dtype,uA(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=v-1-d.padInfo.top,S=Ea(o.shape,"float32"),M=n.data.get(i.dataId).values,T=Ea(i.shape,"float32",M);for(let E=0;E<d.batchSize;++E)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-_,i=n-w;let s=0;for(let e=0;e<v;e+=y){const n=(r+e)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<b;r+=x){const a=(i+r)/g;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=v*b-1-f.get(E,n,a,t)===e*b+r?1:0;0!==o&&(s+=T.get(E,n,a,t)*o)}}S.set(s,E,e,n,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},YI={kernelName:On,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;YT(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Zl(r.shape,i,s,[1,1],a),[h,d]=function(t,e,n,r,i){const s=lA(t,0,n,Pt(e),i,"max"),a=uA(t,e,n,i,!0,r);return[s.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},KI={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=vt(s,i.shape),l=ut(Ic(i.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=ME({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=NC({inputs:{a:h,b:c},backend:n});u.push(d);const p=lC({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:a}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},JI={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;YT(i,"min");const o=vt(s,i.shape);let l=o;const u=Nc(l,i.shape.length);let c=i;null!=u&&(c=WE({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Dc(l.length,i.shape.length)),Rc("min",l,c.shape.length);const[h,d]=Ic(c.shape,l),p=ut(d),f=Bt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const r=m[t+n];(Number.isNaN(r)||r<e)&&(e=r)}f[y]=e}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=NE({inputs:{x:g},backend:n,attrs:{shape:kc(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},ZI=aE((t,e)=>Math.min(t,e)),QI=EE(Bn,ZI),tk={kernelName:Bn,backendName:"cpu",kernelFunc:QI},ek={kernelName:Un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,mode:a}=r;YT(i,"mirrorPad");const o=s.map((t,e)=>t[0]+i.shape[e]+t[1]),l=s.map(t=>t[0]),u=s.map((t,e)=>t[0]+i.shape[e]),c="reflect"===a?0:1,h=n.data.get(i.dataId).values,d=i.shape.length,p=Pt(i.shape),f=ut(o),m=o.length,g=Pt(o),y=wt(i.dtype,f);for(let x=0;x<f;x++){let t=Vt(x,m,g);for(let n=0;n<m;n++)t[n]<l[n]?t[n]=2*l[n]-t[n]-c:t[n]>=u[n]&&(t[n]=2*(u[n]-1)-t[n]+c);t=t.map((t,e)=>t-l[e]);const e=qt(t,d,p);y[x]=h[e]}return{dataId:n.write(y,o,i.dtype),shape:o,dtype:i.dtype}}},nk=aE((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),rk=EE($n,nk),ik={kernelName:$n,backendName:"cpu",kernelFunc:rk};function sk(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=i.shape.length;let o=s;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=vt([o],i.shape),u=UI({inputs:{x:i},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=kc(u.shape,l),h=NE({inputs:{x:u},backend:n,attrs:{shape:c}}),d=OC({inputs:{a:i,b:h},backend:n}),p=MC({inputs:{x:d},backend:n}),f=lC({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=NE({inputs:{x:f},backend:n,attrs:{shape:c}}),g=NC({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const ak={kernelName:Ir,backendName:"cpu",kernelFunc:sk},ok={kernelName:qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r;YT(i,"multinomial");const l=o?i:sk({inputs:{logits:i},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],p=Bt(ut(d),"int32");for(let f=0;f<u;++f){const t=f*c,e=new Float32Array(c-1);e[0]=h[t];for(let i=1;i<e.length;++i)e[i]=e[i-1]+h[t+i];const n=ph.alea(a.toString()),r=f*s;for(let i=0;i<s;++i){const t=n();p[r+i]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){p[r+i]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function lk(t,e,n){const r=Ri(-1,n);return iC([],e,r,t,n)}const uk={kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;YT(r,"neg");const i=n.data.get(r.dataId).values,[s,a]=lk(i,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,s)}},ck=Gd,hk={kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;YT(i,"NonMaxSuppression");const u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=ck(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},dk=jd,pk={kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;YT(i,"NonMaxSuppressionPadded");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=dk(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},fk=Xd,mk={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;YT(i,"NonMaxSuppressionWithScore");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=fk(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},gk=aE((t,e)=>t!==e?1:0),yk=EE(Wn,gk,null,"bool"),xk={kernelName:Wn,backendName:"cpu",kernelFunc:yk},vk={kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{depth:s,onValue:a,offValue:o}=r;YT(i,"oneHot");const l=ut(i.shape),u=new Float32Array(l*s);u.fill(o);const c=n.data.get(i.dataId).values;for(let h=0;h<l;++h)c[h]>=0&&c[h]<s&&(u[h*s+c[h]]=a);return n.makeTensorInfo([...i.shape,s],"int32",u)}};function bk(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=_E({inputs:{input:r},backend:n}),e=bk({inputs:{x:t},backend:n}),i=RA({inputs:{input:r},backend:n}),s=bk({inputs:{x:i},backend:n}),a=vE({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return qC({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const wk={kernelName:Jr,backendName:"cpu",kernelFunc:bk},_k={kernelName:Yn,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===i.dtype){const e=_E({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=RA({inputs:{input:i},backend:r}),a=bk({inputs:{x:s},backend:r}),o=vE({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return qC({backend:r,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}};function Sk(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return EC({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach(t=>{at(s,t.shape,"All tensors passed to stack must have matching shapes"),st(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=LA({inputs:e.map(t=>{const e=EC({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e}),backend:n,attrs:{axis:i}});return o.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}const Mk={kernelName:Jn,backendName:"cpu",kernelFunc:Sk},Tk={kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;YT(i,"pad");const o=s.map((t,e)=>t[0]+i.shape[e]+t[1]),l=s.map(t=>t[0]),u=n.data.get(i.dataId).values,c=ut(i.shape),h=i.shape.length,d=Pt(i.shape),p=ut(o),f=o.length,m=Pt(o),g=wt(i.dtype,p);0!==a&&g.fill(a);for(let y=0;y<c;y++)g[qt(Vt(y,h,d).map((t,e)=>t+l[e]),f,m)]=u[y];return{dataId:n.write(g,o,i.dtype),shape:o,dtype:i.dtype}}},Ek=aE((t,e)=>Math.pow(t,e)),Ak=EE(tr,Ek),Ck={kernelName:tr,backendName:"cpu",kernelFunc:Ak};function Ik(t,e,n,r){const[i,s]=Ic(t,r),a=is(e,"int32"),o=Bt(ut(i),a),l=ut(s);for(let u=0;u<o.length;++u){const t=u*l;let e=1;for(let r=0;r<l;++r)e*=n[t+r];o[u]=e}return{outVals:o,outShape:i,outDtype:a}}const kk={kernelName:nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;YT(i,"prod");const o=i.shape.length,l=vt(s,i.shape),u=Nc(l,o);let c=l,h=i;const d=[];null!=u&&(h=WE({inputs:{x:i},backend:n,attrs:{perm:u}}),d.push(h),c=Dc(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Ik(h.shape,h.dtype,p,c);let y=m;return a&&(y=kc(m,l)),d.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,f)}};function Rk(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return Bt(0,r);const i=Bt(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),i[0]=t;for(let s=1;s<i.length;s++)i[s]=i[s-1]+n;return i}const Nk={kernelName:rr,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,dtype:s,step:a}=n,o=Rk(r,i,a,s);return e.makeTensorInfo([o.length],s,o)}},Lk=ZT(sr,t=>1/t),Dk={kernelName:sr,backendName:"cpu",kernelFunc:Lk},Pk={kernelName:cr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;YT(i,"resizeBilinear");const l=Pt(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(ut([h,u,c,f])),y=[s&&u>1?d-1:d,s&&c>1?p-1:p],x=[s&&u>1?u-1:u,s&&c>1?c-1:c];let v=0;const b=y[0]/x[0],w=y[1]/x[1];for(let _=0;_<h;_++)for(let t=0;t<u;t++){let e;e=a?b*(t+.5)-.5:b*t;const n=Math.max(0,Math.floor(e)),r=e-n,i=Math.min(d-1,Math.ceil(e)),s=_*l[0]+n*l[1],o=_*l[0]+i*l[1];for(let t=0;t<c;t++){let e;e=a?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),i=e-n,u=Math.min(p-1,Math.ceil(e)),c=s+n*l[2],h=o+n*l[2],d=s+u*l[2],y=o+u*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],s=e+(m[d+t]-e)*i,a=s+(n+(m[y+t]-n)*i-s)*r;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},Ok={kernelName:hr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;YT([s,i],"resizeBilinearGrad");const o=Pt(i.shape),[l,u,c,h]=i.shape,[,d,p]=s.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=m[0]/g[0],x=m[1]/g[1],v=n.data.get(s.dataId).values;let b=0;for(let w=0;w<l;w++){const t=w*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),i=Math.min(Math.ceil(n),u-1),s=t+r*o[1],a=t+i*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),i=e-n,u=1-i,p=s+n*o[2],m=s+r*o[2],g=a+n*o[2],y=a+r*o[2],w=d*u,_=d*i,S=l*u,M=l*i;for(let t=0;t<h;t++){const e=v[b++];f[p+t]+=e*w,f[m+t]+=e*_,f[g+t]+=e*S,f[y+t]+=e*M}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},Fk={kernelName:lr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;YT(i,"resizeNearestNeighbor");const l=Pt(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(h*u*c*f),y=[s&&u>1?d-1:d,s&&c>1?p-1:p],x=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=y[0]/x[0],b=y[1]/x[1];let w=0;for(let _=0;_<h;_++){const t=_*l[0];for(let e=0;e<u;e++){const n=a?v*(e+.5):v*e;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const i=t+r*l[1];for(let t=0;t<c;t++){const e=a?b*(t+.5):b*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=i+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],i.dtype,g)}},zk={kernelName:ur,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;YT([s,i],"resizeNearestNeighborGrad");const o=Pt(i.shape),l=Pt(s.shape),[u,c,h,d]=i.shape,[,p,f]=s.shape,m=new Float32Array(u*c*h*d),g=n.data.get(s.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=y[0]/x[0],b=y[1]/x[1],w=1/v,_=1/b,S=2*Math.ceil(w)+2,M=2*Math.ceil(_)+2;for(let T=0;T<u;T++){const t=T*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),i=Math.floor(r-S/2);for(let s=0;s<h;s++){const r=n+s*o[2],u=Math.floor(s*_),y=Math.floor(u-M/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<S;r++){const u=r+i;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*v;if(e===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<M;t++){const e=t+y;if(e<0||e>=f)continue;const r=d+e*l[2],i=e*b;s===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(i.shape,i.dtype,m)}},Bk={kernelName:pr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r;YT(i,"reverse");const a=i.shape.length,o=vt(s,i.shape);if(0===a)return nE({inputs:{x:i},backend:n});const l=new Wi(i.shape,i.dtype),u=n.bufferSync(i);for(let c=0;c<l.size;c++){const t=l.indexToLoc(c),e=t.slice();o.forEach(t=>e[t]=i.shape[t]-1-e[t]),l.set(u.get(...e),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Uk={kernelName:ti,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=wt(r.dtype,ut(r.shape)),[u,c,h,d]=r.shape,[p,f]=Up(a,c,h),m=Math.sin(i),g=Math.cos(i),y=o.data.get(r.dataId).values;for(let x=0;x<u;x++){const t=x*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const i=r*d;for(let a=0;a<d;a++){const o=[u,e,r,a],x=o[2],v=o[1];let b=(x-p)*g-(v-f)*m,w=(x-p)*m+(v-f)*g;b=Math.round(b+p),w=Math.round(w+f);let _=s;"number"!=typeof s&&(_=3===a?255:s[a]),b>=0&&b<h&&w>=0&&w<c&&(_=y[t+w*(h*d)+b*d+a]),l[t+n+i+a]=_}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$k=ZT(fr,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}),qk={kernelName:fr,backendName:"cpu",kernelFunc:$k},Vk=fE(t=>1/Math.sqrt(t)),Hk=QT(mr,Vk),Wk={kernelName:mr,backendName:"cpu",kernelFunc:Hk};function Gk(t,e,n,r,i,s,a,o,l,u){const c=[r/i,i],h=t.values,d=e.values;if(0===r)return Ea(n,e.dtype);const p=Ea(c,e.dtype);p.values.fill(l);for(let f=0;f<s;f++){const t=[];let s=0;for(let e=0;e<a;e++){const n=h[f*a+e];t.push(n),s+=n*o[e]}if(s<0||s>=r/i)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<i;n++)u?p.values[s*i+n]+=d[f*i+n]:p.values[s*i+n]=0===e.rank?d[0]:d[f*i+n]}return p}const jk={kernelName:gr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=uo(0,i,a),d=Gk(n.bufferSync(i),n.bufferSync(s),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}},Xk={kernelName:yr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e;YT([r,i,s],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=is(i.dtype,s.dtype),h=Bt(ut(i.shape),c);let d=0;const p=0===a||a>1||1===i.shape.length?1:ut(i.shape.slice(1));for(let f=0;f<o.length;f++)for(let t=0;t<p;t++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(i.shape,c,h)}},Yk=Gp,Kk=jp,Jk=ZT(xr,t=>t>=0?Kk*t:Yk*(Math.exp(t)-1)),Zk={kernelName:xr,backendName:"cpu",kernelFunc:Jk},Qk=ZT(_r,t=>t<0?-1:t>0?1:0),tR={kernelName:_r,backendName:"cpu",kernelFunc:Qk},eR=ZT(br,t=>Math.sin(t)),nR={kernelName:br,backendName:"cpu",kernelFunc:eR},rR=ZT(wr,t=>Math.sinh(t)),iR={kernelName:wr,backendName:"cpu",kernelFunc:rR},sR=Math.log(1.1920928955078125e-7)+2,aR=ZT(Mr,t=>{const e=t>-sR,n=t<sR,r=Math.exp(t);let i;return i=n?r:e?t:Math.log(1+r),i}),oR={kernelName:Mr,backendName:"cpu",kernelFunc:aR},lR={kernelName:Ar,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;YT([i],"spaceToBatchND");const o=ut(s),l=[[0,0]];l.push(...a);for(let g=1+s.length;g<i.shape.length;++g)l.push([0,0]);const u=Tk.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),c=$p(u.shape,s,o,!1),h=qp(c.length,s.length,!1),d=Vp(u.shape,s,o,!1),p=NE({inputs:{x:u},backend:n,attrs:{shape:c}}),f=WE({inputs:{x:p},backend:n,attrs:{perm:h}}),m=NE({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function uR(t,e,n,r,i,s,a){const o=e[0],l=s[0],u=new Array(l),c=new Array(o),h=e[1];if(0===l){if(0!==o)throw new Error(yf(o));return[_t(n,0),[0,h],_t(i,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<o;++g){const e=t[g*h];if(e<0)throw new Error(xf(g,e));if(e>=l)throw new Error(vf(g,e,l));++f[e],d=d&&e>=p,p=e}let m=!0;for(let g=0;g<l;++g){const t=0===f[g];u[g]=t,m=m&&!t,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const e=t,n=r;for(let t=0;t<o;++t)c[t]=t;return[e,[o,h],n,u,c]}{const e=f[l-1],s=_t(n,e*h),d=_t(i,e),p=new Array(l).fill(0);for(let n=0;n<o;++n){const e=t[n*h],i=p[e],a=(0===e?0:f[e-1])+i;p[e]++;for(let r=0;r<h;++r)s[a*h+r]=t[n*h+r];d[a]=r[n],c[n]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];s[e*h+0]=t;for(let t=1;t<h;++t)s[e*h+t]=0;d[e]=a}return[s,[e,h],d,u,c]}}const cR={kernelName:kr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==i.shape.length)throw new Error("Values must be a vector, saw:\n        "+i.shape);if(0!==a.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+a.shape);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=uR(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function hR(t,e,n,r,i){const s=ut(r),a=e[0],o=i.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const t=i[m];if(-1===t){if(-1!==c)throw new Error(bf(c,m));c=m,l.push(1)}else{if(t<0)throw new Error(wf(m,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/u);if(u*t!==s)throw new Error(Sf(r,l));l[c]=t}if(ut(l)!==s)throw new Error(Mf(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=_t(n,a*o);for(let m=0;m<a;++m){let e=0;for(let n=0;n<h;++n)e+=t[m*h+n]*d[n];for(let t=0;t<o;++t)f[m*o+t]=Math.trunc(e/p[t]),e%=p[t]}return[f,[a,o],l]}const dR={kernelName:Rr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==i.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+i.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const a=Array.from(n.data.get(i.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,h]=hR(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function pR(t,e,n,r,i,s=!1,a=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],c=o>0?i[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const d=_t(n,h.reduce((t,e)=>t*e,1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=i[p];for(;;){let e=0;if(f<o){if(e=i[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Af(g,c));g>m&&d.fill(a,m*u,g*u);for(let n=p;n<f;++n){const e=r[n];if(e<0||e>=l[0])throw new Error(Cf(n,r[n],l[0]));for(let n=0;n<u;n++)d[g*u+n]+=t[e*u+n]}if(s)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<c&&d.fill(a,m*u,c*u),[d,h]}const fR={kernelName:Nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error("Indices should be a vector but received shape\n          "+i.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+s.shape);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=pR(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},mR={kernelName:Lr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error("Indices should be a vector but received shape\n         "+i.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+s.shape);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=pR(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},gR={kernelName:Dr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=uo(0,i,o),p=Gk(n.bufferSync(i),n.bufferSync(s),o,d,c,u,l,h,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},yR={kernelName:Cr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=vt(a,i.shape)[0],l=gf(i,s,o),u=new Array(i.shape.length).fill(0),c=i.shape.slice();return l.map(t=>{const e=[...c];e[o]=t;const r=yA({inputs:{x:i},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r})}},xR=fE(t=>Math.sqrt(t)),vR=ZT(Tr,t=>Math.sqrt(t)),bR={kernelName:Tr,backendName:"cpu",kernelFunc:vR},wR={kernelName:Or,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;YT(n,"square");const i=r.data.get(n.dataId).values,s=new Float32Array(i.length);for(let a=0;a<i.length;++a){const t=i[a];s[a]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},_R=aE((t,e)=>{const n=t-e;return n*n}),SR=EE(Pr,_R),MR={kernelName:Pr,backendName:"cpu",kernelFunc:SR},TR=ZT(Zr,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),ER={kernelName:Zr,backendName:"cpu",kernelFunc:TR};function AR(t,e,n,r){const i=Ea(t,e.dtype);for(let s=0;s<i.size;s++){const t=i.indexToLoc(s),a=new Array(t.length);for(let e=0;e<a.length;e++)a[e]=t[e]*n[e]+r[e];i.set(e.get(...a),...t)}return i}const CR={kernelName:Fr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;YT(i,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:v,strides:b}=Eo(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=NE({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||y){st(i.shape.length>=1,()=>"Input must have rank at least 1, got: "+i.shape.length);const t=po(x,v,b),e=yA({inputs:{x:i},backend:n,attrs:{begin:x,size:t}});w=NE({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=AR(p,n.bufferSync(i),b,x);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};class IR{constructor(t,e,n,r,i,s){this.separator=Pi(t),this.nGramWidths=e,this.leftPad=Pi(n),this.rightPad=Pi(r),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,i,s){for(let a=0;a<i;++a){const o=this.getPadWidth(s),l=Math.max(0,o-a),u=Math.max(0,o-(i-(a+1))),c=s-(l+u),h=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<c;++e)d+=t[h+e].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=t=>t.forEach(t=>p[f++]=t);for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<c-1;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error("First split value must be 0, got "+t);for(let i=1;i<r;++i){let r=e[i]>=t;if(r=r&&e[i]<=n,!r)throw new Error(`Invalid split value ${e[i]}, must be in [${t}, ${n}]`);t=e[i]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const i=r-1,s=_t("int32",r);if(0===n||0===r){const t=new Array(n);for(let e=0;e<=i;++e)s[e]=0;return[t,s]}s[0]=0;for(let o=1;o<=i;++o){const t=e[o]-e[o-1];let n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(t,e)}),this.preserveShort&&t>0&&0===n&&(n=1),s[o]=s[o-1]+n}const a=new Array(s[i]);for(let o=0;o<i;++o){const n=e[o];let r=s[o];if(this.nGramWidths.forEach(i=>{const s=e[o+1]-e[o],l=this.getNumNGrams(s,i);this.createNGrams(t,n,a,r,l,i),r+=l}),this.preserveShort&&r===s[o]){const i=e[o+1]-e[o];if(0===i)continue;const s=i+2*this.padWidth,l=1;this.createNGrams(t,n,a,r,l,s)}}return[a,s]}}function kR(t,e,n,r,i,s,a,o){return new IR(n,r,i,s,a,o).compute(t,e)}const RR={kernelName:zr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=kR(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function NR(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const i=e[0];let s=t.indexOf(i);for(;-1!==s;){const e=t.subarray(0,s);n&&0===e.length||r.push(e),s=(t=t.subarray(s+1)).indexOf(i)}return void(n&&0===t.length||r.push(t))}let i=0;for(let s=0;s<t.length+1;s++)if(s===t.length||-1!==e.indexOf(t[s])){const e=t.subarray(i,s);n&&0===e.length||r.push(e),i=s+1}}function LR(t,e,n){const r=t.length,i=[];let s=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const r=i.length;NR(t[d],e,n,i);const l=i.length-r;o[d]=l,s+=l,a=Math.max(a,l)}const l=_t("int32",2*s),u=new Array(s),c=[r,a];let h=0;for(let d=0;d<r;++d)for(let t=0;t<o[d];++t)l[2*h]=d,l[2*h+1]=t,u[h]=i[h],++h;return[l,u,c]}const DR={kernelName:Br,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==a.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+a.shape);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=LR(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function PR(t,e){const n=_t("int32",t.length);for(let r=0;r<t.length;++r)n[r]=ki(t[r]).modulo(e).getLowBitsUnsigned();return n}const OR={kernelName:Ur,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=PR(n.data.get(s.dataId).values,i);return n.makeTensorInfo(s.shape,"int32",a)}},FR=ZT(qr,t=>Math.tan(t)),zR={kernelName:qr,backendName:"cpu",kernelFunc:FR},BR=ZT(Vr,t=>Math.tanh(t));function UR(t,e){const n=new Array(t.rank);for(let i=0;i<n.length;i++)n[i]=t.shape[i]*e[i];const r=Ea(n,t.dtype);for(let i=0;i<r.values.length;++i){const e=r.indexToLoc(i),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const s=t.locToIndex(n);r.values[i]=t.values[s]}return r}const $R=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function qR(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,s=e-n+1,a=Math.log(i),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(i-o)/i)*Math.sign(s-i/2);qR(t,e,Math.max(n,Math.floor(e-s*o/i+l)),Math.min(r,Math.floor(e+(i-s)*o/i+l)))}const i=t[e];let s=n,a=r;for(et(t,n,e),$R(t[r],i)>0&&et(t,n,r);s<a;){for(et(t,s,a),s++,a--;$R(t[s],i)<0;)s+=1;for(;$R(t[a],i)>0;)a-=1}0===$R(t[n],i)?et(t,n,a):(a+=1,et(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function VR(t,e,n,r,i){const s=e[e.length-1],[a,o]=[t.length/s,s],l=wt(n,a*r),u=wt("int32",a*r);for(let h=0;h<a;h++){const e=h*o,n=t.subarray(e,e+o);let s=new Array(n.length);n.forEach((t,e)=>s[e]={value:t,index:e}),r<s.length&&(qR(s,r),s=s.slice(0,r)),i&&s.sort($R);const a=h*r,c=l.subarray(a,a+r),d=u.subarray(a,a+r);for(let t=0;t<r;t++)c[t]=s[t].value,d[t]=s[t].index}const c=e.slice();return c[c.length-1]=r,[Ea(c,n,l),Ea(c,"int32",u)]}function HR(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return Q(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return Q(0,n,e-1)}(t,e);case"nearest":return function(t,e){return Q(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function WR(t,e,n,r,i,s,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*i+l*s+u]:c}function GR(t,e,n,r,i,s,a,o,l,u,c){return WR(t,e,n,r,i,s,a,Math.round(o),Math.round(l),u,c)}function jR(t,e,n,r,i,s,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*WR(t,e,n,r,i,s,a,h,d,u,c)+(l-d)*WR(t,e,n,r,i,s,a,h,f,u,c))+(o-h)*((f-l)*WR(t,e,n,r,i,s,a,p,d,u,c)+(l-d)*WR(t,e,n,r,i,s,a,p,f,u,c))}function XR(t,e,n,r){const i=vt(e,n)[0],s=[1,n[0],1];for(let f=0;f<i;f++)s[0]*=n[f];s[1]=n[i];for(let f=i+1;f<n.length;f++)s[2]*=n[f];const a={},o=new Int32Array(n[i]),l=new Wi(s,r,t),u=[],c=1===s[0]&&1===s[2];for(let f=0;f<n[i];f++){let e;if(c)e=t[f].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(l.get(e,f,n));e=t.join(",")}if(void 0!==a[e])o[f]=a[e];else{const t=Object.keys(a).length;a[e]=t,o[f]=t,u.push(f)}}const h=s.slice();h[1]=Object.keys(a).length;const d=new Wi(h,r);u.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,t,r),n,e,r)});const p=n.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const YR=[OE,zE,UE,qE,RE,VE,jE,XE,YE,KE,ZE,tA,nA,sA,oA,hA,dA,pA,fA,PE,mA,vA,_A,SA,TE,EA,CA,bE,IA,DA,OA,FA,zA,BA,UA,$A,VA,WA,GA,jA,XA,YA,JA,ZA,QA,tC,eC,nC,rC,cC,eE,hC,fC,_C,TC,AC,kC,$C,VC,HC,jC,KC,JC,ZC,tI,nI,sI,lI,rE,uI,NA,hI,pI,mI,sE,xI,wI,SI,EI,CI,RI,LI,OI,FI,zI,$I,HI,WI,GI,jI,XI,YI,KI,JI,tk,ek,ik,ok,oC,uk,hk,pk,mk,xk,vk,_k,Mk,Tk,Ck,uE,kk,Nk,SE,LC,Dk,hE,pE,LE,Pk,Ok,Fk,zk,Bk,Uk,qk,Wk,jk,Xk,Zk,yE,tR,nR,iR,xA,ak,oR,lR,cR,dR,fR,mR,gR,yR,bR,wR,MR,ER,CR,RR,DR,OR,FC,uC,zR,{kernelName:Vr,backendName:"cpu",kernelFunc:BR},{kernelName:Hr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;YT(i,"tile");const a=UR(n.bufferSync(i),s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Wr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r;YT(i,"topk");const o=n.data.get(i.dataId).values,[l,u]=VR(o,i.shape,i.dtype,s,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:Gr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],y=Pt(i.shape),x=y[0],v=y[1],b=y[2],w=wt(i.dtype,ut(g));w.fill(l);const _=r.data.get(i.dataId).values,S=r.data.get(s.dataId).values;for(let M=0;M<c;++M){const t=1===s.shape[0]?S:S.subarray(8*M,8*M+8);for(let e=0;e<f;++e)for(let n=0;n<m;++n)for(let r=0;r<p;++r){let i;const s=t[6]*n+t[7]*e+1;if(0===s)continue;const u=(t[0]*n+t[1]*e+t[2])/s,c=(t[3]*n+t[4]*e+t[5])/s,p=HR(u,d,o),f=HR(c,h,o);switch(a){case"nearest":i=GR(_,h,d,x,v,b,M,f,p,r,l);break;case"bilinear":i=jR(_,h,d,x,v,b,M,f,p,r,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+a)}w[M*x+e*v+n*b+r]=i}return r.makeTensorInfo(g,i.dtype,w)}return{dataId:r.write(w,g,i.dtype),shape:i.shape,dtype:i.dtype}}},GE,{kernelName:Xr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;YT(s,"unique");const a=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=XR(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Yr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i.shape.length,o=i.shape[s],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==s&&(l[u++]=i.shape[p]);const c=new Array(a).fill(0),h=i.shape.slice();h[s]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[s]=p;const t=yA({inputs:{x:i},backend:n,attrs:{begin:c,size:h}});d[p]=NE({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Kr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r;YT(i,"unsortedSegmentSum");const o=[],l=[],u=i.shape.length-s.shape.length;let c=s;for(let d=0;d<u;++d){const t=EC({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=t,l.push(t)}for(let d=0;d<a;++d){const t=Ri(d,"int32"),e=n.makeTensorInfo([],"int32",t),r=pC({inputs:{a:e,b:c},backend:n}),s=ME({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=aC({inputs:{a:s,b:i},backend:n}),u=lC({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(e),l.push(r),l.push(s),l.push(a),l.push(u)}const h=Sk({inputs:o,backend:n,attrs:{axis:0}});return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},wk];for(const t of YR)hi(t);const KR={},JR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ZR(t,e){if(!(t in KR)){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete KR[t]},!1),1===t?n.getContext("webgl",JR)||n.getContext("experimental-webgl",JR):n.getContext("webgl2",JR)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;KR[t]=n}const n=KR[t];return null==n||n.isContextLost()?(delete KR[t],ZR(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),KR[t])}var QR,tN,eN;function nN(t,e){return[e,t]}function rN(t){const e=ut(t);return ft(Math.ceil(e/4))}function iN(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function sN(t,e){const n=t;let r,i,s,a,o,l,u,c,h,d;return 2===jt().getNumber("WEBGL_VERSION")?(r=n.R32F,i=n.R16F,s=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=t.RGBA,i=t.RGBA,s=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function aN(t,e){const n=e();return jt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}function oN(t){return!!(jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function lN(t,e){return gN(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(QR||(QR={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(tN||(tN={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(eN||(eN={}));const uN=/ERROR: [0-9]+:([0-9]+):/g;function cN(t,e){if(aN(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function hN(t,e,n,r,i,s,a){const o=t.getAttribLocation(e,n);return-1!==o&&(aN(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),aN(t,()=>t.vertexAttribPointer(o,i,t.FLOAT,!1,s,a)),aN(t,()=>t.enableVertexAttribArray(o)),!0)}function dN(t,e,n,r){aN(t,()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),aN(t,()=>t.activeTexture(t.TEXTURE0+n)),aN(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),aN(t,()=>t.uniform1i(n,r))}function pN(t,e,n){aN(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),aN(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function fN(t,e){aN(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),aN(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function mN(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function gN(t,e,n){const r=aN(t,()=>e());if(null==r)throw new Error(n);return r}function yN(t,e=2){return ut(t.slice(0,t.length-e))}function xN(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function vN(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[yN(t),...xN(t)]),e}function bN(t){return t%2==0}function wN(t,e){if(ht(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(bN(n)&&bN(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&bN(t[0])&&bN(e[0])}let _N,SN;function MN(t,e){return null!=t.getExtension(e)}function TN(t){try{if(null!=ZR(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function EN(t){const e=sN(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function AN(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&st("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}const CN=jt();function IN(){let t,e,n,r,i,s,a,o,l,u;return 2===jt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",i="texture",s="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",i="texture2D",s="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:i,output:s,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function kN(t,e,n="index"){const r=Pt(e);return r.map((e,i)=>`int ${t[i]} = ${n} / ${e}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${e}`:`index -= ${t[i]} * ${e}`};`).join("")}function RN(t,e,n="index"){const r=Pt(e);return r.map((e,i)=>`int ${t[i]} = ${n} / outShapeStrides[${i}]; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * outShapeStrides[${i}]`:`index -= ${t[i]} * outShapeStrides[${i}]`};`).join("")}function NN(t){const e=Pt(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}CN.registerFlag("HAS_WEBGL",()=>CN.getNumber("WEBGL_VERSION")>0),CN.registerFlag("WEBGL_VERSION",()=>TN(2)?2:TN(1)?1:0),CN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),CN.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===CN.get("WEBGL_VERSION")),CN.registerFlag("WEBGL_CPU_FORWARD",()=>!0),CN.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),CN.registerFlag("WEBGL_PACK",()=>CN.getBool("HAS_WEBGL")),CN.registerFlag("WEBGL_PACK_NORMALIZATION",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_CLIP",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_PACK_REDUCE",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_LAZILY_UNPACK",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_CONV_IM2COL",()=>CN.getBool("WEBGL_PACK")),CN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==_N){const e=ZR(t);_N=e.getParameter(e.MAX_TEXTURE_SIZE)}return _N}(CN.getNumber("WEBGL_VERSION"))),CN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==SN){const e=ZR(t);SN=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,SN)}(CN.getNumber("WEBGL_VERSION"))),CN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=CN.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=ZR(t);return e=MN(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:MN(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),CN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>CN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vs()),CN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=ZR(t);if(1===t){if(!MN(e,"OES_texture_float"))return!1}else if(!MN(e,"EXT_color_buffer_float"))return!1;return EN(e)}(CN.getNumber("WEBGL_VERSION"))),CN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!CN.getBool("WEBGL_FORCE_F16_TEXTURES")&&CN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),CN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(t){if(0===t)return!1;const e=ZR(t);if(1!==t){if(MN(e,"EXT_color_buffer_float"))return EN(e);const t="EXT_color_buffer_half_float";if(MN(e,t)){const n=e.getExtension(t);return function(t,e){const n=sN(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),s}(e,n)}return!1}return!!MN(e,"OES_texture_float")&&!!MN(e,"WEBGL_color_buffer_float")&&EN(e)}(CN.getNumber("WEBGL_VERSION"))),CN.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=CN.getNumber("WEBGL_VERSION"))&&null!=ZR(t).fenceSync;var t}),CN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>CN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),CN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),CN.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>vs()?1:-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}),CN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),CN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),CN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),CN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const LN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:DN}=v;function PN(t,e,n){const r=[];if(t.forEach(t=>{const e=ut(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=WN(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)});const i=r.join("\n"),s=t.map(t=>function(t,e,n=!1,r){let i="";i+=n?FN(t,r):ON(t,r);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(i+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=DN(t.shapeInfo.logicalShape,e.logicalShape),l=HN(a),u=a-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":a<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+u]} = 0;`).join("\n");let d="";d=a<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+u]).join(", ");let p="return outputValue;";const f=1===ut(t.shapeInfo.logicalShape),m=1===ut(e.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&ht(a,s))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=HN(l),c=DN(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map(t=>`coords.${p[t+h]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+p[e+h]).join(", "),`\n    float ${i}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),i}(t,e,n.packedInputs,n.enableShapeUniforms)).join("\n"),a=e.texShape,o=IN(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${zN}\n    ${BN}\n    ${UN}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ht(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const i=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[2]/2),s=i*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[t.length-1]/2),s=i*Math.ceil(t[t.length-2]/2);let a=s,o="",l="b, r, c";for(let u=2;u<t.length-1;u++)a*=t[t.length-u-1],o=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+o,l=`b${u}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return ht(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${RN(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=kN(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${RN(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=kN(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=kN(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=kN(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=$N),[h,l,c,i,u,s,n.userCode].join("\n")}function ON(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[i,s]=t.shapeInfo.texShape;if(1===i&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=qN(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${VN(t)}\n      }\n    `;const i=t.shapeInfo.texShape,s=i[0],a=i[1];if(1===a&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=qN(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape;if(null!=s&&ht(n,s)){if(e)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=s[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=bt(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${ON(GN(t,l),e)}\n      float ${i}(int row, int col) {\n        return ${i}(${jN(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${VN(t)}\n      }\n    `;const u=s[0],c=s[1],h=qN(r);return 1===c?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=bt(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${ON(GN(t,u),e)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${jN(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${VN(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===s&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=qN(r);return e?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${a} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],a=n[2]*s,o=n[1]*a,{newShape:l,keptDims:u}=bt(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${ON(GN(t,l),e)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${jN(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${s}, 1)));\n        ${VN(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=qN(r);return e?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[4],s=e[3]*i,a=e[2]*s,o=e[1]*a,{newShape:l,keptDims:u}=bt(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${ON(GN(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${jN(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${s}, ${i})) +\n          depth3;\n        ${VN(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];return p===o&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===i&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${s} +\n          depth2 * ${i} + depth3 + ${qN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=bt(e);if(i.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ON(GN(t,i))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${jN(e,s)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${VN(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];return f===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===a&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${qN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function FN(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${IN().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,s=IN();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=s[0],o=s[1],l=IN();if(null!=s&&ht(n,s))return e?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${FN(GN(t,n.slice(1)),e)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${jN(s,r)});\n        }\n      `}const o=IN();if(e)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=IN();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=t.shapeInfo.logicalShape,a=s.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(s[a-1]/2);let d=h*Math.ceil(s[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,d*=s[a-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const zN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",BN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",UN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$N="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qN(t){return"offset"+t}function VN(t){const e=t.name,n=ut(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function HN(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function WN(t,e,n){const{newShape:r,keptDims:i}=bt(e),s=e.length,a=t&&3===s&&1===e[0],o=a?e.slice(1):r,l=!t&&s>1&&!ht(e,n)&&r.length<s||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:i}}function GN(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function jN(t,e){return e.map(e=>t[e]).join(", ")}function XN(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,i=e[n],s=i.shape;if(!ht(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,o=i.isUniform?null:i.texData.texShape;if(!ht(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)})}function YN(t){return jt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class KN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=QR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=IN();this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RN(["r","c","d"],t):kN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class JN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=QR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=IN();this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RN(["r","c","d"],t):kN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class ZN{constructor(t){this.variableNames=["A"],this.outTexUsage=tN.DOWNLOAD;const e=IN();this.outputShape=t,this.userCode=`\n      ${LN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class QN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=tN.DOWNLOAD;const e=IN();this.outputShape=t,this.userCode=`\n      ${LN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class tL{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=IN();this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class eL{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=IN();this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length);let r="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let e=0;e<=1;e++){const i=2*s+e;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":""+t[2]}) {\n          localCoords[2] += ${e};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":""+t[1]}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NN(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${i};\n        }\n    `}}function nL(t,e,n,r,i,s){!function(t,e){const n=jt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return gN(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return aN(t,()=>t.bindTexture(o,a)),aN(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),aN(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),aN(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),aN(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),1===jt().getNumber("WEBGL_VERSION")?aN(t,()=>t.texImage2D(o,0,r,e,n,0,i,s,null)):aN(t,()=>t.texStorage2D(o,1,r,e,n)),aN(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function rL(t){return t.internalFormatFloat}function iL(t){return t.internalFormatHalfFloat}function sL(t){return t.downloadTextureFormat}function aL(t){return t.internalFormatPackedFloat}function oL(t){return t.internalFormatPackedHalfFloat}class lL{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=jt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){KR[t]=e}(e,t)):this.gl=ZR(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===jt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=lN(this.gl,t),MN(this.gl,e))this.textureHalfFloatExtension=lN(this.gl,e);else if(jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),MN(this.gl,r))this.colorBufferHalfFloatExtension=lN(this.gl,r);else if(jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",MN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!MN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=gN(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return aN(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),aN(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=gN(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return aN(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),aN(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return gN(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=sN(this.gl,this.textureHalfFloatExtension)}get debug(){return jt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;aN(t,()=>t.finish()),aN(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),aN(t,()=>t.deleteFramebuffer(this.framebuffer)),aN(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),aN(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),aN(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=nN(e,n);return nL(t,i,s,rL(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=nN(e,n);return nL(t,i,s,iL(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=nN(e,n);return nL(t,i,s,sL(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){aN(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?2===jt().getNumber("WEBGL_VERSION")?aN(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):aN(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):2===jt().getNumber("WEBGL_VERSION")?aN(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):aN(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),aN(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,i,s){let a,o,l;aN(t,()=>t.bindTexture(t.TEXTURE_2D,e)),i instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=s.internalFormatPackedFloat),a.set(i),2===jt().getNumber("WEBGL_VERSION")?aN(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,a)):aN(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a)),aN(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=iN(e,n);return nL(t,i,s,oL(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=iN(e,n);return nL(t,i,s,aL(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(fN(this.gl,this.framebuffer),this.outputTexture=null),aN(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[i,s]=nN(e,n),a=new Uint8Array(e*n*4);return aN(t,()=>t.readPixels(0,0,i,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,i,s){return function(t,e,n,r,i,s,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=iN(t,e);return n*r*4}(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const i=t.createBuffer();aN(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,i));const s=16*e*n;return aN(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),aN(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),aN(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),i}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(jt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(i,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=i}else jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return aN(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=IN();return function(t,e){const n=gN(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(aN(t,()=>t.shaderSource(n,e)),aN(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return gN(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return aN(e,()=>e.attachShader(n,this.vertexShader)),aN(e,()=>e.attachShader(n,t)),function(t,e){if(aN(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&cN(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return aN(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),hN(t,e,"clipSpacePos",n,3,20,0)&&hN(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&aN(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&cN(this.gl,this.program),aN(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return gN(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),aN(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),dN(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,i]=iN(e,n);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&cN(this.gl,this.program),mN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),aN(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),aN(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=lN(this.gl,2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await yt(()=>this.disposed||this.isQueryAvailable(t,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||yt(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),pN(this.gl,t,this.framebuffer),this.debug&&mN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pN(this.gl,this.outputTexture,this.framebuffer),this.debug&&mN(this.gl)):fN(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;pN(r,t,this.framebuffer),this.debug&&mN(r),this.outputTexture=t,aN(r,()=>r.viewport(0,0,e,n)),aN(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),aN(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:uL,bincountImpl:cL,bincountReduceImpl:hL,ceilImpl:dL,concatImpl:pL,equalImpl:fL,expImpl:mL,expm1Impl:gL,floorImpl:yL,gatherNdImpl:xL,gatherV2Impl:vL,greaterImpl:bL,greaterEqualImpl:wL,lessImpl:_L,lessEqualImpl:SL,linSpaceImpl:ML,logImpl:TL,maxImpl:EL,maximumImpl:AL,minimumImpl:CL,multiplyImpl:IL,negImpl:kL,notEqualImpl:RL,prodImpl:NL,rangeImpl:LL,rsqrtImpl:DL,sigmoidImpl:PL,simpleAbsImpl:OL,sliceImpl:FL,sparseFillEmptyRowsImpl:zL,sparseReshapeImpl:BL,sparseSegmentReductionImpl:UL,sqrtImpl:$L,stridedSliceImpl:qL,stringNGramsImpl:VL,stringSplitImpl:HL,stringToHashBucketFastImpl:WL,subImpl:GL,tileImpl:jL,topKImpl:XL,transposeImpl:YL,uniqueImpl:KL}=j;function JL(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function ZL(t,e){return 1===e?[t]:JL(t,e)}class QL{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=YN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=ZL("rc",this.rank),e=HN(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let i=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)i=t[t.length-1-e]+","+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > "+(this.enableShapeUniforms?"outShape":this.outputShape[0]);let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class tD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length);let n="";for(let s=0;s<4;s++){let t="thisRC = rc;";s%2==1&&(t+="thisRC.z += 1;"),s>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,i;this.userCode=`\n      ${r=e,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map(t=>`${e}[${t}]`),i=new Array(n-1);i[n-2]=r[n-1];for(let s=n-3;s>=0;--s)i[s]=`(${i[s+1]} * ${r[s+1]})`;return i}(t.map((t,e)=>e),e);return r.map((e,i)=>`int ${t[i]} = ${n} / ${r[i]}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${r[i]}`:`index -= ${t[i]} * ${r[i]}`};`).join("")}(["r","c","d"],"inputShape"):kN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":NN(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class eD{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=rD(e,n),i=iD(t,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const s=nD(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[i].shift();return this.usedTextures[i].push(t),t}let a;return r===eN.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===eN.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===eN.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===eN.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===eN.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const i=rD(n,r),s=iD(e,i,r);s in this.freeTextures||(this.freeTextures[s]=[]);const a=nD(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=jt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function nD(t,e,n,r,i){const s=function(t,e){switch(t){case eN.PACKED_2X2_FLOAT32:return aL(e);case eN.PACKED_2X2_FLOAT16:return oL(e);case eN.UNPACKED_FLOAT32:return rL(e);case eN.UNPACKED_FLOAT16:return iL(e);case eN.PACKED_4X1_UNSIGNED_BYTE:return sL(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let a;if(i){const[e,n]=iN(t[0],t[1]);a=e*n}else{const[e,n]=nN(t[0],t[1]);a=e*n}return a*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error("Unknown internal format "+e)}(n,s)}function rD(t,e){if(t===tN.UPLOAD)return eN.PACKED_2X2_FLOAT32;if(t===tN.RENDER||null==t)return function(t){return jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?eN.PACKED_2X2_FLOAT32:eN.UNPACKED_FLOAT32:t?eN.PACKED_2X2_FLOAT16:eN.UNPACKED_FLOAT16}(e);if(t===tN.DOWNLOAD||t===tN.PIXELS)return eN.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function iD(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class sD{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const aD="return abs(x);",oD="return x;";class lD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class uD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length);const e=t.length,n=ZL("rc",e),r=HN(e),i=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const cD=hd,hD={},dD=jt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class pD extends Y{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!jt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof lL)e=t;else{const n=ZR(jt().getNumber("WEBGL_VERSION"),t);e=new lL(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=ZR(jt().getNumber("WEBGL_VERSION"));e=new lL(t),this.binaryCache=((n=jt().getNumber("WEBGL_VERSION"))in hD||(hD[n]={}),hD[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new eD(this.gpgpu),this.numMBBeforeWarning=null==jt().global.screen?1024:jt().global.screen.height*jt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new X(this,Xo())}nextDataId(){return pD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((jt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||jt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:tN.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,i){if(jt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:tN.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:i,slice:s,shape:a,isPacked:o}=e;if(null!=s){let e;e=o?new lD(a,oD):new sD(a,oD);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Li()),c="complex64"===r?tf(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Li()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:i,dtype:s,complexTensorInfos:a,isPacked:o}=e;if(null!=i){let e;e=o?new lD(r,oD):new sD(r,oD);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if(jt().getBool("DEBUG")&&!jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===jt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&jt().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,...rN(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=tf(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=ut(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const t=this.gpgpu.gl;aN(t,()=>t.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Xo().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:i,slice:s,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new lD(i,oD):new sD(i,oD);const r=this.runWebGLProgram(n,[{dataId:t,shape:i,dtype:a}],a),s=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),c=Xo().makeTensorFromDataId(u.dataId,u.shape,u.dtype),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>Oi(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ea(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!oN(n)){if(jt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),i=ut(e);if(jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...rN(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const s=jt().getBool("WEBGL_PACK")&&!0===r,a=s?vN(e):e,o=s?new QN(a):new ZN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const i=lt(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=lt(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(i);a.kernelMs=nt(t),a.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Li(),endMs:null}}endTimer(t){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Li(),t)}async getQueryTime(t){if(jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:i,isPacked:s,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,i,s)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=dD){return jt().getBool("WEBGL_CPU_FORWARD")&&t.every(t=>null==this.texData.get(t.dataId).texture&&ut(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){ii("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return cD(t.shape,e)}packedUnaryOp(t,e,n){const r=new lD(t.shape,e),i=this.compileAndRun(r,[t],n);return Xo().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=OL(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(jt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,aD,t.dtype);const e=new sD(t.shape,aD),n=this.compileAndRun(e,[t]);return Xo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&It(n[0])){const i=n.map(t=>Pi(t));r=this.write(i,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Xo().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new uD(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new QL(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[yN(t.shape),...xN(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},i=[yN(e),...xN(e)],s=new tD(i,n),a=[n],o=this.runWebGLProgram(s,[r],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:i,dtype:s}=n;null!=e&&st(ut(i)<=e[0]*e[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const a=vN(i);let o;o=r?new JN(a):new KN(a);const l=[null!=e?e:rN(a)];return{dtype:s,shape:i,dataId:this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:t}],s,l,!0,e).dataId}}runWebGLProgram(t,e,n,r,i=!1,s){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===QR.DENSE){const e=null!=s?s:rN(t.outputShape);o.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===ut(a.shape))return o.values=wt(a.dtype,0),a;const l=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&ut(e.shape)<=jt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!wN(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),l.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach(e=>{const i=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const s=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=WN(t.packedInputs,e.shape,s);let u="",c="",h="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=Pt(o);h=`${t[0]===s[1]}_${t[t.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&ht(e.shape,s),f=1===ut(e.shape),m=Ja(e.shape,n.shape),g=!t.packedInputs&&d===n.shape.length&&ht(s,n.texData.texShape),y=t.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${i}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${i}`}});const i=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+i+jt().getNumber("WEBGL_VERSION"),s}(t,u,c),d=this.getAndSaveBinary(h,()=>function(t,e,n,r){const i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),s=i.map(t=>t.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=PN(i,a,e),l=function(t,e){const n=gN(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(aN(t,()=>t.shaderSource(n,e)),aN(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=uN.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],i=t.split("\n"),s=i.length.toString().length+2,a=i.map((t,e)=>gt((e+1).toString(),s)+t);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+gt(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===jt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d=!1,p={},f={},m={};for(let b=0;b<e.variableNames.length;b++){const n=e.variableNames[b];p[n]=t.getUniformLocation(u,n,d),p["offset"+n]=t.getUniformLocation(u,"offset"+n,d),e.enableShapeUniforms&&(f[n+"Shape"]=t.getUniformLocation(u,n+"Shape",d),m[n+"TexShape"]=t.getUniformLocation(u,n+"TexShape",d))}let g,y,x;e.enableShapeUniforms&&(g=t.getUniformLocation(u,"outShape",d),x=t.getUniformLocation(u,"outShapeStrides",d),y=t.getUniformLocation(u,"outTexShape",d));const v=[];return e.customUniforms&&e.customUniforms.forEach((e,n)=>{v[n]=t.getUniformLocation(u,e.name,d)}),{program:e,fragmentShader:l,source:o,webGLProgram:u,uniformLocations:p,customUniformLocations:v,inShapeInfos:s,outShapeInfo:a,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(t,e,n,r,i){e.program.enableShapeUniforms||(XN(e.inShapeInfos,n),XN([e.outShapeInfo],[r]));const s=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):t.setOutputMatrixTexture(s.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===jt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const i=e.program.variableNames[r],s=e.uniformLocations[i],a=e.uniformLocations["offset"+i],o=e.inShapesLocations[i+"Shape"],l=e.inTexShapesLocations[i+"TexShape"];if(o){const{uniformShape:r}=WN(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(o,new Int32Array(r));break;case 2:t.gl.uniform2iv(o,new Int32Array(r));break;case 3:t.gl.uniform3iv(o,new Int32Array(r));break;case 4:t.gl.uniform4iv(o,new Int32Array(r))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(ut(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,s,r)});const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=Pt(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&i&&e.program.customUniforms.forEach((n,r)=>{const s=e.customUniformLocations[r],a=i[r];if("float"===n.type)t.gl.uniform1fv(s,a);else if("vec2"===n.type)t.gl.uniform2fv(s,a);else if("vec3"===n.type)t.gl.uniform3fv(s,a);else if("vec4"===n.type)t.gl.uniform4fv(s,a);else if("int"===n.type)t.gl.uniform1iv(s,a);else if("ivec2"===n.type)t.gl.uniform2iv(s,a);else if("ivec3"===n.type)t.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(s,a)}}),t.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=jt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Li();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!jt().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===i){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,i=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,i)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(jt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Jo(()=>{if(!jt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=jt().getBool("DEBUG");jt().set("DEBUG",!1);const e=this.abs(Ml(1e-8)).dataSync()[0];if(jt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:i,texture:s,usage:a,isPacked:o}=e;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=Li());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=jt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?tt(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=bt(t);t=e.newShape}let r=ut(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=yN(t);let n=2,i=2;return t.length&&([n,i]=xN(t)),r=e*(n/2)*(i/2),ft(r).map(t=>2*t)}return ft(r)}(n,o),e.texShape=c),null!=i){const t=vN(n);let s,a=c[1],h=c[0];const d=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!o&&d||([a,h]=iN(c[0],c[1])),s=o?new eL(t,d):new tL(t,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?tN.PIXELS:tN.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,i);const g=[[h,a]],y=!0,x=this.runWebGLProgram(s,[f],r,g,y),v=this.texData.get(x.dataId);e.texture=v.texture,e.texShape=v.texShape,e.isPacked=v.isPacked,e.usage=v.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(x.dataId),e.values=null,l&&(this.uploadWaitMs+=Li()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*At(e)}}pD.nextDataId=0,bs()&&ol("webgl",()=>new pD,2);class fD{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Qa(e,n),this.enableShapeUniforms=YN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class mD{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Qa(e,n);const i=this.outputShape.length;this.enableShapeUniforms=YN(i);let s="";if(r)if(0===i||1===ut(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${HN(i)} coords = getOutputCoords();\n        `,1===i)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=ZL("coords",i);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= outShape[${i} - 2];\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= outShape[${i} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function gD(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const yD={kernelName:dn,backendName:"webgl",kernelFunc:gD};function xD(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(s.dataId),o=gD({inputs:{x:r},backend:n}),l=gD({inputs:{x:i},backend:n});return a.complexTensorInfos={real:o,imag:l},s}const vD={kernelName:Me,backendName:"webgl",kernelFunc:xD},bD="return (a < 0.) ? b * a : a;",wD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",_D={kernelName:xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r,a=n.makeTensorInfo([],"float32",Ri(s,"float32")),o=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mD(wD,i.shape,a.shape):new fD(bD,i.shape,a.shape),l=n.runWebGLProgram(o,[i,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},SD="return (a < 0.) ? b * a : a;",MD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",TD={kernelName:er,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e,s=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mD(MD,r.shape,i.shape):new fD(SD,r.shape,i.shape);return n.runWebGLProgram(s,[r,i],"float32")}};function ED({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:i,backend:s})=>{const{x:a}=i,o=s,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new lD(a.shape,e):new sD(a.shape,t),o.runWebGLProgram(u,[a],l)}}function AD({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,i]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,i={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new fD(t,l.shape,u.shape);return c.runWebGLProgram(a,[i,s],is(n.dtype,r.dtype))}),s=xD({inputs:{real:r,imag:i},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(i),s}const h=s||is(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=i){const t=c.texData.get(l.dataId).values,e=c.texData.get(u.dataId).values,n="string"===l.dtype?Nf(t):t,r="string"===l.dtype?Nf(e):e,[s,a]=i(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=s,o}let d;return d=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new mD(e,l.shape,u.shape,n):new fD(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function CD(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?MD:SD;if("leakyrelu"===t)return e?wD:bD;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class ID{constructor(t,e,n,r=!1,i=!1,s=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=YN(this.outputShape.length);const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(v=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class kD{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Qa(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const RD="return a * b;";function ND(t){const{inputs:e,backend:n}=t,{a:r,b:i}=e,s=is(r.dtype,i.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),s=new kD("return areal * breal - aimag * bimag;",r.shape,i.shape),a=new kD("return areal * bimag + aimag * breal;",r.shape,i.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=xD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,i])){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),[a,o]=IL(r.shape,i.shape,t.values,e.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=a,l}let a;return a=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mD(RD,r.shape,i.shape):new fD(RD,r.shape,i.shape),n.runWebGLProgram(a,[r,i],s)}const LD={kernelName:Vn,backendName:"webgl",kernelFunc:ND};function DD(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=n,o=ut(i.shape),l=xt(s,o),u=ut(l);st(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(i.dataId);return!c.isPacked||wN(i.shape,l)||null!==c.texture&&wN(c.shape,l)?(a.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):function(t,e,n){const r=[yN(t.shape),...xN(t.shape)],i={dtype:t.dtype,shape:r,dataId:t.dataId},s=[yN(e),...xN(e)],a=new tD(s,r),o=[r],l=n.runWebGLProgram(a,[i],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(i,l,a)}const PD={kernelName:or,backendName:"webgl",kernelFunc:DD};class OD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${dt(t)?t.toPrecision(2):t}, ones);`}let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class FD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";i%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function zD(t,e,n,r){const i=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=Bp(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:l,outSize:u}=i[a];let c,h;c="mean"===n?0===a?new OD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new OD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new FD({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class BD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const r=HN(this.rank),i=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let i=0;i<t.length;i++)r[t[i]]=n[i];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class UD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=HN(this.rank),i=JL("rc",this.rank),s=new Array(this.rank);for(let u=0;u<e.length;u++)s[e[u]]=i[u];const a=`vec2(${s.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function $D(t,e,n){const r=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UD(t.shape,e):new BD(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function qD(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;return function(t,e,n,r){const i=e,s=t.shape.length,a=vt(i,t.shape);let o=a;const l=Nc(o,s),u=null!=l;let c=t;u&&(c=$D(t,l,r),o=Dc(o.length,s)),Rc("sum",o,s);const[h,d]=Ic(c.shape,o);let p=h;n&&(p=kc(h,a));const f=ut(d),m=DD({inputs:{x:c},attrs:{shape:[ut(t.shape)/f,f]},backend:r}),g=zD(m,ss(t.dtype),"sum",r),y=DD({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(i,s,a,n)}const VD={kernelName:Er,backendName:"webgl",kernelFunc:qD};function HD(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{perm:s}=r,a=n,o=i.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=i.shape[s[c]];let u;if(a.shouldExecuteOnCPU([i])){const t=a.texData.get(i.dataId).values,e=YL(t,i.shape,i.dtype,s,l);u=a.makeTensorInfo(l,i.dtype),a.texData.get(u.dataId).values=e}else u=$D(i,s,a);return u}const WD={kernelName:jr,backendName:"webgl",kernelFunc:HD};function GD({a:t,b:e,transposeA:n,transposeB:r,backend:i,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=ut(m),x=ut(g),v=Qa(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);st(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=n?[y,h,p]:[y,p,h],w=r?[x,f,d]:[x,d,f],_=DD({inputs:{x:t},backend:i,attrs:{shape:b}}),S=DD({inputs:{x:e},backend:i,attrs:{shape:w}}),M=[_,S],T=Math.max(y,x),E=n?_.shape[1]:_.shape[2],A=null!=s,C=null!=a,I="leakyrelu"===l,k=null!=l?CD(l,!0):null;let R;if((1===p||1===f)&&E>1e3&&!1===(A||C||I||null!=k)){let t=_,e=S;n&&(t=HD({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),M.push(t)),r&&(e=HD({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),M.push(e));const s=1===f;let a=t;1!==f&&(a=DD({inputs:{x:t},backend:i,attrs:{shape:[T,E,1]}}),M.push(a));const o=1===f?2:1;let l=e;s&&(l=DD({inputs:{x:e},backend:i,attrs:{shape:[T,1,E]}}),M.push(l));const u=ND({inputs:{a:a,b:l},backend:i});R=qD({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),M.push(u)}else{const l=is(t.dtype,e.dtype),u=new ID(b,w,[T,p,f],n,r,A,k,C,I),c=[_,S];if(null!=s&&c.push(s),C&&c.push(a),I){const t=i.makeTensorInfo([],"float32",Ri(o,"float32"));c.push(t),M.push(t)}R=i.runWebGLProgram(u,c,l)}const N=DD({inputs:{x:R},backend:i,attrs:{shape:v}});M.push(R);for(const L of M)i.disposeIntermediateTensorInfo(L);return N}const jD={kernelName:ei,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return GD({a:i,b:s,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},XD="return abs(x);",YD={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=OL(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let i;return i=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lD(r.shape,XD):new sD(r.shape,XD),n.runWebGLProgram(i,[r],r.dtype)}},KD=ED({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),JD={kernelName:Qt,backendName:"webgl",kernelFunc:KD},ZD=ED({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),QD={kernelName:te,backendName:"webgl",kernelFunc:ZD},tP="return a + b;",eP=AD({opSnippet:tP,packedOpSnippet:tP,supportsComplex:!0,cpuKernelImpl:uL}),nP={kernelName:ee,backendName:"webgl",kernelFunc:eP};class rP{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class iP{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const sP={kernelName:ne,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,i=n;if(1===i.length)return gD({inputs:{x:i[0]},backend:r});if(i.length>jt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(i.length/2),n=t({inputs:i.slice(0,e),backend:r}),s=t({inputs:i.slice(e),backend:r});return t({inputs:[n,s],backend:r})}const s=i.map(t=>t.dtype).reduce((t,e)=>is(t,e)),a=i.map(t=>t.shape),o=jt().getBool("WEBGL_PACK")?new iP(i[0].shape,a):new rP(i[0].shape,a);return r.runWebGLProgram(o,i,s)}},aP={kernelName:re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=vt(s,i.shape);let u=l;const c=Nc(u,o);let h=i;null!=c&&(h=HD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Dc(u.length,o)),Rc("all",u,o);const[d,p]=Ic(h.shape,u),f=DD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(p)]}}),m=zD(f,f.dtype,"all",n);let g;return g=DD(a?{inputs:{x:m},backend:n,attrs:{shape:kc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},oP={kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=vt(s,i.shape);let u=l;const c=Nc(u,o);let h=i;null!=c&&(h=HD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Dc(u.length,o)),Rc("any",u,o);const[d,p]=Ic(h.shape,u),f=DD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(p)]}}),m=zD(f,f.dtype,"any",n);let g;return g=DD(a?{inputs:{x:m},backend:n,attrs:{shape:kc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class lP{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class uP{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,st(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=HN(o),u=ZL("coords",o);let c,h;if(1===s){h=o+1;const t=HN(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(t=>"int "+t),m=ZL("sourceLocR",h-1).concat("inIdx.r"),g=ZL("sourceLocG",h-1).concat("inIdx.g"),y=ZL("sourceLocB",h-1).concat("inIdx.b"),x=ZL("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",b=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,_=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function cP(t,e,n,r=null){let i=e.shape[0],s=e.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);const a=Bp(s),o={windowSize:a,inSize:s,batchSize:i,outSize:Math.ceil(s/a)},l=new lP(o,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=cP(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function hP(t,e,n,r=null){const i=null!=r?r.shape:e.shape,s=Bp(i[i.length-1]),a=new uP(i,s,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=hP(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function dP(t,e,n,r){const i=[n];if(Rc("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,e.shape.length),!jt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],s=t.texData.get(e.dataId);let a=e;null!==s&&s.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=Ic(a.shape,i),u=ut(l),c=DD({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(c);const h=cP(t,c,r);n.push(h);const d=DD({inputs:{x:h},backend:t,attrs:{shape:o}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return hP(t,e,r)}const pP={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=vt(s,i.shape);const o=Nc(a,i.shape.length);let l=i;const u=[];null!=o&&(l=HD({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Dc(a.length,l.shape.length)),Rc("argMax",[a[0]],l.shape.length);const c=dP(n,l,a[0],"max");return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},fP={kernelName:ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=vt(s,i.shape);const o=Nc(a,i.shape.length);let l=i;const u=[];null!=o&&(l=HD({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Dc(a.length,l.shape.length)),Rc("argMin",[a[0]],l.shape.length);const c=dP(n,l,a[0],"min");return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},mP=ED({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),gP={kernelName:oe,backendName:"webgl",kernelFunc:mP},yP=ED({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),xP={kernelName:le,backendName:"webgl",kernelFunc:yP},vP=ED({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),bP={kernelName:ue,backendName:"webgl",kernelFunc:vP},wP=AD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),_P={kernelName:he,backendName:"webgl",kernelFunc:wP},SP=ED({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),MP={kernelName:ce,backendName:"webgl",kernelFunc:SP};class TP{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const v=4*Math.floor(s/4),b=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class EP{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const w=4*Math.floor(s/4),_=s%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const AP={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;AN(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;st(lu(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=Zl(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ht(u.inShape,u.outShape))return gD({inputs:{x:i},backend:n});const c=new TP(u,"avg",!1);return n.runWebGLProgram(c,[i],"float32")}},CP={kernelName:fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Ql(i.shape,s,a,[1,1,1],o,l,u),h=new EP(c,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};class IP{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kP{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const RP={kernelName:me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ql(a.shape,o,l,[1,1,1],u,c),d=new kP(h);return n.runWebGLProgram(d,[i],a.dtype)}},NP={kernelName:pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;AN([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Zl(a.shape,o,l,1,u),h=new IP(c);return n.runWebGLProgram(h,[i],a.dtype)}},LP={kernelName:ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;return GD({a:i,b:s,transposeA:a,transposeB:o,backend:n})}};class DP{constructor(t,e,n,r,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Qa(t,e),Qa(t,n);let a="0.0";null!=r&&(Qa(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=i&&(Qa(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class PP{constructor(t,e,n,r,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Qa(t,e),Qa(t,n);let a="vec4(0.0)";null!=r&&(Qa(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(Qa(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const OP={kernelName:on,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:i,variance:s,offset:a,scale:o}=t;st(i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),st(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),st(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,i,s];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=jt().getBool("WEBGL_PACK_NORMALIZATION")?new PP(r.shape,i.shape,s.shape,c,h,l):new DP(r.shape,i.shape,s.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)}};class FP{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=HN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return zP.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${zP[e]} = start[${e}] + coords.${zP[e]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const zP=["x","y","z","w","u","v"];class BP{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=HN(this.rank),n=ZL("coords",this.rank),r=ZL("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${i})`,a=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function UP(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r,[o,l]=To(i,s,a);if(co(i,o,l),0===ut(l))return n.makeTensorInfo(l,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const t=n.texData.get(i.dataId),e=FL(t.values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,e)}const{isPacked:u}=n.texData.get(i.dataId),c=So(i.shape,o,l);if(u||!c){const t=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BP(l):new FP(l),e=[o];return n.runWebGLProgram(t,[i],i.dtype,e)}return n.uploadToGPU(i.dataId),function(t,e,n,r){const i=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),a=r.texData.get(s.dataId);Object.assign(a,i),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=Mo(e,Pt(t.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),s}(i,o,l,n)}const $P={kernelName:vr,backendName:"webgl",kernelFunc:UP},qP={kernelName:ye,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;st(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((t,e)=>t*e),l=$p(i.shape,s,o),u=qp(l.length,s.length),c=Vp(i.shape,s,o),h=Hp(a,s.length),d=Wp(c,a,s.length),p=[],f=DD({inputs:{x:i},backend:n,attrs:{shape:l}}),m=HD({inputs:{x:f},backend:n,attrs:{perm:u}}),g=DD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=UP({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},VP={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=n.readSync(i.dataId),l=n.readSync(s.dataId),u=cL(o,l,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,u)}},HP={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.readSync(r.dataId),a=n.readSync(i.dataId),o=Qa(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},WP=AD({opSnippet:"return float(a != b);",cpuKernelImpl:RL,dtype:"bool"}),GP={kernelName:Wn,backendName:"webgl",kernelFunc:WP};function jP(t){const{inputs:e,backend:n}=t,{input:r}=e;return gD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const XP={kernelName:ir,backendName:"webgl",kernelFunc:jP},YP={kernelName:we,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:i}=e,{x:s}=n,{dtype:a}=i;if("complex64"===a){if("complex64"===s.dtype)return gD({inputs:{x:s},backend:r});const e=Hc(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),i=xD({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),i}if("complex64"===s.dtype){const e=jP({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!Tt(s.dtype,a)){const t=gD({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new sD(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",wt("bool",1)),e=WP({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}},KP="return ceil(x);",JP=ED({opSnippet:KP,packedOpSnippet:KP,cpuKernelImpl:dL}),ZP={kernelName:_e,backendName:"webgl",kernelFunc:JP};class QP{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class tO{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const eO={kernelName:Se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{clipValueMin:s,clipValueMax:a}=r;let o;o=jt().getBool("WEBGL_PACK_CLIP")?new tO(i.shape):new QP(i.shape);const l=[[s],[a]];return n.runWebGLProgram(o,[i],i.dtype,l)}};class nO{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function rO(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const iO={kernelName:Te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=n.texData.get(r.dataId),s=new nO(r.shape),a=[rO(r,i.complexTensorInfos.real),rO(r,i.complexTensorInfos.imag)];return n.runWebGLProgram(s,a,a[0].dtype)}};class sO{constructor(t){this.outputShape=[],this.outputShape=Fp(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){const t=e[s-1];n.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${t}));`)}const r=e.length,i=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class aO{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Fp(t,e);const n=this.outputShape,r=n.length,i=HN(r),s=ZL("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const o=new Array(t.length-1);o[0]=t[0][e];for(let f=1;f<o.length;f++)o[f]=o[f-1]+t[f][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const t=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${oO(a,l,t)}),\n            vec2(${oO(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${oO(a,l,p)}),\n          vec2(${oO(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function oO(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function lO(t){const{inputs:e,backend:n}=t,{input:r}=e;return gD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const uO={kernelName:fn,backendName:"webgl",kernelFunc:lO};function cO(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map(t=>jP({inputs:{input:t},backend:n})),i=t.map(t=>lO({inputs:{input:t},backend:n})),s=cO(r,e,n),a=cO(i,e,n),o=xD({inputs:{real:s,imag:a},backend:n});return r.forEach(t=>n.disposeIntermediateTensorInfo(t)),i.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}let i=n.shouldExecuteOnCPU(t);if("string"===r&&(i=!0),i){const i=t.map(t=>{const r=ut(t.shape.slice(e));return DD({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})}),s=i.map(t=>({vals:n.readSync(t.dataId),shape:t.shape})),a=Fp(i.map(t=>t.shape),1),o=1===i[0].shape[0],l=pL(s,a,r,o),u=Fp(t.map(t=>t.shape),e),c=n.makeTensorInfo(u,r,l);return i.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}if(t.length>jt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),i=cO(t.slice(0,r),e,n),s=cO(t.slice(r),e,n),a=cO([i,s],e,n);return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}if(jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const i=new aO(t.map(t=>t.shape),e);return n.runWebGLProgram(i,t,r)}const{tensors2D:s,outShape:a}=function(t,e,n){const r=Fp(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>DD({inputs:{x:t},attrs:{shape:[-1,ut(t.shape.slice(e))]},backend:n})),outShape:r}}(t,e,n),o=new sO(s.map(t=>t.shape)),l=n.runWebGLProgram(o,s,r);s.forEach(t=>n.disposeIntermediateTensorInfo(t));const u=DD({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),u}function hO(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=vt(i,e[0].shape)[0],a=Fp(e.map(t=>t.shape),s);if(0===ut(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter(t=>ut(t.shape)>0);return 1===o.length?gD({inputs:{x:o[0]},backend:n}):(Op(o.map(t=>t.shape),s),cO(o,s,n))}const dO={kernelName:Ee,backendName:"webgl",kernelFunc:hO};class pO{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class fO{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${s}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mO{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=YN(this.outputShape.length);const{dataFormat:n}=e,r=IN(),i="channelsLast"===n,s=i?0:1,a=i?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let l="";for(let u=0;u<=1;u++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${i}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function gO({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&ht(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,st(wN(u.shape,h.shape),()=>`packed reshape ${u.shape} to ${h.shape} isn't free`);const p=DD({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=GD({a:h,b:p,backend:r,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a}),y=r.texData.get(g.dataId);st(y.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=d,y.shape=n.outShape,f=gD({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=DD({inputs:{x:t},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=DD({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=GD({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a});f=DD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const g of m)r.disposeIntermediateTensorInfo(g);return f}function yO({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,y=[m,g],x=[],v=DD({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),b=DD({inputs:{x:e},backend:r,attrs:{shape:[1,m,ut(e.shape)/m]}});x.push(v),x.push(b);const w=new mO(y,n),_=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(w,[v],"float32",_),M=DD({inputs:{x:S},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(S),x.push(M);const T=null!=i,E=null!=s,A="leakyrelu"===o,C=o?CD(o,!0):null,I=new ID(M.shape,b.shape,[1,g,n.outChannels],!0,!1,T,C,E,A),k=[M,b];if(i&&k.push(i),E&&k.push(s),A){const t=r.makeTensorInfo([],"float32",Ri(a,"float32"));k.push(t),x.push(t)}const R=r.runWebGLProgram(I,k,"float32"),N=DD({inputs:{x:R},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(R);for(const L of x)r.disposeIntermediateTensorInfo(L);return N}const xO={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=uu(l),d=tu(i.shape,s.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(jt().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])p=yO({x:i,filter:s,convInfo:d,backend:n});else{const t=new pO(d);p=n.runWebGLProgram(t,[i,s],"float32")}else p=gO({x:i,filter:s,convInfo:d,backend:n});const f=DD({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class vO{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bO{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${i};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _O{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SO={kernelName:Ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=uu(l),d=tu(i.shape,c,a,1,o,u,!1,h),p=new vO(d);return n.runWebGLProgram(p,[i,s],"float32")}},MO={kernelName:Ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=uu(u),d=tu(a,s.shape,o,1,l,c,!1,h),p=new bO(d);return n.runWebGLProgram(p,[i,s],"float32")}},TO={kernelName:ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=eu(i.shape,s.shape,a,l,o),c=new fO(u);return n.runWebGLProgram(c,[i,s],"float32")}},EO={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r,u=eu(i.shape,l,a,1,o),c=new wO(u);return n.runWebGLProgram(c,[i,s],"float32")}},AO={kernelName:Ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r,u=eu(l,s.shape,o,1,a),c=new _O(u);return n.runWebGLProgram(c,[i,s],"float32")}},CO=ED({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),IO={kernelName:Le,backendName:"webgl",kernelFunc:CO},kO=ED({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),RO={kernelName:De,backendName:"webgl",kernelFunc:kO};class NO{constructor(t,e,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[x,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const LO={kernelName:Oe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new NO(i.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[i,s,a],"float32")}};class DO{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=t;const r=t.length,i=e?"0.0":`getX(${PO(r,"coords")})`,s=t[t.length-1];let a="",o="";e?(a=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${HN(r)} coords = getOutputCoords();\n        int end = ${OO(r,"coords")};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${OO(r,"coords")} = idx;\n          val += getX(${PO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function PO(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function OO(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const FO={kernelName:Pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r,l=i.shape.length,u=Nc([s],l);let c=i;null!=u&&(c=HD({inputs:{x:i},backend:n,attrs:{perm:u}}));const h=Dc(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${i.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=gD({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const t=new DO(c.shape,!1,o),e=[[f]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,e),n.disposeIntermediateTensorInfo(r)}if(a){const t=new DO(c.shape,a,o),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=HD({inputs:{x:p},backend:n,attrs:{perm:Lc(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),t}return p}},zO={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=n.readSync(i.dataId),e=n.readSync(s.dataId),r=cL(t,e,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,r)}if(2===i.shape.length){const t=n.bufferSync(i),e=n.bufferSync(s),r=hL(t,e,a,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class BO{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const UO={kernelName:ze,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r,o=i.shape[0],l=("NHWC"===a?i.shape[1]:i.shape[2])*s,u=("NHWC"===a?i.shape[2]:i.shape[3])*s,c=("NHWC"===a?i.shape[3]:i.shape[1])/(s*s),h=new BO("NHWC"===a?[o,l,u,c]:[o,c,l,u],s,a);return n.runWebGLProgram(h,[i],i.dtype)}};class $O{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=YN(this.outputShape.length);const s=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class qO{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=YN(this.outputShape.length);const s=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const t=2*g;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=a%2==0?tt(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const VO={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),st(lu(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=tu(i.shape,s.shape,a,c,o,u,!0);let d;d=jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new qO(h):new $O(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[i,s],"float32",p)}};class HO{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WO{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GO={kernelName:Ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=tu(i.shape,c,a,o,l,u,!0),d=new HO(h);return n.runWebGLProgram(d,[i,s],"float32")}},jO={kernelName:$e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=tu(c,s.shape,a,o,l,u,!0),d=new WO(h);return n.runWebGLProgram(d,[i,s],"float32")}};class XO{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const YO={kernelName:qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=[...r.shape,...r.shape],s=ut(r.shape),a=DD({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new XO(s),l=n.runWebGLProgram(o,[a],a.dtype),u=DD({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class KO{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const JO={kernelName:Ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=Jl(i.shape,s.shape,a,o,"NHWC",l);let c;const h=new KO(u);c=n.runWebGLProgram(h,[i,s],"float32");const d=DD({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},ZO={kernelName:je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=cf(i,s.length);df(a.length,l,s);const{path:u,steps:c}=pf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=hf(p,l[t]);let i;ff(e)?i=s[t]:(i=HD({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);ht(i.shape,a)||(i=DD({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=ND({inputs:{a:i,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=qD({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},QO=ED({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),tF={kernelName:Xe,backendName:"webgl",kernelFunc:QO},eF={kernelName:Ye,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:i}=e,s=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,i.shape):new fD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,i.shape);return n.runWebGLProgram(s,[r,i],r.dtype)}},nF=AD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:fL}),rF={kernelName:Je,backendName:"webgl",kernelFunc:nF},iF=ED({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Xp};\n  float a1 = ${Yp};\n  float a2 = ${Kp};\n  float a3 = ${Jp};\n  float a4 = ${Zp};\n  float a5 = ${Qp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),sF={kernelName:Ke,backendName:"webgl",kernelFunc:iF},aF=ED({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:mL,dtype:"float32"}),oF={kernelName:Ze,backendName:"webgl",kernelFunc:aF};function lF(t){const{inputs:e,attrs:n,backend:r}=t,{dim:i}=n,{input:s}=e,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(st(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),DD({inputs:{x:s},backend:r,attrs:{shape:o}})}const uF={kernelName:Qe,backendName:"webgl",kernelFunc:lF},cF="return exp(x) - 1.0;",hF=ED({opSnippet:cF,packedOpSnippet:cF,cpuKernelImpl:gL}),dF={kernelName:tn,backendName:"webgl",kernelFunc:hF};class pF{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const i=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function fF(t,e,n){const r=n.texData.get(t.dataId),i=ut(t.shape),s=t.shape[t.shape.length-1],a=DD({inputs:{x:t},backend:n,attrs:{shape:[i/s,s]}}),o=a.shape,l=new pF("real",o,e),u=new pF("imag",o,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=xD({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=DD({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const mF={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return fF(r,!1,n)}};class gF{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function yF(t){const{backend:e,attrs:n}=t,{shape:r,value:i}=n;let{dtype:s}=n;if(s=s||Nt(i),"string"===s){const t=_t(s,ut(r));return t.fill(i),e.makeTensorInfo(r,s,t)}{const t=new gF(r,i),n=[[i]];return e.runWebGLProgram(t,[],s,n)}}const xF={kernelName:nn,backendName:"webgl",kernelFunc:yF};class vF{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bF={kernelName:rn,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,i=new vF(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}},wF="return floor(x);",_F=ED({opSnippet:wF,packedOpSnippet:wF,cpuKernelImpl:yL}),SF={kernelName:sn,backendName:"webgl",kernelFunc:_F},MF=AD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),TF={kernelName:an,backendName:"webgl",kernelFunc:MF};class EF{constructor(t){this.variableNames=["A"];const e=IN(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class AF{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=IN(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const CF={kernelName:Qr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:i}=e;const{numChannels:s}=r,a="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[l,u]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],c=[u,l],h=[u,l,s];(o||a)&&(null==IF&&(IF=document.createElement("canvas").getContext("2d")),IF.canvas.width=l,IF.canvas.height=u,IF.drawImage(i,0,0,l,u),i=IF.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=tN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),i);const p=jt().getBool("WEBGL_PACK")?new AF(h):new EF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let IF;const kF={kernelName:ni,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=uu(c),g=tu(i.shape,s.shape,l,h,u,d,!1,m);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(jt().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])y=yO({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=a,e=null!=o,r="leakyrelu"===p,l=p?CD(p,!1):null,u=new pO(g,t,l,e,r),c=[i,s];if(a&&c.push(a),o&&c.push(o),r){const t=n.makeTensorInfo([],"float32",Ri(f,"float32"));c.push(t),x.push(t)}y=n.runWebGLProgram(u,c,"float32")}else y=gO({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const v=DD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}},RF={kernelName:ri,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),st(lu(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=tu(i.shape,s.shape,l,m,u,h,!0),y=jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=d?CD(d,y):null,v=[i,s],b=null!=a,w=null!=o,_="leakyrelu"===d;if(b&&v.push(a),w&&v.push(o),_){const t=n.makeTensorInfo([],"float32",Ri(p,"float32"));v.push(t),f.push(t)}let S;S=y?new qO(g,b,x,w,_):new $O(g,b,x,w,_);const M=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=n.runWebGLProgram(S,v,"float32",M);return f.forEach(t=>n.disposeIntermediateTensorInfo(t)),T}};class NF{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=HN(e.length),i=HN(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const LF={kernelName:un,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=i.shape,a=s[s.length-1],o=ut(r.shape),[l,u,c,h]=ao(r,i),d=DD({inputs:{x:i},backend:n,attrs:{shape:[u,a]}}),p=DD({inputs:{x:r},backend:n,attrs:{shape:[ut(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const t=n.readSync(i.dataId),e=n.bufferSync(r),s=xL(t,e,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}const f=new NF(a,h,[u,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=DD({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class DF{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=HN(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<t.length;i++)2===i?r.push("index"):r.push(""+n[i]);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function PF(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r,l=vt(a,i.shape)[0];if(jt().get("DEBUG")){const t=n.readSync(s.dataId),e=i.shape[l];for(let n=0;n<t.length;++n){const r=t[n];st(r<=e-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`)}}const u=Rf(i,s,l,o),c=ut(s.shape),h=[],d=DD({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=DD({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([i,s])||"string"===i.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),r=vL(e,t,f);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new DF(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=DD({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}const OF={kernelName:ln,backendName:"webgl",kernelFunc:PF},FF=AD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:bL,dtype:"bool"}),zF={kernelName:cn,backendName:"webgl",kernelFunc:FF},BF=AD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:wL}),UF={kernelName:hn,backendName:"webgl",kernelFunc:BF},$F={kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return fF(r,!0,n)}},qF=ED({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),VF={kernelName:mn,backendName:"webgl",kernelFunc:qF},HF=ED({opSnippet:"return float(isinf(x));",dtype:"bool"}),WF={kernelName:gn,backendName:"webgl",kernelFunc:HF},GF=ED({opSnippet:"return float(isnan(x));",dtype:"bool"}),jF={kernelName:yn,backendName:"webgl",kernelFunc:GF},XF=AD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:_L,dtype:"bool"}),YF={kernelName:vn,backendName:"webgl",kernelFunc:XF},KF=AD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:SL,dtype:"bool"}),JF={kernelName:bn,backendName:"webgl",kernelFunc:KF},ZF={kernelName:wn,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=ML(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},QF=ED({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:TL}),tz={kernelName:_n,backendName:"webgl",kernelFunc:QF},ez=ED({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),nz={kernelName:Sn,backendName:"webgl",kernelFunc:ez},rz=AD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),iz={kernelName:Mn,backendName:"webgl",kernelFunc:rz},sz=ED({opSnippet:"return float(!(x >= 1.0));"}),az={kernelName:Tn,backendName:"webgl",kernelFunc:sz},oz=AD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),lz={kernelName:En,backendName:"webgl",kernelFunc:oz};class uz{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[];const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class cz{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const hz={kernelName:Cn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r,u=jt().getBool("WEBGL_PACK_NORMALIZATION")?new cz(i.shape,s,a,o,l):new uz(i.shape,s,a,o,l);return n.runWebGLProgram(u,[i],i.dtype)}};class dz{constructor(t,e,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const pz={kernelName:In,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new dz(i.shape,o,l,u,c);return n.runWebGLProgram(h,[i,s,a],i.dtype)}};function fz(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=i.shape.length,l=vt(s,i.shape);let u=l;const c=Nc(u,o),h=null!=c,d=n.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let n=0;n<e.length;n++)e[n]=i.shape[c[n]];const r=YL(t,i.shape,i.dtype,c,e);p=n.makeTensorInfo(e,i.dtype),n.texData.get(p.dataId).values=r}else p=$D(i,c,n);u=Dc(u.length,o)}Rc("max",u,o);const[f,m]=Ic(p.shape,u);let g,y=f;if(a&&(y=kc(f,l)),d){const t=n.texData.get(p.dataId).values,e=EL(t,ut(m),y,i.dtype);g=n.makeTensorInfo(y,i.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const i=ut(e),s=DD({inputs:{x:t},attrs:{shape:[ut(t.shape)/i,i]},backend:r}),a=zD(s,t.dtype,"max",r),o=DD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const mz={kernelName:kn,backendName:"webgl",kernelFunc:fz},gz=AD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:AL}),yz={kernelName:Rn,backendName:"webgl",kernelFunc:gz},xz={kernelName:Nn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;AN(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;st(lu(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=Zl(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ht(u.inShape,u.outShape))return gD({inputs:{x:i},backend:n});const c=new TP(u,"max",!1);return n.runWebGLProgram(c,[i],i.dtype)}},vz={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Ql(i.shape,s,a,[1,1,1],o,u,l),h=new EP(c,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};class bz{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,o=s-1-t.padInfo.left,l=i*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wz{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _z={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ql(a.shape,o,l,[1,1,1],u,c),d=new EP(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new wz(h),m=n.runWebGLProgram(f,[i,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},Sz={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;AN([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Zl(o.shape,l,u,1,c,h),p=new TP(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new bz(d),g=n.runWebGLProgram(m,[i,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Mz={kernelName:On,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;st(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];st(lu(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);const c=Zl(r.shape,i,s,u,a),[h,d]=function(t,e,n,r){let i=new TP(n,"max",!1);const s=r.runWebGLProgram(i,[t],"float32");return i=new TP(n,"max",!0,!0,e),[s,r.runWebGLProgram(i,[t],"float32")]}(r,o,c,l);return[h,d]}},Tz={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:i,axis:s}=e,a=n,o=r.shape.length,l=vt(s,r.shape);let u=l;const c=Nc(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let i=0;i<e.length;i++)e[i]=r.shape[c[i]];const n=YL(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=$D(r,c,a);p.push(f),u=Dc(u.length,o)}Rc("sum",u,o);const[m,g]=Ic(f.shape,u);let y=m;i&&(y=kc(m,l));const x=function(t,e,n,r){const i=ut(e),s=DD({inputs:{x:t},attrs:{shape:[ut(t.shape)/i,i]},backend:r}),a=zD(s,"float32","mean",r),o=DD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(f,g,y,a);for(const v of p)a.disposeIntermediateTensorInfo(v);return x}},Ez={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=vt(s,i.shape);let u=l;const c=Nc(u,o);let h=i;null!=c&&(h=HD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Dc(u.length,i.shape.length)),Rc("min",u,o);const[d,p]=Ic(h.shape,u),f=DD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(p)]}}),m=zD(f,f.dtype,"min",n);let g;return g=DD(a?{inputs:{x:m},backend:n,attrs:{shape:kc(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Az=AD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:CL}),Cz={kernelName:Bn,backendName:"webgl",kernelFunc:Az};class Iz{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=HN(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class kz{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=HN(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=ZL("rc",r),l=ZL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Rz={kernelName:Un,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:i,mode:s}=n,a=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kz(r.shape,i,s):new Iz(r.shape,i,s);return e.runWebGLProgram(a,[r],r.dtype)}},Nz=AD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Lz={kernelName:$n,backendName:"webgl",kernelFunc:Nz};class Dz{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const Pz=AD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Oz={kernelName:Ge,backendName:"webgl",kernelFunc:Pz},Fz="return a - b;",zz=AD({opSnippet:Fz,packedOpSnippet:Fz,supportsComplex:!0,cpuKernelImpl:GL}),Bz={kernelName:$r,backendName:"webgl",kernelFunc:zz};function Uz(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=vt([s],i.shape),o=fz({inputs:{x:i},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=kc(o.shape,a),u=DD({inputs:{x:o},backend:n,attrs:{shape:l}}),c=zz({inputs:{a:i,b:u},backend:n}),h=aF({inputs:{x:c},backend:n}),d=qD({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=DD({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Pz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const $z={kernelName:Ir,backendName:"webgl",kernelFunc:Uz},qz={kernelName:qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r,l=o?i:Uz({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Dz(u,c,s),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},Vz={kernelName:Hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,i]=kL(t.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,e)}let i;return i=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lD(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new sD(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(i,[r],r.dtype)}},Hz=Gd,Wz={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){ii("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=Hz(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Gz=jd,jz={kernelName:jn,backendName:"webgl",kernelFunc:function(t){ii("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=Gz(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Xz=Xd,Yz={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){ii("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Xz(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Kz{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Jz={kernelName:Kn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{depth:s,onValue:a,offValue:o}=r,l=ut(i.shape),u=new Kz(l,s,a,o),c=DD({inputs:{x:i},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],i.dtype);n.disposeIntermediateTensorInfo(c);const d=DD({inputs:{x:h},backend:n,attrs:{shape:[...i.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function Zz(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=jP({inputs:{input:r},backend:n}),e=Zz({inputs:{x:t},backend:n}),i=lO({inputs:{input:r},backend:n}),s=Zz({inputs:{x:i},backend:n}),a=xD({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return yF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Qz={kernelName:Jr,backendName:"webgl",kernelFunc:Zz},tB={kernelName:Yn,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const e=jP({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=lO({inputs:{input:i},backend:r}),a=Zz({inputs:{x:s},backend:r}),o=xD({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return yF({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}},eB={kernelName:Jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return lF({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach(t=>{at(s,t.shape,"All tensors passed to stack must have matching shapes"),st(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=hO({inputs:e.map(t=>{const e=lF({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e}),backend:n,attrs:{axis:i}});return o.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}};class nB{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=HN(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class rB{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,i=HN(r),s=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=ZL("rc",r),l=ZL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[i+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${i} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const iB=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;if(0===ut(i.shape))return yF({backend:n,attrs:{shape:s.map((t,e)=>t[0]+i.shape[e]+t[1]),value:a,dtype:i.dtype}});const o=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rB(i.shape,s,a):new nB(i.shape,s,a),l=[[a]];return n.runWebGLProgram(o,[i],i.dtype,l)},sB={kernelName:Zn,backendName:"webgl",kernelFunc:iB},aB=AD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oB={kernelName:tr,backendName:"webgl",kernelFunc:aB},lB={kernelName:nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=[],u=vt(s,i.shape);let c=u;const h=Nc(c,o);let d,p=i;if(null!=h&&(p=HD({inputs:{x:i},backend:n,attrs:{perm:h}}),c=Dc(c.length,o),l.push(p)),Rc("prod",c,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:i}=NL(p.shape,p.dtype,t,c);d=n.makeTensorInfo(r,i,e)}else{const[t,e]=Ic(p.shape,c),r=ut(e),s=DD({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=zD(s,ss(i.dtype),"prod",n);d=DD({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(s),l.push(a)}if(a){l.push(d);const t=kc(d.shape,u);d=DD({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},uB=t=>{const{backend:e,attrs:n}=t,{start:r,stop:i,step:s,dtype:a}=n,o=LL(r,i,s,a);return e.makeTensorInfo([o.length],a,o)},cB={kernelName:rr,backendName:"webgl",kernelFunc:uB},hB=ED({opSnippet:"return 1.0 / x;"}),dB={kernelName:sr,backendName:"webgl",kernelFunc:hB},pB=ED({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fB={kernelName:ar,backendName:"webgl",kernelFunc:pB},mB=ED({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gB={kernelName:dr,backendName:"webgl",kernelFunc:mB};class yB{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class xB{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vB={kernelName:cr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xB(i.shape,l,u,s,a):new yB(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],"float32")}};class bB{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wB={kernelName:hr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new bB(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class _B{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class SB{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const MB={kernelName:lr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SB(i.shape,l,u,s,a):new _B(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],i.dtype)}};class TB{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const EB={kernelName:ur,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new TB(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class AB{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),i=HN(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class CB{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=ZL("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=HN(n);function o(n){const r=t.map((r,i)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(i,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${i}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const IB={kernelName:pr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r,a=i.shape.length,o=vt(s,i.shape);if(0===a)return gD({inputs:{x:i},backend:n});const l=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CB(i.shape,o):new AB(i.shape,o);return n.runWebGLProgram(l,[i],i.dtype)}};class kB{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let i="";i="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${i}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const RB={kernelName:ti,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=new kB(r.shape,s),[u,c]=Up(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},NB=ED({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),LB={kernelName:fr,backendName:"webgl",kernelFunc:NB},DB=ED({opSnippet:"return inversesqrt(x);",cpuKernelImpl:DL}),PB={kernelName:mr,backendName:"webgl",kernelFunc:DB};class OB{constructor(t,e,n,r,i,s,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=HN(i.length),l=HN(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${i});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const FB={kernelName:gr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=uo(0,i,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,i.dtype);const p=DD({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=DD({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new OB(l,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),x=DD({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}};class zB{constructor(t,e,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let r=0;r<e.length;r++)a.push(""+n[r]),r<t&&s.push(""+n[r]);r=s.join(),i=a.join()}const s=HN(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const BB={kernelName:yr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e,a=new zB(r.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(a,[r,i,s],is(i.dtype,s.dtype))}},UB=ED({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gp};\n  float scale = ${jp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),$B={kernelName:xr,backendName:"webgl",kernelFunc:UB},qB=ED({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:PL}),VB={kernelName:Sr,backendName:"webgl",kernelFunc:qB},HB=ED({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),WB={kernelName:_r,backendName:"webgl",kernelFunc:HB},GB=ED({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),jB={kernelName:br,backendName:"webgl",kernelFunc:GB},XB=ED({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),YB={kernelName:wr,backendName:"webgl",kernelFunc:XB},KB=ED({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),JB={kernelName:Mr,backendName:"webgl",kernelFunc:KB},ZB={kernelName:Ar,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;st(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((t,e)=>t*e),l=[[0,0]];l.push(...a);for(let y=1+s.length;y<i.shape.length;++y)l.push([0,0]);const u=[],c=iB({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=$p(c.shape,s,o,!1),d=qp(h.length,s.length,!1),p=Vp(c.shape,s,o,!1),f=DD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=HD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=DD({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}},QB={kernelName:kr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==i.shape.length)throw new Error("Values must be a vector, saw:\n         "+i.shape);if(0!==a.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+a.shape);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(s.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=zL(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},tU={kernelName:Rr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==i.shape.length)throw new Error("Input shape should be a vector but received shape "+i.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const a=Array.from(n.readSync(i.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,h]=BL(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},eU={kernelName:Nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error("Indices should be a vector but received shape\n              "+i.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=UL(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},nU={kernelName:Lr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error("Indices should be a vector but received shape\n             "+i.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=UL(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},rU={kernelName:Dr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=uo(0,i,o),d=new OB(u,l,i.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,i,a],s.dtype),f=DD({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},iU={kernelName:Cr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=vt(a,i.shape)[0],l=gf(i,s,o),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map(t=>{const e=[...h];e[o]=t;const r=UP({inputs:{x:i},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r})}},sU="return sqrt(x);",aU=ED({opSnippet:sU,packedOpSnippet:sU,cpuKernelImpl:$L}),oU={kernelName:Tr,backendName:"webgl",kernelFunc:aU},lU=ED({opSnippet:"return x * x;"}),uU={kernelName:Or,backendName:"webgl",kernelFunc:lU},cU="return (a - b) * (a - b);",hU=AD({opSnippet:cU,packedOpSnippet:cU}),dU={kernelName:Pr,backendName:"webgl",kernelFunc:hU},pU={kernelName:Zr,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,i=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new sD(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}};class fU{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=HN(n.length),s=HN(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${i} begin = ${i}(${t});\n      ${i} strides = ${i}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const mU={kernelName:Fr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:v,strides:b}=Eo(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=DD({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||y){st(i.shape.length>=1,()=>"Input must have rank at least 1, got: "+i.shape.length);const t=po(x,v,b),e=UP({inputs:{x:i},backend:n,attrs:{begin:x,size:t}});w=DD({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([i])){const t=n.readSync(i.dataId),e=Ea(i.shape,i.dtype,t),r=qL(p,e,b,x);w=n.makeTensorInfo(f,i.dtype,r.values)}else{const t=new fU(x,b,p);w=n.runWebGLProgram(t,[i],i.dtype)}const _=DD({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),_}},gU={kernelName:zr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=VL(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},yU={kernelName:Br,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==a.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+a.shape);const o=n.readSync(s.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=HL(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},xU={kernelName:Ur,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(s.dataId),o=WL(a,i);return n.makeTensorInfo(s.shape,"int32",o)}},vU=ED({opSnippet:"return tan(x);"}),bU={kernelName:qr,backendName:"webgl",kernelFunc:vU},wU=ED({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),_U={kernelName:Vr,backendName:"webgl",kernelFunc:wU};class SU{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const r=HN(this.rank),i=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<t.length;i++)r.push(`imod(${n[i]}, ${t[i]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function MU(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;if("string"===i.dtype||i.shape.length>5){const t=n.readSync(i.dataId),e="string"===i.dtype?t.map(t=>Oi(t)):t,r=Ea(i.shape,i.dtype,e),a=jL(r,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new SU(i.shape,s);return n.runWebGLProgram(a,[i],i.dtype)}const TU={kernelName:Hr,backendName:"webgl",kernelFunc:MU};class EU{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class AU{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function CU(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function IU(t){let e=1;for(;e<t;)e*=2;return e}const kU={kernelName:Wr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r,o=jt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=jt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([i])||c<o||s>l){const t=n.readSync(i.dataId),[e,r]=XL(t,u,i.dtype,s,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[i,yF({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(i.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(i):i,f=ut(u)/c,m=DD({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&CU(n,p);const g=IU(s),y=IU(c);let x=null;const v=()=>null===x?[m,m]:[m,x],b=(t,e,r)=>{const i=v(),s=new EU(r),a=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=x;x=n.runWebGLProgram(s,i,"int32",a),CU(n,o)};for(let T=1;T<g;T*=2){const t=2*T;for(let e=T;e>=1;e/=2)b(t,e,[f,y])}for(let T=y;T>g;T/=2){const t=v(),e=new AU([f,T/2]),r=[[c],[null===x?1:0],[g]],i=x;x=n.runWebGLProgram(e,t,"int32",r),CU(n,i);const s=g/2,a=2*s;for(let n=s;n>=1;n/=2)b(a,n,x.shape)}let w=x;x=UP({inputs:{x:x},backend:n,attrs:{begin:0,size:[f,s]}}),CU(n,w);let _=PF({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});CU(n,m);const S=u.slice(0,-1);S.push(s),w=x,x=DD({inputs:{x:x},attrs:{shape:S},backend:n}),CU(n,w);const M=_;return _=DD({inputs:{x:_},attrs:{shape:S},backend:n}),CU(n,M),[_,x]}};class RU{constructor(t,e,n,r,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const a="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${i});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${i});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const NU={kernelName:Gr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=new RU(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[i,s],"float32")}},LU={kernelName:Xr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;AN(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=KL(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},DU={kernelName:Yr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i,o=a.shape.length,l=i.shape[s],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(u[c++]=a.shape[m]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;const t=UP({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),e=DD({inputs:{x:t},backend:n,attrs:{shape:u}});f[m]=e,h.push(t)}return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};class PU{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OU=[jD,YD,JD,QD,nP,sP,aP,oP,pP,fP,gP,xP,bP,_P,MP,AP,CP,RP,NP,LP,OP,qP,VP,HP,YP,ZP,eO,vD,iO,dO,xO,SO,MO,TO,EO,AO,IO,RO,LO,FO,zO,UO,VO,GO,jO,YO,JO,ZO,tF,eF,rF,sF,oF,uF,dF,mF,xF,bF,SF,TF,CF,kF,RF,LF,OF,zF,UF,yD,$F,uO,VF,WF,jF,_D,YF,JF,ZF,tz,nz,iz,az,lz,hz,pz,mz,yz,xz,vz,_z,Sz,Mz,Tz,Ez,Cz,Rz,Lz,qz,LD,Vz,Wz,jz,Yz,GP,Jz,tB,eB,sB,oB,TD,lB,cB,XP,Oz,dB,fB,gB,PD,vB,wB,MB,EB,IB,RB,LB,PB,FB,BB,$B,VB,WB,jB,YB,$P,$z,JB,ZB,QB,tU,eU,nU,rU,iU,oU,uU,dU,pU,mU,gU,yU,xU,Bz,VD,bU,_U,TU,kU,NU,WD,LU,DU,{kernelName:Kr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r,o=i.shape.length,l=[];let u=0;const c=Nc([u],o);let h=i;null!=c&&(h=HD({inputs:{x:i},backend:n,attrs:{perm:c}}),l.push(h),u=Dc(1,o)[0]);const d=kf(h.shape,u,a),p=ut([h.shape[u]]),f=DD({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=ss(i.dtype),g=(t,e,r,i,s)=>{const a=t.shape[0],o=t.shape[1],u=If(o,s),c=new PU({windowSize:u,inSize:o,batchSize:a,numSegments:s},e),h=n.compileAndRun(c,[t,r],i);if(l.push(h),h.shape[1]===s)return h;const d=uB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=MU({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,e,p,i,s)},y=DD({inputs:{x:g(f,"unsortedSegmentSum",s,m,a)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){l.push(y);const t=Lc(c);x=HD({inputs:{x:x},backend:n,attrs:{perm:t}})}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}},Qz];for(const t of OU)hi(t);const FU={"tfjs-core":qo,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":XT,"tfjs-layers":rv,"tfjs-converter":$M,tfjs:"3.13.0"}},8485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(3645),i=n.n(r)()((function(t){return t[1]}));i.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:0.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:white;opacity:0.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:0.8;background:linear-gradient(to right, #fff 10px, transparent 10px) 0 0,linear-gradient(to right, #fff 10px, transparent 10px) 0 100%,linear-gradient(to left, #fff 10px, transparent 10px) 100% 0,linear-gradient(to left, #fff 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, #fff 10px, transparent 10px) 0 0,linear-gradient(to bottom, #fff 10px, transparent 10px) 100% 0,linear-gradient(to top, #fff 10px, transparent 10px) 0 100%,linear-gradient(to top, #fff 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}\n",""]);const s=i},3645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(i[a]=!0)}for(var o=0;o<t.length;o++){var l=[].concat(t[o]);r&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),e.push(l))}},e}},7676:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},9894:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},2810:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},3720:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var i={},s={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=s[t])?r:(n=l(t,(0|t)<0?-1:0,!0),a&&(s[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=i[t])?r:(n=l(t,t<0?-1:0,!1),a&&(i[t]=n),n)}function o(t,e){if(isNaN(t))return e?y:g;if(e){if(t<0)return y;if(t>=p)return _}else{if(t<=-f)return S;if(t+1>=f)return w}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var i=o(u(n,8)),s=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),h=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));s=s.mul(d).add(o(h))}else s=(s=s.mul(i)).add(o(h))}return s.unsigned=e,s}function h(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?c(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var y=a(0,!0);n.UZERO=y;var x=a(1);n.ONE=x;var v=a(1,!0);n.UONE=v;var b=a(-1);n.NEG_ONE=b;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var _=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=_;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var M=n.prototype;M.toInt=function(){return this.unsigned?this.low>>>0:this.low},M.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},M.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var i=o(u(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),c=(s.sub(l.mul(i)).toInt()>>>0).toString(t);if((s=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},M.getHighBits=function(){return this.high},M.getHighBitsUnsigned=function(){return this.high>>>0},M.getLowBits=function(){return this.low},M.getLowBitsUnsigned=function(){return this.low>>>0},M.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},M.isZero=function(){return 0===this.high&&0===this.low},M.eqz=M.isZero,M.isNegative=function(){return!this.unsigned&&this.high<0},M.isPositive=function(){return this.unsigned||this.high>=0},M.isOdd=function(){return 1==(1&this.low)},M.isEven=function(){return 0==(1&this.low)},M.equals=function(t){return r(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},M.eq=M.equals,M.notEquals=function(t){return!this.eq(t)},M.neq=M.notEquals,M.ne=M.notEquals,M.lessThan=function(t){return this.comp(t)<0},M.lt=M.lessThan,M.lessThanOrEqual=function(t){return this.comp(t)<=0},M.lte=M.lessThanOrEqual,M.le=M.lessThanOrEqual,M.greaterThan=function(t){return this.comp(t)>0},M.gt=M.greaterThan,M.greaterThanOrEqual=function(t){return this.comp(t)>=0},M.gte=M.greaterThanOrEqual,M.ge=M.greaterThanOrEqual,M.compare=function(t){if(r(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},M.comp=M.compare,M.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},M.neg=M.negate,M.add=function(t){r(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,i=this.low>>>16,s=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=s+(65535&t.low))>>>16,d+=(p+=i+u)>>>16,c+=(d+=n+o)>>>16,c+=e+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},M.subtract=function(t){return r(t)||(t=h(t)),this.add(t.neg())},M.sub=M.subtract,M.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=h(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(S))return t.isOdd()?S:g;if(t.eq(S))return this.isOdd()?S:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=65535&this.high,s=this.low>>>16,a=65535&this.low,u=t.high>>>16,c=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,y=0,x=0,v=0;return x+=(v+=a*p)>>>16,y+=(x+=s*p)>>>16,x&=65535,y+=(x+=a*d)>>>16,f+=(y+=i*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*c)>>>16,f+=n*p+i*d+s*c+a*u,l((x&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},M.mul=M.multiply,M.divide=function(t){if(r(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,i,s;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return t.eq(x)||t.eq(b)?S:t.eq(S)?x:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?x:b:(i=this.sub(t.mul(n)),s=n.add(i.div(t)));if(t.eq(S))return this.unsigned?y:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=g}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(i);)p=(d=o(n-=c,this.unsigned)).mul(t);d.isZero()&&(d=x),s=s.add(d),i=i.sub(p)}return s},M.div=M.divide,M.modulo=function(t){return r(t)||(t=h(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},M.mod=M.modulo,M.rem=M.modulo,M.not=function(){return l(~this.low,~this.high,this.unsigned)},M.and=function(t){return r(t)||(t=h(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},M.or=function(t){return r(t)||(t=h(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},M.xor=function(t){return r(t)||(t=h(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},M.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},M.shl=M.shiftLeft,M.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},M.shr=M.shiftRight,M.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},M.shru=M.shiftRightUnsigned,M.shr_u=M.shiftRightUnsigned,M.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},M.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},M.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},M.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},M.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},6377:(t,e,n)=>{var r=n(4832),i=n(8652),s=n(801),a=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},4832:function(t,e,n){var r;!function(t,i,s){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,s=e.i;return e.w=r=r+1640531527|0,n=i[s+34&127],t=i[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,i,s,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),i=0,s=-32;s<l;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(e&&e.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;t.w=a,t.X=o,t.i=i}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.X&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.x&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var r;!function(i,s){var a,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(i)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(i)]}}():t,3),r),p=new f(r),v=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(x(p.S),i),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(s.random=t,e):t})(v,d,"global"in e?e.global:this==s,e.state)}function f(t){var e,n=t.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+t[i%n]+(e=a[i])],a[s]=e;(r.g=function(t){for(var e,n=0,i=r.i,s=r.j,a=r.S;t--;)e=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+e])+(a[s]=e)];return r.i=i,r.j=s,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],i=typeof t;if(e&&"object"==i)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==i?t:t+"\0"}function y(t,e){for(var n,r=t+"",i=0;i<r.length;)e[d&i]=d&(n^=19*e[d&i])+r.charCodeAt(i++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=p,y(s.random(),i),t.exports){t.exports=p;try{a=n(3906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},4412:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var r=n(3379),i=n.n(r),s=n(8485);i()(s.Z,{insert:"head",singleton:!1});const a=s.Z.locals||{}},3379:(t,e,n)=>{"use strict";var r,i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function a(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function o(t,e){for(var n={},r=[],i=0;i<t.length;i++){var o=t[i],l=e.base?o[0]+e.base:o[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=a(c),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(s[h].references++,s[h].updater(d)):s.push({identifier:c,updater:m(d,e),references:1}),r.push(c)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var s=n.nc;s&&(r.nonce=s)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=i(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var u,c=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function h(t,e,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=c(e,i);else{var s=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(s,a[e]):t.appendChild(s)}}function d(t,e,n){var r=n.css,i=n.media,s=n.sourceMap;if(i?t.setAttribute("media",i):t.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var p=null,f=0;function m(t,e){var n,r,i;if(e.singleton){var s=f++;n=p||(p=l(e)),r=h.bind(null,n,s,!1),i=h.bind(null,n,s,!0)}else n=l(e),r=d.bind(null,n,e),i=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var i=a(n[r]);s[i].references--}for(var l=o(t,e),u=0;u<n.length;u++){var c=a(n[u]);0===s[c].references&&(s[c].updater(),s.splice(c,1))}n=l}}}},2212:(t,e,n)=>{"use strict";n.r(e),n.d(e,{ACESFilmicToneMapping:()=>nt,AddEquation:()=>T,AddOperation:()=>J,AdditiveAnimationBlendMode:()=>We,AdditiveBlending:()=>w,AlphaFormat:()=>Ot,AlwaysDepth:()=>q,AlwaysStencilFunc:()=>yn,AmbientLight:()=>Qh,AmbientLightProbe:()=>gd,AnimationClip:()=>Mh,AnimationLoader:()=>Nh,AnimationMixer:()=>Xd,AnimationObjectGroup:()=>Gd,AnimationUtils:()=>hh,ArcCurve:()=>Gu,ArrayCamera:()=>ml,ArrowHelper:()=>Fp,Audio:()=>Cd,AudioAnalyser:()=>Dd,AudioContext:()=>pd,AudioListener:()=>Ad,AudioLoader:()=>fd,AxesHelper:()=>zp,AxisHelper:()=>ff,BackSide:()=>m,BasicDepthPacking:()=>Je,BasicShadowMap:()=>c,BinaryTextureLoader:()=>vf,Bone:()=>eu,BooleanKeyframeTrack:()=>yh,BoundingBoxHelper:()=>mf,Box2:()=>ip,Box3:()=>or,Box3Helper:()=>Np,BoxBufferGeometry:()=>fs,BoxGeometry:()=>fs,BoxHelper:()=>Rp,BufferAttribute:()=>ki,BufferGeometry:()=>Xi,BufferGeometryLoader:()=>ad,ByteType:()=>Tt,Cache:()=>Eh,Camera:()=>vs,CameraHelper:()=>Cp,CanvasRenderer:()=>wf,CanvasTexture:()=>Lu,CatmullRomCurve3:()=>Zu,CineonToneMapping:()=>et,CircleBufferGeometry:()=>Du,CircleGeometry:()=>Du,ClampToEdgeWrapping:()=>dt,Clock:()=>wd,Color:()=>Ei,ColorKeyframeTrack:()=>xh,CompressedTexture:()=>Nu,CompressedTextureLoader:()=>Lh,ConeBufferGeometry:()=>Ou,ConeGeometry:()=>Ou,CubeCamera:()=>_s,CubeReflectionMapping:()=>st,CubeRefractionMapping:()=>at,CubeTexture:()=>Ss,CubeTextureLoader:()=>Ph,CubeUVReflectionMapping:()=>ut,CubeUVRefractionMapping:()=>ct,CubicBezierCurve:()=>nc,CubicBezierCurve3:()=>rc,CubicInterpolant:()=>ph,CullFaceBack:()=>o,CullFaceFront:()=>l,CullFaceFrontBack:()=>u,CullFaceNone:()=>a,Curve:()=>Hu,CurvePath:()=>cc,CustomBlending:()=>M,CustomToneMapping:()=>rt,CylinderBufferGeometry:()=>Pu,CylinderGeometry:()=>Pu,Cylindrical:()=>np,DataTexture:()=>nu,DataTexture2DArray:()=>ga,DataTexture3D:()=>_a,DataTextureLoader:()=>Oh,DataUtils:()=>qp,DecrementStencilOp:()=>an,DecrementWrapStencilOp:()=>ln,DefaultLoadingManager:()=>Ch,DepthFormat:()=>$t,DepthStencilFormat:()=>qt,DepthTexture:()=>vl,DirectionalLight:()=>Zh,DirectionalLightHelper:()=>Tp,DiscreteInterpolant:()=>mh,DodecahedronBufferGeometry:()=>zu,DodecahedronGeometry:()=>zu,DoubleSide:()=>g,DstAlphaFactor:()=>O,DstColorFactor:()=>z,DynamicBufferAttribute:()=>rf,DynamicCopyUsage:()=>Tn,DynamicDrawUsage:()=>vn,DynamicReadUsage:()=>_n,EdgesGeometry:()=>Vu,EdgesHelper:()=>gf,EllipseCurve:()=>Wu,EqualDepth:()=>W,EqualStencilFunc:()=>dn,EquirectangularReflectionMapping:()=>ot,EquirectangularRefractionMapping:()=>lt,Euler:()=>Wr,EventDispatcher:()=>In,ExtrudeBufferGeometry:()=>Uc,ExtrudeGeometry:()=>Uc,FaceColors:()=>Gp,FileLoader:()=>Rh,FlatShading:()=>y,Float16BufferAttribute:()=>zi,Float32Attribute:()=>df,Float32BufferAttribute:()=>Bi,Float64Attribute:()=>pf,Float64BufferAttribute:()=>Ui,FloatType:()=>kt,Fog:()=>Tl,FogExp2:()=>Ml,Font:()=>Cf,FontLoader:()=>Af,FramebufferTexture:()=>Ru,FrontSide:()=>f,Frustum:()=>Rs,GLBufferAttribute:()=>Jd,GLSL1:()=>An,GLSL3:()=>Cn,GreaterDepth:()=>j,GreaterEqualDepth:()=>G,GreaterEqualStencilFunc:()=>gn,GreaterStencilFunc:()=>fn,GridHelper:()=>bp,Group:()=>gl,HalfFloatType:()=>Rt,HemisphereLight:()=>Bh,HemisphereLightHelper:()=>vp,HemisphereLightProbe:()=>md,IcosahedronBufferGeometry:()=>qc,IcosahedronGeometry:()=>qc,ImageBitmapLoader:()=>hd,ImageLoader:()=>Dh,ImageUtils:()=>Yn,ImmediateRenderObject:()=>If,IncrementStencilOp:()=>sn,IncrementWrapStencilOp:()=>on,InstancedBufferAttribute:()=>au,InstancedBufferGeometry:()=>sd,InstancedInterleavedBuffer:()=>Kd,InstancedMesh:()=>hu,Int16Attribute:()=>lf,Int16BufferAttribute:()=>Di,Int32Attribute:()=>cf,Int32BufferAttribute:()=>Oi,Int8Attribute:()=>sf,Int8BufferAttribute:()=>Ri,IntType:()=>Ct,InterleavedBuffer:()=>Al,InterleavedBufferAttribute:()=>Il,Interpolant:()=>dh,InterpolateDiscrete:()=>ze,InterpolateLinear:()=>Be,InterpolateSmooth:()=>Ue,InvertStencilOp:()=>un,JSONLoader:()=>_f,KeepStencilOp:()=>nn,KeyframeTrack:()=>gh,LOD:()=>Xl,LatheBufferGeometry:()=>Vc,LatheGeometry:()=>Vc,Layers:()=>Gr,LensFlare:()=>Mf,LessDepth:()=>V,LessEqualDepth:()=>H,LessEqualStencilFunc:()=>pn,LessStencilFunc:()=>hn,Light:()=>zh,LightProbe:()=>nd,Line:()=>xu,Line3:()=>op,LineBasicMaterial:()=>du,LineCurve:()=>ic,LineCurve3:()=>sc,LineDashedMaterial:()=>uh,LineLoop:()=>_u,LinePieces:()=>Hp,LineSegments:()=>wu,LineStrip:()=>Vp,LinearEncoding:()=>Ye,LinearFilter:()=>vt,LinearInterpolant:()=>fh,LinearMipMapLinearFilter:()=>St,LinearMipMapNearestFilter:()=>wt,LinearMipmapLinearFilter:()=>_t,LinearMipmapNearestFilter:()=>bt,LinearToneMapping:()=>Q,Loader:()=>Ih,LoaderUtils:()=>id,LoadingManager:()=>Ah,LoopOnce:()=>Pe,LoopPingPong:()=>Fe,LoopRepeat:()=>Oe,LuminanceAlphaFormat:()=>Ut,LuminanceFormat:()=>Bt,MOUSE:()=>i,Material:()=>vi,MaterialLoader:()=>rd,Math:()=>$n,MathUtils:()=>$n,Matrix3:()=>Vn,Matrix4:()=>Pr,MaxEquation:()=>I,Mesh:()=>ds,MeshBasicMaterial:()=>Ai,MeshDepthMaterial:()=>ul,MeshDistanceMaterial:()=>cl,MeshFaceMaterial:()=>Xp,MeshLambertMaterial:()=>oh,MeshMatcapMaterial:()=>lh,MeshNormalMaterial:()=>ah,MeshPhongMaterial:()=>ih,MeshPhysicalMaterial:()=>rh,MeshStandardMaterial:()=>nh,MeshToonMaterial:()=>sh,MinEquation:()=>C,MirroredRepeatWrapping:()=>pt,MixOperation:()=>K,MultiMaterial:()=>Yp,MultiplyBlending:()=>S,MultiplyOperation:()=>Y,NearestFilter:()=>ft,NearestMipMapLinearFilter:()=>xt,NearestMipMapNearestFilter:()=>gt,NearestMipmapLinearFilter:()=>yt,NearestMipmapNearestFilter:()=>mt,NeverDepth:()=>$,NeverStencilFunc:()=>cn,NoBlending:()=>v,NoColors:()=>Wp,NoToneMapping:()=>Z,NormalAnimationBlendMode:()=>He,NormalBlending:()=>b,NotEqualDepth:()=>X,NotEqualStencilFunc:()=>mn,NumberKeyframeTrack:()=>vh,Object3D:()=>ai,ObjectLoader:()=>od,ObjectSpaceNormalMap:()=>tn,OctahedronBufferGeometry:()=>Hc,OctahedronGeometry:()=>Hc,OneFactor:()=>R,OneMinusDstAlphaFactor:()=>F,OneMinusDstColorFactor:()=>B,OneMinusSrcAlphaFactor:()=>P,OneMinusSrcColorFactor:()=>L,OrthographicCamera:()=>Hs,PCFShadowMap:()=>h,PCFSoftShadowMap:()=>d,PMREMGenerator:()=>sa,ParametricGeometry:()=>Tf,Particle:()=>Jp,ParticleBasicMaterial:()=>tf,ParticleSystem:()=>Zp,ParticleSystemMaterial:()=>ef,Path:()=>hc,PerspectiveCamera:()=>bs,Plane:()=>Cs,PlaneBufferGeometry:()=>Ds,PlaneGeometry:()=>Ds,PlaneHelper:()=>Lp,PointCloud:()=>Kp,PointCloudMaterial:()=>Qp,PointLight:()=>Kh,PointLightHelper:()=>mp,Points:()=>Cu,PointsMaterial:()=>Su,PolarGridHelper:()=>wp,PolyhedronBufferGeometry:()=>Fu,PolyhedronGeometry:()=>Fu,PositionalAudio:()=>Ld,PropertyBinding:()=>Wd,PropertyMixer:()=>Pd,QuadraticBezierCurve:()=>ac,QuadraticBezierCurve3:()=>oc,Quaternion:()=>rr,QuaternionKeyframeTrack:()=>wh,QuaternionLinearInterpolant:()=>bh,REVISION:()=>r,RGBADepthPacking:()=>Ze,RGBAFormat:()=>zt,RGBAIntegerFormat:()=>Xt,RGBA_ASTC_10x10_Format:()=>ye,RGBA_ASTC_10x5_Format:()=>fe,RGBA_ASTC_10x6_Format:()=>me,RGBA_ASTC_10x8_Format:()=>ge,RGBA_ASTC_12x10_Format:()=>xe,RGBA_ASTC_12x12_Format:()=>ve,RGBA_ASTC_4x4_Format:()=>ae,RGBA_ASTC_5x4_Format:()=>oe,RGBA_ASTC_5x5_Format:()=>le,RGBA_ASTC_6x5_Format:()=>ue,RGBA_ASTC_6x6_Format:()=>ce,RGBA_ASTC_8x5_Format:()=>he,RGBA_ASTC_8x6_Format:()=>de,RGBA_ASTC_8x8_Format:()=>pe,RGBA_BPTC_Format:()=>be,RGBA_ETC2_EAC_Format:()=>se,RGBA_PVRTC_2BPPV1_Format:()=>ne,RGBA_PVRTC_4BPPV1_Format:()=>ee,RGBA_S3TC_DXT1_Format:()=>Kt,RGBA_S3TC_DXT3_Format:()=>Jt,RGBA_S3TC_DXT5_Format:()=>Zt,RGBFormat:()=>Ft,RGBIntegerFormat:()=>jt,RGB_ETC1_Format:()=>re,RGB_ETC2_Format:()=>ie,RGB_PVRTC_2BPPV1_Format:()=>te,RGB_PVRTC_4BPPV1_Format:()=>Qt,RGB_S3TC_DXT1_Format:()=>Yt,RGFormat:()=>Wt,RGIntegerFormat:()=>Gt,RawShaderMaterial:()=>Ws,Ray:()=>Dr,Raycaster:()=>Zd,RectAreaLight:()=>td,RedFormat:()=>Vt,RedIntegerFormat:()=>Ht,ReinhardToneMapping:()=>tt,RepeatWrapping:()=>ht,ReplaceStencilOp:()=>rn,ReverseSubtractEquation:()=>A,RingBufferGeometry:()=>Wc,RingGeometry:()=>Wc,SRGB8_ALPHA8_ASTC_10x10_Format:()=>Ne,SRGB8_ALPHA8_ASTC_10x5_Format:()=>Ie,SRGB8_ALPHA8_ASTC_10x6_Format:()=>ke,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Re,SRGB8_ALPHA8_ASTC_12x10_Format:()=>Le,SRGB8_ALPHA8_ASTC_12x12_Format:()=>De,SRGB8_ALPHA8_ASTC_4x4_Format:()=>we,SRGB8_ALPHA8_ASTC_5x4_Format:()=>_e,SRGB8_ALPHA8_ASTC_5x5_Format:()=>Se,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Me,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Te,SRGB8_ALPHA8_ASTC_8x5_Format:()=>Ee,SRGB8_ALPHA8_ASTC_8x6_Format:()=>Ae,SRGB8_ALPHA8_ASTC_8x8_Format:()=>Ce,Scene:()=>El,SceneUtils:()=>Sf,ShaderChunk:()=>Ps,ShaderLib:()=>Fs,ShaderMaterial:()=>xs,ShadowMaterial:()=>eh,Shape:()=>dc,ShapeBufferGeometry:()=>Gc,ShapeGeometry:()=>Gc,ShapePath:()=>Bp,ShapeUtils:()=>Fc,ShortType:()=>Et,Skeleton:()=>su,SkeletonHelper:()=>pp,SkinnedMesh:()=>tu,SmoothShading:()=>x,Sphere:()=>Er,SphereBufferGeometry:()=>jc,SphereGeometry:()=>jc,Spherical:()=>ep,SphericalHarmonics3:()=>ed,SplineCurve:()=>lc,SpotLight:()=>Wh,SpotLightHelper:()=>up,Sprite:()=>Hl,SpriteMaterial:()=>kl,SrcAlphaFactor:()=>D,SrcAlphaSaturateFactor:()=>U,SrcColorFactor:()=>N,StaticCopyUsage:()=>Mn,StaticDrawUsage:()=>xn,StaticReadUsage:()=>wn,StereoCamera:()=>bd,StreamCopyUsage:()=>En,StreamDrawUsage:()=>bn,StreamReadUsage:()=>Sn,StringKeyframeTrack:()=>_h,SubtractEquation:()=>E,SubtractiveBlending:()=>_,TOUCH:()=>s,TangentSpaceNormalMap:()=>Qe,TetrahedronBufferGeometry:()=>Xc,TetrahedronGeometry:()=>Xc,TextGeometry:()=>Ef,Texture:()=>Jn,TextureLoader:()=>Fh,TorusBufferGeometry:()=>Yc,TorusGeometry:()=>Yc,TorusKnotBufferGeometry:()=>Kc,TorusKnotGeometry:()=>Kc,Triangle:()=>yi,TriangleFanDrawMode:()=>Xe,TriangleStripDrawMode:()=>je,TrianglesDrawMode:()=>Ge,TubeBufferGeometry:()=>Jc,TubeGeometry:()=>Jc,UVMapping:()=>it,Uint16Attribute:()=>uf,Uint16BufferAttribute:()=>Pi,Uint32Attribute:()=>hf,Uint32BufferAttribute:()=>Fi,Uint8Attribute:()=>af,Uint8BufferAttribute:()=>Ni,Uint8ClampedAttribute:()=>of,Uint8ClampedBufferAttribute:()=>Li,Uniform:()=>Yd,UniformsLib:()=>Os,UniformsUtils:()=>ys,UnsignedByteType:()=>Mt,UnsignedInt248Type:()=>Pt,UnsignedIntType:()=>It,UnsignedShort4444Type:()=>Nt,UnsignedShort5551Type:()=>Lt,UnsignedShort565Type:()=>Dt,UnsignedShortType:()=>At,VSMShadowMap:()=>p,Vector2:()=>qn,Vector3:()=>ir,Vector4:()=>Qn,VectorKeyframeTrack:()=>Sh,Vertex:()=>nf,VertexColors:()=>jp,VideoTexture:()=>ku,WebGL1Renderer:()=>Sl,WebGLCubeRenderTarget:()=>Ms,WebGLMultipleRenderTargets:()=>er,WebGLMultisampleRenderTarget:()=>nr,WebGLRenderTarget:()=>tr,WebGLRenderTargetCube:()=>bf,WebGLRenderer:()=>_l,WebGLUtils:()=>fl,WireframeGeometry:()=>Zc,WireframeHelper:()=>yf,WrapAroundEnding:()=>Ve,XHRLoader:()=>xf,ZeroCurvatureEnding:()=>$e,ZeroFactor:()=>k,ZeroSlopeEnding:()=>qe,ZeroStencilOp:()=>en,sRGBEncoding:()=>Ke});const r="136",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},a=0,o=1,l=2,u=3,c=0,h=1,d=2,p=3,f=0,m=1,g=2,y=1,x=2,v=0,b=1,w=2,_=3,S=4,M=5,T=100,E=101,A=102,C=103,I=104,k=200,R=201,N=202,L=203,D=204,P=205,O=206,F=207,z=208,B=209,U=210,$=0,q=1,V=2,H=3,W=4,G=5,j=6,X=7,Y=0,K=1,J=2,Z=0,Q=1,tt=2,et=3,nt=4,rt=5,it=300,st=301,at=302,ot=303,lt=304,ut=306,ct=307,ht=1e3,dt=1001,pt=1002,ft=1003,mt=1004,gt=1004,yt=1005,xt=1005,vt=1006,bt=1007,wt=1007,_t=1008,St=1008,Mt=1009,Tt=1010,Et=1011,At=1012,Ct=1013,It=1014,kt=1015,Rt=1016,Nt=1017,Lt=1018,Dt=1019,Pt=1020,Ot=1021,Ft=1022,zt=1023,Bt=1024,Ut=1025,$t=1026,qt=1027,Vt=1028,Ht=1029,Wt=1030,Gt=1031,jt=1032,Xt=1033,Yt=33776,Kt=33777,Jt=33778,Zt=33779,Qt=35840,te=35841,ee=35842,ne=35843,re=36196,ie=37492,se=37496,ae=37808,oe=37809,le=37810,ue=37811,ce=37812,he=37813,de=37814,pe=37815,fe=37816,me=37817,ge=37818,ye=37819,xe=37820,ve=37821,be=36492,we=37840,_e=37841,Se=37842,Me=37843,Te=37844,Ee=37845,Ae=37846,Ce=37847,Ie=37848,ke=37849,Re=37850,Ne=37851,Le=37852,De=37853,Pe=2200,Oe=2201,Fe=2202,ze=2300,Be=2301,Ue=2302,$e=2400,qe=2401,Ve=2402,He=2500,We=2501,Ge=0,je=1,Xe=2,Ye=3e3,Ke=3001,Je=3200,Ze=3201,Qe=0,tn=1,en=0,nn=7680,rn=7681,sn=7682,an=7683,on=34055,ln=34056,un=5386,cn=512,hn=513,dn=514,pn=515,fn=516,mn=517,gn=518,yn=519,xn=35044,vn=35048,bn=35040,wn=35045,_n=35049,Sn=35041,Mn=35046,Tn=35050,En=35042,An="100",Cn="300 es";class In{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t);t.target=null}}}const kn=[];for(let kf=0;kf<256;kf++)kn[kf]=(kf<16?"0":"")+kf.toString(16);let Rn=1234567;const Nn=Math.PI/180,Ln=180/Math.PI;function Dn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(kn[255&t]+kn[t>>8&255]+kn[t>>16&255]+kn[t>>24&255]+"-"+kn[255&e]+kn[e>>8&255]+"-"+kn[e>>16&15|64]+kn[e>>24&255]+"-"+kn[63&n|128]+kn[n>>8&255]+"-"+kn[n>>16&255]+kn[n>>24&255]+kn[255&r]+kn[r>>8&255]+kn[r>>16&255]+kn[r>>24&255]).toUpperCase()}function Pn(t,e,n){return Math.max(e,Math.min(n,t))}function On(t,e){return(t%e+e)%e}function Fn(t,e,n){return(1-n)*t+n*e}function zn(t){return 0==(t&t-1)&&0!==t}function Bn(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Un(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var $n=Object.freeze({__proto__:null,DEG2RAD:Nn,RAD2DEG:Ln,generateUUID:Dn,clamp:Pn,euclideanModulo:On,mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Fn,damp:function(t,e,n,r){return Fn(t,e,1-Math.exp(-n*r))},pingpong:function(t,e=1){return e-Math.abs(On(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(Rn=t%2147483647),Rn=16807*Rn%2147483647,(Rn-1)/2147483646},degToRad:function(t){return t*Nn},radToDeg:function(t){return t*Ln},isPowerOfTwo:zn,ceilPowerOfTwo:Bn,floorPowerOfTwo:Un,setQuaternionFromProperEuler:function(t,e,n,r,i){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),u=s((e+r)/2),c=a((e+r)/2),h=s((e-r)/2),d=a((e-r)/2),p=s((r-e)/2),f=a((r-e)/2);switch(i){case"XYX":t.set(o*c,l*h,l*d,o*u);break;case"YZY":t.set(l*d,o*c,l*h,o*u);break;case"ZXZ":t.set(l*h,l*d,o*c,o*u);break;case"XZX":t.set(o*c,l*f,l*p,o*u);break;case"YXY":t.set(l*p,o*c,l*f,o*u);break;case"ZYZ":t.set(l*f,l*p,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class qn{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*r+t.x,this.y=i*r+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}qn.prototype.isVector2=!0;class Vn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,a,o,l){const u=this.elements;return u[0]=t,u[1]=r,u[2]=a,u[3]=e,u[4]=i,u[5]=o,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],y=r[1],x=r[4],v=r[7],b=r[2],w=r[5],_=r[8];return i[0]=s*f+a*y+o*b,i[3]=s*m+a*x+o*w,i[6]=s*g+a*v+o*_,i[1]=l*f+u*y+c*b,i[4]=l*m+u*x+c*w,i[7]=l*g+u*v+c*_,i[2]=h*f+d*y+p*b,i[5]=h*m+d*x+p*w,i[8]=h*g+d*v+p*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8];return e*s*u-e*a*l-n*i*u+n*a*o+r*i*l-r*s*o}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=u*s-a*l,h=a*o-u*i,d=l*i-s*o,p=e*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(r*l-u*n)*f,t[2]=(a*n-r*s)*f,t[3]=h*f,t[4]=(u*e-r*o)*f,t[5]=(r*i-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,s,a){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-r*l,r*o,-r*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],s=r[3],a=r[6],o=r[1],l=r[4],u=r[7];return r[0]=e*i+n*o,r[3]=e*s+n*l,r[6]=e*a+n*u,r[1]=-n*i+e*o,r[4]=-n*s+e*l,r[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function Hn(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}Vn.prototype.isMatrix3=!0;const Wn={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Gn(t,e){return new Wn[t](e)}function jn(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}let Xn;class Yn{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Xn&&(Xn=jn("canvas")),Xn.width=t.width,Xn.height=t.height;const n=Xn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Xn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let Kn=0;class Jn extends In{constructor(t=Jn.DEFAULT_IMAGE,e=Jn.DEFAULT_MAPPING,n=dt,r=dt,i=vt,s=_t,a=zt,o=Mt,l=1,u=Ye){super(),Object.defineProperty(this,"id",{value:Kn++}),this.uuid=Dn(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new qn(0,0),this.repeat=new qn(1,1),this.center=new qn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Vn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Dn()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(Zn(r[t].image)):e.push(Zn(r[t]))}else e=Zn(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==it)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ht:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case pt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ht:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case pt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function Zn(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Yn.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Jn.DEFAULT_IMAGE=void 0,Jn.DEFAULT_MAPPING=it,Jn.prototype.isTexture=!0;class Qn{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*e+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*e+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*e+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const s=.01,a=.1,o=t.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-f)<s&&Math.abs(p-m)<s){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,y=(g+1)/2,x=(u+h)/4,v=(c+f)/4,b=(p+m)/4;return t>o&&t>y?t<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=x/n,i=v/n):o>y?o<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=x/r,i=b/r):y<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(y),n=v/i,r=b/i),this.set(n,r,i,e),this}let y=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(c-f)/y,this.z=(h-u)/y,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Qn.prototype.isVector4=!0;class tr extends In{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new Qn(0,0,t,e),this.scissorTest=!1,this.viewport=new Qn(0,0,t,e),this.texture=new Jn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:vt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}tr.prototype.isWebGLRenderTarget=!0;class er extends tr{constructor(t,e,n){super(t,e);const r=this.texture;this.texture=[];for(let i=0;i<n;i++)this.texture[i]=r.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=t,this.texture[r].image.height=e,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}er.prototype.isWebGLMultipleRenderTargets=!0;class nr extends tr{constructor(t,e,n={}){super(t,e,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(t){return super.copy.call(this,t),this.samples=t.samples,this.useRenderToTexture=t.useRenderToTexture,this.useRenderbuffer=t.useRenderbuffer,this}}nr.prototype.isWebGLMultisampleRenderTarget=!0;class rr{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,i,s,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=u,void(t[e+3]=c);if(1===a)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(c!==f||o!==h||l!==d||u!==p){let t=1-a;const e=o*h+l*d+u*p+c*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,a=Math.sin(a*s)/i}const i=a*n;if(o=o*t+h*i,l=l*t+d*i,u=u*t+p*i,c=c*t+f*i,t===1-a){const t=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=t,l*=t,u*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=u,t[e+3]=c}static multiplyQuaternionsFlat(t,e,n,r,i,s){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[s],h=i[s+1],d=i[s+2],p=i[s+3];return t[e]=a*p+u*c+o*d-l*h,t[e+1]=o*p+u*h+l*c-a*d,t[e+2]=l*p+u*d+a*h-o*c,t[e+3]=u*p-a*c-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],s=e[1],a=e[5],o=e[9],l=e[2],u=e[6],c=e[10],h=n+a+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(u-o)*t,this._y=(i-l)*t,this._z=(s-r)*t}else if(n>a&&n>c){const t=2*Math.sqrt(1+n-a-c);this._w=(u-o)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(i+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-n-c);this._w=(i-l)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(o+u)/t}else{const t=2*Math.sqrt(1+c-n-a);this._w=(s-r)/t,this._x=(i+l)/t,this._y=(o+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Pn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,s=t._w,a=e._x,o=e._y,l=e._z,u=e._w;return this._x=n*u+s*a+r*l-i*o,this._y=r*u+s*o+i*a-n*l,this._z=i*u+s*l+n*o-r*a,this._w=s*u-n*a-r*o-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,s=this._w;let a=s*t._w+n*t._x+r*t._y+i*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-e)*u)/l,h=Math.sin(e*u)/l;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(i),n*Math.cos(i),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}rr.prototype.isQuaternion=!0;class ir{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ar.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ar.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*r-a*n,u=o*n+a*e-i*r,c=o*r+i*n-s*e,h=-i*e-s*n-a*r;return this.x=l*o+h*-i+u*-a-c*-s,this.y=u*o+h*-s+c*-i-l*-a,this.z=c*o+h*-a+l*-s-u*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return sr.copy(this).projectOnVector(t),this.sub(sr)}reflect(t){return this.sub(sr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Pn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}ir.prototype.isVector3=!0;const sr=new ir,ar=new rr;class or{constructor(t=new ir(1/0,1/0,1/0),e=new ir(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],u=t[o+1],c=t[o+2];l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),u=t.getY(o),c=t.getZ(o);l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ur.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),cr.copy(e.boundingBox),cr.applyMatrix4(t.matrixWorld),this.union(cr));const n=t.children;for(let r=0,i=n.length;r<i;r++)this.expandByObject(n[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ur),ur.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(yr),xr.subVectors(this.max,yr),hr.subVectors(t.a,yr),dr.subVectors(t.b,yr),pr.subVectors(t.c,yr),fr.subVectors(dr,hr),mr.subVectors(pr,dr),gr.subVectors(hr,pr);let e=[0,-fr.z,fr.y,0,-mr.z,mr.y,0,-gr.z,gr.y,fr.z,0,-fr.x,mr.z,0,-mr.x,gr.z,0,-gr.x,-fr.y,fr.x,0,-mr.y,mr.x,0,-gr.y,gr.x,0];return!!wr(e,hr,dr,pr,xr)&&(e=[1,0,0,0,1,0,0,0,1],!!wr(e,hr,dr,pr,xr)&&(vr.crossVectors(fr,mr),e=[vr.x,vr.y,vr.z],wr(e,hr,dr,pr,xr)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ur.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(ur).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(lr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),lr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),lr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),lr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),lr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),lr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),lr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),lr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(lr)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}or.prototype.isBox3=!0;const lr=[new ir,new ir,new ir,new ir,new ir,new ir,new ir,new ir],ur=new ir,cr=new or,hr=new ir,dr=new ir,pr=new ir,fr=new ir,mr=new ir,gr=new ir,yr=new ir,xr=new ir,vr=new ir,br=new ir;function wr(t,e,n,r,i){for(let s=0,a=t.length-3;s<=a;s+=3){br.fromArray(t,s);const a=i.x*Math.abs(br.x)+i.y*Math.abs(br.y)+i.z*Math.abs(br.z),o=e.dot(br),l=n.dot(br),u=r.dot(br);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const _r=new or,Sr=new ir,Mr=new ir,Tr=new ir;class Er{constructor(t=new ir,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):_r.setFromPoints(t).getCenter(n);let r=0;for(let i=0,s=t.length;i<s;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Tr.subVectors(t,this.center);const e=Tr.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Tr.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?Mr.set(0,0,1).multiplyScalar(t.radius):Mr.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Sr.copy(t.center).add(Mr)),this.expandByPoint(Sr.copy(t.center).sub(Mr)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ar=new ir,Cr=new ir,Ir=new ir,kr=new ir,Rr=new ir,Nr=new ir,Lr=new ir;class Dr{constructor(t=new ir,e=new ir(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ar)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ar.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ar.copy(this.direction).multiplyScalar(e).add(this.origin),Ar.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){Cr.copy(t).add(e).multiplyScalar(.5),Ir.copy(e).sub(t).normalize(),kr.copy(this.origin).sub(Cr);const i=.5*t.distanceTo(e),s=-this.direction.dot(Ir),a=kr.dot(this.direction),o=-kr.dot(Ir),l=kr.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=i*u,c>=0)if(h>=-p)if(h<=p){const t=1/u;c*=t,h*=t,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*i+a)),h=c>0?-i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(c=Math.max(0,-(s*i+a)),h=c>0?i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l);else h=s>0?-i:i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(Ir).multiplyScalar(h).add(Cr),d}intersectSphere(t,e){Ar.subVectors(t.center,this.origin);const n=Ar.dot(this.direction),r=Ar.dot(Ar)-n*n,i=t.radius*t.radius;if(r>i)return null;const s=Math.sqrt(i-r),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,r=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,r=(t.min.x-h.x)*l),u>=0?(i=(t.min.y-h.y)*u,s=(t.max.y-h.y)*u):(i=(t.max.y-h.y)*u,s=(t.min.y-h.y)*u),n>s||i>r?null:((i>n||n!=n)&&(n=i),(s<r||r!=r)&&(r=s),c>=0?(a=(t.min.z-h.z)*c,o=(t.max.z-h.z)*c):(a=(t.max.z-h.z)*c,o=(t.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Ar)}intersectTriangle(t,e,n,r,i){Rr.subVectors(e,t),Nr.subVectors(n,t),Lr.crossVectors(Rr,Nr);let s,a=this.direction.dot(Lr);if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}kr.subVectors(this.origin,t);const o=s*this.direction.dot(Nr.crossVectors(kr,Nr));if(o<0)return null;const l=s*this.direction.dot(Rr.cross(kr));if(l<0)return null;if(o+l>a)return null;const u=-s*kr.dot(Lr);return u<0?null:this.at(u/a,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Pr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Pr).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Or.setFromMatrixColumn(t,0).length(),i=1/Or.setFromMatrixColumn(t,1).length(),s=1/Or.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=-o*c,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-a*o,e[2]=i-t*l,e[6]=r+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t+i*a,e[4]=r*a-n,e[8]=s*l,e[1]=s*c,e[5]=s*u,e[9]=-a,e[2]=n*a-r,e[6]=i+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t-i*a,e[4]=-s*c,e[8]=r+n*a,e[1]=n+r*a,e[5]=s*u,e[9]=i-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=r*l-n,e[8]=t*l+i,e[1]=o*c,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=i-t*c,e[8]=r*c+n,e[1]=c,e[5]=s*u,e[9]=-a*u,e[2]=-l*u,e[6]=n*c+r,e[10]=t-i*c}else if("XZY"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=-c,e[8]=l*u,e[1]=t*c+i,e[5]=s*u,e[9]=n*c-r,e[2]=r*c-n,e[6]=a*u,e[10]=i*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(zr,t,Br)}lookAt(t,e,n){const r=this.elements;return qr.subVectors(t,e),0===qr.lengthSq()&&(qr.z=1),qr.normalize(),Ur.crossVectors(n,qr),0===Ur.lengthSq()&&(1===Math.abs(n.z)?qr.x+=1e-4:qr.z+=1e-4,qr.normalize(),Ur.crossVectors(n,qr)),Ur.normalize(),$r.crossVectors(qr,Ur),r[0]=Ur.x,r[4]=$r.x,r[8]=qr.x,r[1]=Ur.y,r[5]=$r.y,r[9]=qr.y,r[2]=Ur.z,r[6]=$r.z,r[10]=qr.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],x=n[7],v=n[11],b=n[15],w=r[0],_=r[4],S=r[8],M=r[12],T=r[1],E=r[5],A=r[9],C=r[13],I=r[2],k=r[6],R=r[10],N=r[14],L=r[3],D=r[7],P=r[11],O=r[15];return i[0]=s*w+a*T+o*I+l*L,i[4]=s*_+a*E+o*k+l*D,i[8]=s*S+a*A+o*R+l*P,i[12]=s*M+a*C+o*N+l*O,i[1]=u*w+c*T+h*I+d*L,i[5]=u*_+c*E+h*k+d*D,i[9]=u*S+c*A+h*R+d*P,i[13]=u*M+c*C+h*N+d*O,i[2]=p*w+f*T+m*I+g*L,i[6]=p*_+f*E+m*k+g*D,i[10]=p*S+f*A+m*R+g*P,i[14]=p*M+f*C+m*N+g*O,i[3]=y*w+x*T+v*I+b*L,i[7]=y*_+x*E+v*k+b*D,i[11]=y*S+x*A+v*R+b*P,i[15]=y*M+x*C+v*N+b*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],l=t[13],u=t[2],c=t[6],h=t[10],d=t[14];return t[3]*(+i*o*c-r*l*c-i*a*h+n*l*h+r*a*d-n*o*d)+t[7]*(+e*o*d-e*l*h+i*s*h-r*s*d+r*l*u-i*o*u)+t[11]*(+e*l*c-e*a*d-i*s*c+n*s*d+i*a*u-n*l*u)+t[15]*(-r*a*u-e*o*c+e*a*h+r*s*c-n*s*h+n*o*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=t[9],h=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],y=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,x=p*h*l-u*m*l-p*o*d+s*m*d+u*o*g-s*h*g,v=u*f*l-p*c*l+p*a*d-s*f*d-u*a*g+s*c*g,b=p*c*o-u*f*o-p*a*h+s*f*h+u*a*m-s*c*m,w=e*y+n*x+r*v+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return t[0]=y*_,t[1]=(f*h*i-c*m*i-f*r*d+n*m*d+c*r*g-n*h*g)*_,t[2]=(a*m*i-f*o*i+f*r*l-n*m*l-a*r*g+n*o*g)*_,t[3]=(c*o*i-a*h*i-c*r*l+n*h*l+a*r*d-n*o*d)*_,t[4]=x*_,t[5]=(u*m*i-p*h*i+p*r*d-e*m*d-u*r*g+e*h*g)*_,t[6]=(p*o*i-s*m*i-p*r*l+e*m*l+s*r*g-e*o*g)*_,t[7]=(s*h*i-u*o*i+u*r*l-e*h*l-s*r*d+e*o*d)*_,t[8]=v*_,t[9]=(p*c*i-u*f*i-p*n*d+e*f*d+u*n*g-e*c*g)*_,t[10]=(s*f*i-p*a*i+p*n*l-e*f*l-s*n*g+e*a*g)*_,t[11]=(u*a*i-s*c*i-u*n*l+e*c*l+s*n*d-e*a*d)*_,t[12]=b*_,t[13]=(u*f*r-p*c*r+p*n*h-e*f*h-u*n*m+e*c*m)*_,t[14]=(p*a*r-s*f*r-p*n*o+e*f*o+s*n*m-e*a*m)*_,t[15]=(s*c*r-u*a*r+u*n*o-e*c*o-s*n*h+e*a*h)*_,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,l=i*s,u=i*a;return this.set(l*s+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*s,0,l*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,i,s){return this.set(1,n,i,0,t,1,s,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,s=e._y,a=e._z,o=e._w,l=i+i,u=s+s,c=a+a,h=i*l,d=i*u,p=i*c,f=s*u,m=s*c,g=a*c,y=o*l,x=o*u,v=o*c,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(p+x)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Or.set(r[0],r[1],r[2]).length();const s=Or.set(r[4],r[5],r[6]).length(),a=Or.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Fr.copy(this);const o=1/i,l=1/s,u=1/a;return Fr.elements[0]*=o,Fr.elements[1]*=o,Fr.elements[2]*=o,Fr.elements[4]*=l,Fr.elements[5]*=l,Fr.elements[6]*=l,Fr.elements[8]*=u,Fr.elements[9]*=u,Fr.elements[10]*=u,e.setFromRotationMatrix(Fr),n.x=i,n.y=s,n.z=a,this}makePerspective(t,e,n,r,i,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,o=2*i/(e-t),l=2*i/(n-r),u=(e+t)/(e-t),c=(n+r)/(n-r),h=-(s+i)/(s-i),d=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,r,i,s){const a=this.elements,o=1/(e-t),l=1/(n-r),u=1/(s-i),c=(e+t)*o,h=(n+r)*l,d=(s+i)*u;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Pr.prototype.isMatrix4=!0;const Or=new ir,Fr=new Pr,zr=new ir(0,0,0),Br=new ir(1,1,1),Ur=new ir,$r=new ir,qr=new ir,Vr=new Pr,Hr=new rr;class Wr{constructor(t=0,e=0,n=0,r=Wr.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,i=r[0],s=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(Pn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Pn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(Pn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-Pn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Pn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Pn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Vr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Vr,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Hr.setFromEuler(this),this.setFromQuaternion(Hr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new ir(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Wr.prototype.isEuler=!0,Wr.DefaultOrder="XYZ",Wr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Gr{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let jr=0;const Xr=new ir,Yr=new rr,Kr=new Pr,Jr=new ir,Zr=new ir,Qr=new ir,ti=new rr,ei=new ir(1,0,0),ni=new ir(0,1,0),ri=new ir(0,0,1),ii={type:"added"},si={type:"removed"};class ai extends In{constructor(){super(),Object.defineProperty(this,"id",{value:jr++}),this.uuid=Dn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ai.DefaultUp.clone();const t=new ir,e=new Wr,n=new rr,r=new ir(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Pr},normalMatrix:{value:new Vn}}),this.matrix=new Pr,this.matrixWorld=new Pr,this.matrixAutoUpdate=ai.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Gr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Yr.setFromAxisAngle(t,e),this.quaternion.multiply(Yr),this}rotateOnWorldAxis(t,e){return Yr.setFromAxisAngle(t,e),this.quaternion.premultiply(Yr),this}rotateX(t){return this.rotateOnAxis(ei,t)}rotateY(t){return this.rotateOnAxis(ni,t)}rotateZ(t){return this.rotateOnAxis(ri,t)}translateOnAxis(t,e){return Xr.copy(t).applyQuaternion(this.quaternion),this.position.add(Xr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ei,t)}translateY(t){return this.translateOnAxis(ni,t)}translateZ(t){return this.translateOnAxis(ri,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Kr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Jr.copy(t):Jr.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Zr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Kr.lookAt(Zr,Jr,this.up):Kr.lookAt(Jr,Zr,this.up),this.quaternion.setFromRotationMatrix(Kr),r&&(Kr.extractRotation(r.matrixWorld),Yr.setFromRotationMatrix(Kr),this.quaternion.premultiply(Yr.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ii)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(si)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(si)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Kr.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Kr.multiply(t.parent.matrixWorld)),t.applyMatrix4(Kr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zr,t,Qr),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zr,ti,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),r=s(t.materials),i=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),u=s(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u)}return n.object=r,n;function s(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}ai.DefaultUp=new ir(0,1,0),ai.DefaultMatrixAutoUpdate=!0,ai.prototype.isObject3D=!0;const oi=new ir,li=new ir,ui=new ir,ci=new ir,hi=new ir,di=new ir,pi=new ir,fi=new ir,mi=new ir,gi=new ir;class yi{constructor(t=new ir,e=new ir,n=new ir){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),oi.subVectors(t,e),r.cross(oi);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){oi.subVectors(r,e),li.subVectors(n,e),ui.subVectors(t,e);const s=oi.dot(oi),a=oi.dot(li),o=oi.dot(ui),l=li.dot(li),u=li.dot(ui),c=s*l-a*a;if(0===c)return i.set(-2,-1,-1);const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return i.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,ci),ci.x>=0&&ci.y>=0&&ci.x+ci.y<=1}static getUV(t,e,n,r,i,s,a,o){return this.getBarycoord(t,e,n,r,ci),o.set(0,0),o.addScaledVector(i,ci.x),o.addScaledVector(s,ci.y),o.addScaledVector(a,ci.z),o}static isFrontFacing(t,e,n,r){return oi.subVectors(n,e),li.subVectors(t,e),oi.cross(li).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return oi.subVectors(this.c,this.b),li.subVectors(this.a,this.b),.5*oi.cross(li).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return yi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return yi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return yi.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return yi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return yi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,i=this.c;let s,a;hi.subVectors(r,n),di.subVectors(i,n),fi.subVectors(t,n);const o=hi.dot(fi),l=di.dot(fi);if(o<=0&&l<=0)return e.copy(n);mi.subVectors(t,r);const u=hi.dot(mi),c=di.dot(mi);if(u>=0&&c<=u)return e.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),e.copy(n).addScaledVector(hi,s);gi.subVectors(t,i);const d=hi.dot(gi),p=di.dot(gi);if(p>=0&&d<=p)return e.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(di,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return pi.subVectors(i,r),a=(c-u)/(c-u+(d-p)),e.copy(r).addScaledVector(pi,a);const g=1/(m+f+h);return s=f*g,a=h*g,e.copy(n).addScaledVector(hi,s).addScaledVector(di,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let xi=0;class vi extends In{constructor(){super(),Object.defineProperty(this,"id",{value:xi++}),this.uuid=Dn(),this.name="",this.type="Material",this.fog=!0,this.blending=b,this.side=f,this.vertexColors=!1,this.opacity=1,this.format=zt,this.transparent=!1,this.blendSrc=D,this.blendDst=P,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=H,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=yn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nn,this.stencilZFail=nn,this.stencilZPass=nn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===y;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==b&&(n.blending=this.blending),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==zt&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.format=t.format,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}vi.prototype.isMaterial=!0;const bi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wi={h:0,s:0,l:0},_i={h:0,s:0,l:0};function Si(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Mi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ti(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Ei{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=On(t,1),e=Pn(e,0,1),n=Pn(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=Si(i,r,t+1/3),this.g=Si(i,r,t),this.b=Si(i,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,i)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=bi[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Mi(t.r),this.g=Mi(t.g),this.b=Mi(t.b),this}copyLinearToSRGB(t){return this.r=Ti(t.r),this.g=Ti(t.g),this.b=Ti(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,r=this.b,i=Math.max(e,n,r),s=Math.min(e,n,r);let a,o;const l=(s+i)/2;if(s===i)a=0,o=0;else{const t=i-s;switch(o=l<=.5?t/(i+s):t/(2-i-s),i){case e:a=(n-r)/t+(n<r?6:0);break;case n:a=(r-e)/t+2;break;case r:a=(e-n)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(wi),wi.h+=t,wi.s+=e,wi.l+=n,this.setHSL(wi.h,wi.s,wi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(wi),t.getHSL(_i);const n=Fn(wi.h,_i.h,e),r=Fn(wi.s,_i.s,e),i=Fn(wi.l,_i.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ei.NAMES=bi,Ei.prototype.isColor=!0,Ei.prototype.r=1,Ei.prototype.g=1,Ei.prototype.b=1;class Ai extends vi{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Ei(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Ai.prototype.isMeshBasicMaterial=!0;const Ci=new ir,Ii=new qn;class ki{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=xn,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Ei),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new qn),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new ir),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new Qn),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ii.fromBufferAttribute(this,e),Ii.applyMatrix3(t),this.setXY(e,Ii.x,Ii.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ci.fromBufferAttribute(this,e),Ci.applyMatrix3(t),this.setXYZ(e,Ci.x,Ci.y,Ci.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ci.x=this.getX(e),Ci.y=this.getY(e),Ci.z=this.getZ(e),Ci.applyMatrix4(t),this.setXYZ(e,Ci.x,Ci.y,Ci.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ci.x=this.getX(e),Ci.y=this.getY(e),Ci.z=this.getZ(e),Ci.applyNormalMatrix(t),this.setXYZ(e,Ci.x,Ci.y,Ci.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ci.x=this.getX(e),Ci.y=this.getY(e),Ci.z=this.getZ(e),Ci.transformDirection(t),this.setXYZ(e,Ci.x,Ci.y,Ci.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==xn&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}ki.prototype.isBufferAttribute=!0;class Ri extends ki{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Ni extends ki{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Li extends ki{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Di extends ki{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Pi extends ki{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Oi extends ki{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Fi extends ki{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class zi extends ki{constructor(t,e,n){super(new Uint16Array(t),e,n)}}zi.prototype.isFloat16BufferAttribute=!0;class Bi extends ki{constructor(t,e,n){super(new Float32Array(t),e,n)}}class Ui extends ki{constructor(t,e,n){super(new Float64Array(t),e,n)}}let $i=0;const qi=new Pr,Vi=new ai,Hi=new ir,Wi=new or,Gi=new or,ji=new ir;class Xi extends In{constructor(){super(),Object.defineProperty(this,"id",{value:$i++}),this.uuid=Dn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Hn(t)>65535?Fi:Pi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Vn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return qi.makeRotationFromQuaternion(t),this.applyMatrix4(qi),this}rotateX(t){return qi.makeRotationX(t),this.applyMatrix4(qi),this}rotateY(t){return qi.makeRotationY(t),this.applyMatrix4(qi),this}rotateZ(t){return qi.makeRotationZ(t),this.applyMatrix4(qi),this}translate(t,e,n){return qi.makeTranslation(t,e,n),this.applyMatrix4(qi),this}scale(t,e,n){return qi.makeScale(t,e,n),this.applyMatrix4(qi),this}lookAt(t){return Vi.lookAt(t),Vi.updateMatrix(),this.applyMatrix4(Vi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hi).negate(),this.translate(Hi.x,Hi.y,Hi.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Bi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new or);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ir(-1/0,-1/0,-1/0),new ir(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const t=e[n];Wi.setFromBufferAttribute(t),this.morphTargetsRelative?(ji.addVectors(this.boundingBox.min,Wi.min),this.boundingBox.expandByPoint(ji),ji.addVectors(this.boundingBox.max,Wi.max),this.boundingBox.expandByPoint(ji)):(this.boundingBox.expandByPoint(Wi.min),this.boundingBox.expandByPoint(Wi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Er);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ir,1/0);if(t){const n=this.boundingSphere.center;if(Wi.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const n=e[t];Gi.setFromBufferAttribute(n),this.morphTargetsRelative?(ji.addVectors(Wi.min,Gi.min),Wi.expandByPoint(ji),ji.addVectors(Wi.max,Gi.max),Wi.expandByPoint(ji)):(Wi.expandByPoint(Gi.min),Wi.expandByPoint(Gi.max))}Wi.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)ji.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(ji));if(e)for(let i=0,s=e.length;i<s;i++){const s=e[i],a=this.morphTargetsRelative;for(let e=0,i=s.count;e<i;e++)ji.fromBufferAttribute(s,e),a&&(Hi.fromBufferAttribute(t,e),ji.add(Hi)),r=Math.max(r,n.distanceToSquared(ji))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,s=e.uv.array,a=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new ki(new Float32Array(4*a),4));const o=e.tangent.array,l=[],u=[];for(let T=0;T<a;T++)l[T]=new ir,u[T]=new ir;const c=new ir,h=new ir,d=new ir,p=new qn,f=new qn,m=new qn,g=new ir,y=new ir;function x(t,e,n){c.fromArray(r,3*t),h.fromArray(r,3*e),d.fromArray(r,3*n),p.fromArray(s,2*t),f.fromArray(s,2*e),m.fromArray(s,2*n),h.sub(c),d.sub(c),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),y.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),u[t].add(y),u[e].add(y),u[n].add(y))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let T=0,E=v.length;T<E;++T){const t=v[T],e=t.start;for(let r=e,i=e+t.count;r<i;r+=3)x(n[r+0],n[r+1],n[r+2])}const b=new ir,w=new ir,_=new ir,S=new ir;function M(t){_.fromArray(i,3*t),S.copy(_);const e=l[t];b.copy(e),b.sub(_.multiplyScalar(_.dot(e))).normalize(),w.crossVectors(S,e);const n=w.dot(u[t])<0?-1:1;o[4*t]=b.x,o[4*t+1]=b.y,o[4*t+2]=b.z,o[4*t+3]=n}for(let T=0,E=v.length;T<E;++T){const t=v[T],e=t.start;for(let r=e,i=e+t.count;r<i;r+=3)M(n[r+0]),M(n[r+1]),M(n[r+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new ki(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new ir,i=new ir,s=new ir,a=new ir,o=new ir,l=new ir,u=new ir,c=new ir;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,d),i.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,h=e.count;t<h;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),n.setXYZ(t+0,u.x,u.y,u.z),n.setXYZ(t+1,u.x,u.y,u.z),n.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r].array,s=t.attributes[r],a=s.array,o=s.itemSize*e,l=Math.min(a.length,i.length-o);for(let t=0,e=o;t<l;t++,e++)i[e]=a[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ji.fromBufferAttribute(t,e),ji.normalize(),t.setXYZ(e,ji.x,ji.y,ji.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,s=new n.constructor(e.length*r);let a=0,o=0;for(let l=0,u=e.length;l<u;l++){a=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*r;for(let t=0;t<r;t++)s[o++]=n[a++]}return new ki(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Xi,n=this.index.array,r=this.attributes;for(const a in r){const i=t(r[a],n);e.setAttribute(a,i)}const i=this.morphAttributes;for(const a in i){const r=[],s=i[a];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);r.push(i)}e.morphAttributes[a]=r}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const t=s[a];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const r={};let i=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];n.push(i.toJSON(t.data))}n.length>0&&(r[o]=n,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const l in r){const t=r[l];this.setAttribute(l,t.clone(e))}const i=t.morphAttributes;for(const l in i){const t=[],n=i[l];for(let r=0,i=n.length;r<i;r++)t.push(n[r].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let l=0,u=s.length;l<u;l++){const t=s[l];this.addGroup(t.start,t.count,t.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Xi.prototype.isBufferGeometry=!0;const Yi=new Pr,Ki=new Dr,Ji=new Er,Zi=new ir,Qi=new ir,ts=new ir,es=new ir,ns=new ir,rs=new ir,is=new ir,ss=new ir,as=new ir,os=new qn,ls=new qn,us=new qn,cs=new ir,hs=new ir;class ds extends ai{constructor(t=new Xi,e=new Ai){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ji.copy(n.boundingSphere),Ji.applyMatrix4(i),!1===t.ray.intersectsSphere(Ji))return;if(Yi.copy(i).invert(),Ki.copy(t.ray).applyMatrix4(Yi),null!==n.boundingBox&&!1===Ki.intersectsBox(n.boundingBox))return;let s;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,u=n.attributes.uv,c=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const p=h[n],f=r[p.materialIndex];for(let n=Math.max(p.start,d.start),r=Math.min(i.count,Math.min(p.start+p.count,d.start+d.count));n<r;n+=3){const r=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);s=ps(this,f,t,Ki,a,o,l,u,c,r,h,d),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else for(let n=Math.max(0,d.start),p=Math.min(i.count,d.start+d.count);n<p;n+=3){const h=i.getX(n),d=i.getX(n+1),p=i.getX(n+2);s=ps(this,r,t,Ki,a,o,l,u,c,h,d,p),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}else if(void 0!==a)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const i=h[n],p=r[i.materialIndex];for(let n=Math.max(i.start,d.start),r=Math.min(a.count,Math.min(i.start+i.count,d.start+d.count));n<r;n+=3)s=ps(this,p,t,Ki,a,o,l,u,c,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,e.push(s))}else for(let n=Math.max(0,d.start),p=Math.min(a.count,d.start+d.count);n<p;n+=3)s=ps(this,r,t,Ki,a,o,l,u,c,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function ps(t,e,n,r,i,s,a,o,l,u,c,h){Zi.fromBufferAttribute(i,u),Qi.fromBufferAttribute(i,c),ts.fromBufferAttribute(i,h);const d=t.morphTargetInfluences;if(s&&d){is.set(0,0,0),ss.set(0,0,0),as.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],n=s[t];0!==e&&(es.fromBufferAttribute(n,u),ns.fromBufferAttribute(n,c),rs.fromBufferAttribute(n,h),a?(is.addScaledVector(es,e),ss.addScaledVector(ns,e),as.addScaledVector(rs,e)):(is.addScaledVector(es.sub(Zi),e),ss.addScaledVector(ns.sub(Qi),e),as.addScaledVector(rs.sub(ts),e)))}Zi.add(is),Qi.add(ss),ts.add(as)}t.isSkinnedMesh&&(t.boneTransform(u,Zi),t.boneTransform(c,Qi),t.boneTransform(h,ts));const p=function(t,e,n,r,i,s,a,o){let l;if(l=e.side===m?r.intersectTriangle(a,s,i,!0,o):r.intersectTriangle(i,s,a,e.side!==g,o),null===l)return null;hs.copy(o),hs.applyMatrix4(t.matrixWorld);const u=n.ray.origin.distanceTo(hs);return u<n.near||u>n.far?null:{distance:u,point:hs.clone(),object:t}}(t,e,n,r,Zi,Qi,ts,cs);if(p){o&&(os.fromBufferAttribute(o,u),ls.fromBufferAttribute(o,c),us.fromBufferAttribute(o,h),p.uv=yi.getUV(cs,Zi,Qi,ts,os,ls,us,new qn)),l&&(os.fromBufferAttribute(l,u),ls.fromBufferAttribute(l,c),us.fromBufferAttribute(l,h),p.uv2=yi.getUV(cs,Zi,Qi,ts,os,ls,us,new qn));const t={a:u,b:c,c:h,normal:new ir,materialIndex:0};yi.getNormal(Zi,Qi,ts,t.normal),p.face=t}return p}ds.prototype.isMesh=!0;class fs extends Xi{constructor(t=1,e=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const a=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(t,e,n,r,i,s,p,f,m,g,y){const x=s/m,v=p/g,b=s/2,w=p/2,_=f/2,S=m+1,M=g+1;let T=0,E=0;const A=new ir;for(let a=0;a<M;a++){const s=a*v-w;for(let o=0;o<S;o++){const h=o*x-b;A[t]=h*r,A[e]=s*i,A[n]=_,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,u.push(A.x,A.y,A.z),c.push(o/m),c.push(1-a/g),T+=1}}for(let a=0;a<g;a++)for(let t=0;t<m;t++){const e=h+t+S*a,n=h+t+S*(a+1),r=h+(t+1)+S*(a+1),i=h+(t+1)+S*a;o.push(e,n,i),o.push(n,r,i),E+=6}a.addGroup(d,E,y),d+=E,h+=T}p("z","y","x",-1,-1,n,e,t,s,i,0),p("z","y","x",1,-1,n,e,-t,s,i,1),p("x","z","y",1,1,t,n,e,r,s,2),p("x","z","y",1,-1,t,n,-e,r,s,3),p("x","y","z",1,-1,t,e,n,r,i,4),p("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Bi(l,3)),this.setAttribute("normal",new Bi(u,3)),this.setAttribute("uv",new Bi(c,2))}static fromJSON(t){return new fs(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ms(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function gs(t){const e={};for(let n=0;n<t.length;n++){const r=ms(t[n]);for(const t in r)e[t]=r[t]}return e}const ys={clone:ms,merge:gs};class xs extends vi{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ms(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r].value;n&&n.isTexture?e.uniforms[r]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[r]={type:"m4",value:n.toArray()}:e.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)!0===this.extensions[r]&&(n[r]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}xs.prototype.isShaderMaterial=!0;class vs extends ai{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Pr,this.projectionMatrix=new Pr,this.projectionMatrixInverse=new Pr}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}vs.prototype.isCamera=!0;class bs extends vs{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Ln*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Nn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Ln*Math.atan(Math.tan(.5*Nn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Nn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;i+=s.offsetX*r/t,e-=s.offsetY*n/a,r*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(i+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}bs.prototype.isPerspectiveCamera=!0;const ws=90;class _s extends ai{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new bs(ws,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ir(1,0,0)),this.add(r);const i=new bs(ws,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new ir(-1,0,0)),this.add(i);const s=new bs(ws,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new ir(0,1,0)),this.add(s);const a=new bs(ws,1,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new ir(0,-1,0)),this.add(a);const o=new bs(ws,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new ir(0,0,1)),this.add(o);const l=new bs(ws,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ir(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,s,a,o,l]=this.children,u=t.xr.enabled,c=t.getRenderTarget();t.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(c),t.xr.enabled=u}}class Ss extends Jn{constructor(t,e,n,r,i,s,a,o,l,u){super(t=void 0!==t?t:[],e=void 0!==e?e:st,n,r,i,s,a,o,l,u),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ss.prototype.isCubeTexture=!0;class Ms extends tr{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Ss(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:vt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=zt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new fs(5,5,5),a=new xs({name:"CubemapFromEquirect",uniforms:ms(n),vertexShader:r,fragmentShader:i,side:m,blending:v});a.uniforms.tEquirect.value=e;const o=new ds(s,a),l=e.minFilter;return e.minFilter===_t&&(e.minFilter=vt),new _s(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,r);t.setRenderTarget(i)}}Ms.prototype.isWebGLCubeRenderTarget=!0;const Ts=new ir,Es=new ir,As=new Vn;class Cs{constructor(t=new ir(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=Ts.subVectors(n,e).cross(Es.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Ts),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||As.getNormalMatrix(t),r=this.coplanarPoint(Ts).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Cs.prototype.isPlane=!0;const Is=new Er,ks=new ir;class Rs{constructor(t=new Cs,e=new Cs,n=new Cs,r=new Cs,i=new Cs,s=new Cs){this.planes=[t,e,n,r,i,s]}set(t,e,n,r,i,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],s=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],x=n[15];return e[0].setComponents(a-r,c-o,f-h,x-m).normalize(),e[1].setComponents(a+r,c+o,f+h,x+m).normalize(),e[2].setComponents(a+i,c+l,f+d,x+g).normalize(),e[3].setComponents(a-i,c-l,f-d,x-g).normalize(),e[4].setComponents(a-s,c-u,f-p,x-y).normalize(),e[5].setComponents(a+s,c+u,f+p,x+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Is.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Is)}intersectsSprite(t){return Is.center.set(0,0,0),Is.radius=.7071067811865476,Is.applyMatrix4(t.matrixWorld),this.intersectsSphere(Is)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++)if(e[i].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(ks.x=r.normal.x>0?t.max.x:t.min.x,ks.y=r.normal.y>0?t.max.y:t.min.y,ks.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(ks)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Ns(){let t=null,e=!1,n=null,r=null;function i(e,s){n(e,s),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Ls(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,i){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=r.get(e);void 0===s?r.set(e,function(e,r){const i=e.array,s=e.usage,a=t.createBuffer();t.bindBuffer(r,a),t.bufferData(r,i,s),e.onUploadCallback();let o=5126;return i instanceof Float32Array?o=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:i instanceof Int16Array?o=5122:i instanceof Uint32Array?o=5125:i instanceof Int32Array?o=5124:i instanceof Int8Array?o=5120:(i instanceof Uint8Array||i instanceof Uint8ClampedArray)&&(o=5121),{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,i)):s.version<e.version&&(function(e,r,i){const s=r.array,a=r.updateRange;t.bindBuffer(i,e),-1===a.count?t.bufferSubData(i,0,s):(n?t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(s.buffer,e,i),s.version=e.version)}}}class Ds extends Xi{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,s=e/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=t/a,h=e/o,d=[],p=[],f=[],m=[];for(let g=0;g<u;g++){const t=g*h-s;for(let e=0;e<l;e++){const n=e*c-i;p.push(n,-t,0),f.push(0,0,1),m.push(e/a),m.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<a;t++){const e=t+l*g,n=t+l*(g+1),r=t+1+l*(g+1),i=t+1+l*g;d.push(e,n,i),d.push(n,r,i)}this.setIndex(d),this.setAttribute("position",new Bi(p,3)),this.setAttribute("normal",new Bi(f,3)),this.setAttribute("uv",new Bi(m,2))}static fromJSON(t){return new Ds(t.width,t.height,t.widthSegments,t.heightSegments)}}const Ps={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\treturn texture2D( envMap, uv ).rgb;\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Os={common:{diffuse:{value:new Ei(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Vn},uv2Transform:{value:new Vn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new qn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ei(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ei(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Vn}},sprite:{diffuse:{value:new Ei(16777215)},opacity:{value:1},center:{value:new qn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Vn}}},Fs={basic:{uniforms:gs([Os.common,Os.specularmap,Os.envmap,Os.aomap,Os.lightmap,Os.fog]),vertexShader:Ps.meshbasic_vert,fragmentShader:Ps.meshbasic_frag},lambert:{uniforms:gs([Os.common,Os.specularmap,Os.envmap,Os.aomap,Os.lightmap,Os.emissivemap,Os.fog,Os.lights,{emissive:{value:new Ei(0)}}]),vertexShader:Ps.meshlambert_vert,fragmentShader:Ps.meshlambert_frag},phong:{uniforms:gs([Os.common,Os.specularmap,Os.envmap,Os.aomap,Os.lightmap,Os.emissivemap,Os.bumpmap,Os.normalmap,Os.displacementmap,Os.fog,Os.lights,{emissive:{value:new Ei(0)},specular:{value:new Ei(1118481)},shininess:{value:30}}]),vertexShader:Ps.meshphong_vert,fragmentShader:Ps.meshphong_frag},standard:{uniforms:gs([Os.common,Os.envmap,Os.aomap,Os.lightmap,Os.emissivemap,Os.bumpmap,Os.normalmap,Os.displacementmap,Os.roughnessmap,Os.metalnessmap,Os.fog,Os.lights,{emissive:{value:new Ei(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ps.meshphysical_vert,fragmentShader:Ps.meshphysical_frag},toon:{uniforms:gs([Os.common,Os.aomap,Os.lightmap,Os.emissivemap,Os.bumpmap,Os.normalmap,Os.displacementmap,Os.gradientmap,Os.fog,Os.lights,{emissive:{value:new Ei(0)}}]),vertexShader:Ps.meshtoon_vert,fragmentShader:Ps.meshtoon_frag},matcap:{uniforms:gs([Os.common,Os.bumpmap,Os.normalmap,Os.displacementmap,Os.fog,{matcap:{value:null}}]),vertexShader:Ps.meshmatcap_vert,fragmentShader:Ps.meshmatcap_frag},points:{uniforms:gs([Os.points,Os.fog]),vertexShader:Ps.points_vert,fragmentShader:Ps.points_frag},dashed:{uniforms:gs([Os.common,Os.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ps.linedashed_vert,fragmentShader:Ps.linedashed_frag},depth:{uniforms:gs([Os.common,Os.displacementmap]),vertexShader:Ps.depth_vert,fragmentShader:Ps.depth_frag},normal:{uniforms:gs([Os.common,Os.bumpmap,Os.normalmap,Os.displacementmap,{opacity:{value:1}}]),vertexShader:Ps.meshnormal_vert,fragmentShader:Ps.meshnormal_frag},sprite:{uniforms:gs([Os.sprite,Os.fog]),vertexShader:Ps.sprite_vert,fragmentShader:Ps.sprite_frag},background:{uniforms:{uvTransform:{value:new Vn},t2D:{value:null}},vertexShader:Ps.background_vert,fragmentShader:Ps.background_frag},cube:{uniforms:gs([Os.envmap,{opacity:{value:1}}]),vertexShader:Ps.cube_vert,fragmentShader:Ps.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ps.equirect_vert,fragmentShader:Ps.equirect_frag},distanceRGBA:{uniforms:gs([Os.common,Os.displacementmap,{referencePosition:{value:new ir},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ps.distanceRGBA_vert,fragmentShader:Ps.distanceRGBA_frag},shadow:{uniforms:gs([Os.lights,Os.fog,{color:{value:new Ei(0)},opacity:{value:1}}]),vertexShader:Ps.shadow_vert,fragmentShader:Ps.shadow_frag}};function zs(t,e,n,r,i){const s=new Ei(0);let a,o,l=0,u=null,c=0,h=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),l=e,d(s,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,d(s,l)},render:function(n,i){let p=!1,g=!0===i.isScene?i.background:null;g&&g.isTexture&&(g=e.get(g));const y=t.xr,x=y.getSession&&y.getSession();x&&"additive"===x.environmentBlendMode&&(g=null),null===g?d(s,l):g&&g.isColor&&(d(g,1),p=!0),(t.autoClear||p)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&(g.isCubeTexture||g.mapping===ut)?(void 0===o&&(o=new ds(new fs(1,1,1),new xs({name:"BackgroundCubeMaterial",uniforms:ms(Fs.cube.uniforms),vertexShader:Fs.cube.vertexShader,fragmentShader:Fs.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(o)),o.material.uniforms.envMap.value=g,o.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,u===g&&c===g.version&&h===t.toneMapping||(o.material.needsUpdate=!0,u=g,c=g.version,h=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):g&&g.isTexture&&(void 0===a&&(a=new ds(new Ds(2,2),new xs({name:"BackgroundMaterial",uniforms:ms(Fs.background.uniforms),vertexShader:Fs.background.vertexShader,fragmentShader:Fs.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(a)),a.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),a.material.uniforms.uvTransform.value.copy(g.matrix),u===g&&c===g.version&&h===t.toneMapping||(a.material.needsUpdate=!0,u=g,c=g.version,h=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}function Bs(t,e,n,r){const i=t.getParameter(34921),s=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||null!==s,o={},l=d(null);let u=l;function c(e){return r.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function h(e){return r.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],r=[];for(let s=0;s<i;s++)e[s]=0,n[s]=0,r[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function p(){const t=u.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,i){const s=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;s[n]=1,0===a[n]&&(t.enableVertexAttribArray(n),a[n]=1),o[n]!==i&&((r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i)}function g(){const e=u.newAttributes,n=u.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function y(e,n,i,s,a,o){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,s,a,o):t.vertexAttribIPointer(e,n,i,a,o)}function x(){v(),u!==l&&(u=l,c(u.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,h,x,v){let b=!1;if(a){const e=function(e,n,i){const a=!0===i.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[a];return void 0===c&&(c=d(r.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),u[a]=c),c}(x,h,l);u!==e&&(u=e,c(u.object)),b=function(t,e){const n=u.attributes,r=t.attributes;let i=0;for(const s in r){const t=n[s],e=r[s];if(void 0===t)return!0;if(t.attribute!==e)return!0;if(t.data!==e.data)return!0;i++}return u.attributesNum!==i||u.index!==e}(x,v),b&&function(t,e){const n={},r=t.attributes;let i=0;for(const s in r){const t=r[s],e={};e.attribute=t,t.data&&(e.data=t.data),n[s]=e,i++}u.attributes=n,u.attributesNum=i,u.index=e}(x,v)}else{const t=!0===l.wireframe;u.geometry===x.id&&u.program===h.id&&u.wireframe===t||(u.geometry=x.id,u.program=h.id,u.wireframe=t,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==v&&n.update(v,34963),b&&(function(i,s,a,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const l=o.attributes,u=a.getAttributes(),c=s.defaultAttributeValues;for(const e in u){const r=u[e];if(r.location>=0){let s=l[e];if(void 0===s&&("instanceMatrix"===e&&i.instanceMatrix&&(s=i.instanceMatrix),"instanceColor"===e&&i.instanceColor&&(s=i.instanceColor)),void 0!==s){const e=s.normalized,a=s.itemSize,l=n.get(s);if(void 0===l)continue;const u=l.buffer,c=l.type,h=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,l=n.stride,d=s.offset;if(n&&n.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)m(r.location+t,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<r.locationSize;t++)f(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)y(r.location+t,a/r.locationSize,c,e,l*h,(d+a/r.locationSize*t)*h)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)m(r.location+t,s.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<r.locationSize;t++)f(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)y(r.location+t,a/r.locationSize,c,e,a*h,a/r.locationSize*t*h)}}else if(void 0!==c){const n=c[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}g()}(i,l,h,x),null!==v&&t.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)h(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)h(t[e].object),delete t[e];delete e[n]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)h(r[t].object),delete r[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Us(t,e,n,r){const i=r.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,r){t.drawArrays(s,e,r),n.update(r,s,1)},this.renderInstances=function(r,a,o){if(0===o)return;let l,u;if(i)l=t,u="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](s,r,a,o),n.update(a,s,o)}}function $s(t,e,n){let r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:"highp";const o=i(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=s||e.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),f=t.getParameter(34921),m=t.getParameter(36347),g=t.getParameter(36348),y=t.getParameter(36349),x=h>0,v=s||e.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:a,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:s?t.getParameter(36183):0}}function qs(t){const e=this;let n=null,r=0,i=!1,s=!1;const a=new Cs,o=new Vn,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(t,n,r,i){const s=null!==t?t.length:0;let u=null;if(0!==s){if(u=l.value,!0!==i||null===u){const e=r+4*s,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<e)&&(u=new Float32Array(e));for(let n=0,l=r;n!==s;++n,l+=4)a.copy(t[n]).applyMatrix4(i,o),a.normal.toArray(u,l),u[l+3]=a.constant}l.value=u,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const a=0!==t.length||e||0!==r||i;return i=e,n=c(t,s,0),r=t.length,a},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,u()},this.setState=function(e,a,o){const h=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!i||null===h||0===h.length||s&&!p)s?c(null):u();else{const t=s?0:r,e=4*t;let i=f.clippingState||null;l.value=i,i=c(h,a,e,o);for(let r=0;r!==e;++r)i[r]=n[r];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Vs(t){let e=new WeakMap;function n(t,e){return e===ot?t.mapping=st:e===lt&&(t.mapping=at),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const s=i.mapping;if(s===ot||s===lt){if(e.has(i))return n(e.get(i).texture,i.mapping);{const s=i.image;if(s&&s.height>0){const a=t.getRenderTarget(),o=new Ms(s.height/2);return o.fromEquirectangularTexture(t,i),e.set(i,o),t.setRenderTarget(a),i.addEventListener("dispose",r),n(o.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}Fs.physical={uniforms:gs([Fs.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new qn(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Ei(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new qn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ei(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new Ei(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ps.meshphysical_vert,fragmentShader:Ps.meshphysical_frag};class Hs extends vs{constructor(t=-1,e=1,n=1,r=-1,i=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,s=n+t,a=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,s=i+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(i,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Hs.prototype.isOrthographicCamera=!0;class Ws extends xs{constructor(t){super(t),this.type="RawShaderMaterial"}}Ws.prototype.isRawShaderMaterial=!0;const Gs=Math.pow(2,8),js=[.125,.215,.35,.446,.526,.582],Xs=5+js.length,Ys={[Ye]:0,[Ke]:1},Ks=new Hs,{_lodPlanes:Js,_sizeLods:Zs,_sigmas:Qs}=aa(),ta=new Ei;let ea=null;const na=(1+Math.sqrt(5))/2,ra=1/na,ia=[new ir(1,1,1),new ir(-1,1,1),new ir(1,1,-1),new ir(-1,1,-1),new ir(0,na,ra),new ir(0,na,-ra),new ir(ra,0,na),new ir(-ra,0,na),new ir(na,ra,0),new ir(-na,ra,0)];class sa{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(20),n=new ir(0,1,0);return new Ws({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){ea=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=ca(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=ua(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Js.length;t++)Js[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(ea),t.scissorTest=!1,la(t,0,0,t.width,t.height)}_fromTexture(t){ea=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:vt,minFilter:vt,generateMipmaps:!1,type:Rt,format:zt,encoding:Ye,depthBuffer:!1},n=oa(e);return n.depthBuffer=!t,this._pingPongRenderTarget=oa(e),n}_compileMaterial(t){const e=new ds(Js[0],t);this._renderer.compile(e,Ks)}_sceneToCubeUV(t,e,n,r){const i=new bs(90,1,e,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(ta),o.toneMapping=Z,o.autoClear=!1;const c=new Ai({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),h=new ds(new fs,c);let d=!1;const p=t.background;p?p.isColor&&(c.color.copy(p),t.background=null,d=!0):(c.color.copy(ta),d=!0);for(let f=0;f<6;f++){const e=f%3;0==e?(i.up.set(0,s[f],0),i.lookAt(a[f],0,0)):1==e?(i.up.set(0,0,s[f]),i.lookAt(0,a[f],0)):(i.up.set(0,s[f],0),i.lookAt(0,0,a[f])),la(r,e*Gs,f>2?Gs:0,Gs,Gs),o.setRenderTarget(r),d&&o.render(h,i),o.render(t,i)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=u,o.autoClear=l,t.background=p}_setEncoding(t,e){!0===this._renderer.capabilities.isWebGL2&&e.format===zt&&e.type===Mt&&e.encoding===Ke?t.value=Ys[Ye]:t.value=Ys[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===st||t.mapping===at;r?null==this._cubemapShader&&(this._cubemapShader=ca()):null==this._equirectShader&&(this._equirectShader=ua());const i=r?this._cubemapShader:this._equirectShader,s=new ds(Js[0],i),a=i.uniforms;a.envMap.value=t,r||a.texelSize.value.set(1/t.image.width,1/t.image.height),this._setEncoding(a.inputEncoding,t),la(e,0,0,3*Gs,2*Gs),n.setRenderTarget(e),n.render(s,Ks)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let r=1;r<Xs;r++){const e=Math.sqrt(Qs[r]*Qs[r]-Qs[r-1]*Qs[r-1]),n=ia[(r-1)%ia.length];this._blur(t,r-1,r,e,n)}e.autoClear=n}_blur(t,e,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,r,"latitudinal",i),this._halfBlur(s,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new ds(Js[r],l),c=l.uniforms,h=Zs[n]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let x=0;x<20;++x){const t=x/p,e=Math.exp(-t*t/2);m.push(e),0==x?g+=e:x<f&&(g+=2*e)}for(let x=0;x<m.length;x++)m[x]=m[x]/g;c.envMap.value=t.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a),c.dTheta.value=d,c.mipInt.value=8-n;const y=Zs[r];la(e,3*Math.max(0,Gs-2*y),(0===r?0:2*Gs)+2*y*(r>4?r-8+4:0),3*y,2*y),o.setRenderTarget(e),o.render(u,Ks)}}function aa(){const t=[],e=[],n=[];let r=8;for(let i=0;i<Xs;i++){const s=Math.pow(2,r);e.push(s);let a=1/s;i>4?a=js[i-8+4-1]:0==i&&(a=0),n.push(a);const o=1/(s-1),l=-o/2,u=1+o/2,c=[l,l,u,l,u,u,l,l,u,u,l,u],h=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*h),y=new Float32Array(f*d*h),x=new Float32Array(m*d*h);for(let t=0;t<h;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(r,p*d*t),y.set(c,f*d*t);const i=[t,t,t,t,t,t];x.set(i,m*d*t)}const v=new Xi;v.setAttribute("position",new ki(g,p)),v.setAttribute("uv",new ki(y,f)),v.setAttribute("faceIndex",new ki(x,m)),t.push(v),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function oa(t){const e=new tr(3*Gs,3*Gs,t);return e.texture.mapping=ut,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function la(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function ua(){const t=new qn(1,1);return new Ws({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Ys[Ye]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function ca(){return new Ws({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Ys[Ye]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );\n\n\t\t\t}\n\t\t",blending:v,depthTest:!1,depthWrite:!1})}function ha(t){let e=new WeakMap,n=null;function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const s=i.mapping,a=s===ot||s===lt,o=s===st||s===at;if(a||o){if(e.has(i))return e.get(i).texture;{const s=i.image;if(a&&s&&s.height>0||o&&s&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(s)){const s=t.getRenderTarget();null===n&&(n=new sa(t));const o=a?n.fromEquirectangular(i):n.fromCubemap(i);return e.set(i,o),t.setRenderTarget(s),i.addEventListener("dispose",r),o.texture}return null}}}return i},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function da(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function pa(t,e,n,r){const i={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);o.removeEventListener("dispose",a),delete i[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],r=t.index,i=t.attributes.position;let a=0;if(null!==r){const t=r.array;a=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],s=t[e+2];n.push(r,i,i,s,s,r)}}else{const t=i.array;a=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const o=new(Hn(n)>65535?Fi:Pi)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===i[e.id]||(e.addEventListener("dispose",a),i[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const i in n)e.update(n[i],34962);const r=t.morphAttributes;for(const i in r){const t=r[i];for(let n=0,r=t.length;n<r;n++)e.update(t[n],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function fa(t,e,n,r){const i=r.isWebGL2;let s,a,o;this.setMode=function(t){s=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,r){t.drawElements(s,r,a,e*o),n.update(r,s,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(i)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,l,a,r*o,u),n.update(l,s,u)}}function ma(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class ga extends Jn{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function ya(t,e){return t[0]-e[0]}function xa(t,e){return Math.abs(e[1])-Math.abs(t[1])}function va(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function ba(t,e,n){const r={},i=new Float32Array(8),s=new WeakMap,a=new ir,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,u,c,h){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const r=u.morphAttributes.position.length;let i=s.get(u);if(void 0===i||i.count!==r){void 0!==i&&i.texture.dispose();const t=void 0!==u.morphAttributes.normal,n=u.morphAttributes.position,o=u.morphAttributes.normal||[],l=!0===t?2:1;let c=u.attributes.position.count*l,h=1;c>e.maxTextureSize&&(h=Math.ceil(c/e.maxTextureSize),c=e.maxTextureSize);const d=new Float32Array(c*h*4*r),p=new ga(d,c,h,r);p.format=zt,p.type=kt,p.needsUpdate=!0;const f=4*l;for(let e=0;e<r;e++){const r=n[e],i=o[e],s=c*h*4*e;for(let e=0;e<r.count;e++){a.fromBufferAttribute(r,e),!0===r.normalized&&va(a,r);const n=e*f;d[s+n+0]=a.x,d[s+n+1]=a.y,d[s+n+2]=a.z,d[s+n+3]=0,!0===t&&(a.fromBufferAttribute(i,e),!0===i.normalized&&va(a,i),d[s+n+4]=a.x,d[s+n+5]=a.y,d[s+n+6]=a.z,d[s+n+7]=0)}}i={count:r,texture:p,size:new qn(c,h)},s.set(u,i)}let o=0;for(let t=0;t<d.length;t++)o+=d[t];const l=u.morphTargetsRelative?1:1-o;h.getUniforms().setValue(t,"morphTargetBaseInfluence",l),h.getUniforms().setValue(t,"morphTargetInfluences",d),h.getUniforms().setValue(t,"morphTargetsTexture",i.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",i.size)}else{const e=void 0===d?0:d.length;let n=r[u.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];r[u.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=d[t]}n.sort(xa);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(ya);const s=u.morphAttributes.position,a=u.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],r=e[1];n!==Number.MAX_SAFE_INTEGER&&r?(s&&u.getAttribute("morphTarget"+t)!==s[n]&&u.setAttribute("morphTarget"+t,s[n]),a&&u.getAttribute("morphNormal"+t)!==a[n]&&u.setAttribute("morphNormal"+t,a[n]),i[t]=r,l+=r):(s&&!0===u.hasAttribute("morphTarget"+t)&&u.deleteAttribute("morphTarget"+t),a&&!0===u.hasAttribute("morphNormal"+t)&&u.deleteAttribute("morphNormal"+t),i[t]=0)}const c=u.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",c),h.getUniforms().setValue(t,"morphTargetInfluences",i)}}}}function wa(t,e,n,r){let i=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const a=r.render.frame,o=t.geometry,l=e.get(t,o);return i.get(l)!==a&&(e.update(l),i.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",s)&&t.addEventListener("dispose",s),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}ga.prototype.isDataTexture2DArray=!0;class _a extends Jn{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}_a.prototype.isDataTexture3D=!0;const Sa=new Jn,Ma=new ga,Ta=new _a,Ea=new Ss,Aa=[],Ca=[],Ia=new Float32Array(16),ka=new Float32Array(9),Ra=new Float32Array(4);function Na(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let s=Aa[i];if(void 0===s&&(s=new Float32Array(i),Aa[i]=s),0!==e){r.toArray(s,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(s,i)}return s}function La(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Da(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function Pa(t,e){let n=Ca[e];void 0===n&&(n=new Int32Array(e),Ca[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function Oa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Fa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(La(n,e))return;t.uniform2fv(this.addr,e),Da(n,e)}}function za(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(La(n,e))return;t.uniform3fv(this.addr,e),Da(n,e)}}function Ba(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(La(n,e))return;t.uniform4fv(this.addr,e),Da(n,e)}}function Ua(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(La(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Da(n,e)}else{if(La(n,r))return;Ra.set(r),t.uniformMatrix2fv(this.addr,!1,Ra),Da(n,r)}}function $a(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(La(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Da(n,e)}else{if(La(n,r))return;ka.set(r),t.uniformMatrix3fv(this.addr,!1,ka),Da(n,r)}}function qa(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(La(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Da(n,e)}else{if(La(n,r))return;Ia.set(r),t.uniformMatrix4fv(this.addr,!1,Ia),Da(n,r)}}function Va(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ha(t,e){const n=this.cache;La(n,e)||(t.uniform2iv(this.addr,e),Da(n,e))}function Wa(t,e){const n=this.cache;La(n,e)||(t.uniform3iv(this.addr,e),Da(n,e))}function Ga(t,e){const n=this.cache;La(n,e)||(t.uniform4iv(this.addr,e),Da(n,e))}function ja(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Xa(t,e){const n=this.cache;La(n,e)||(t.uniform2uiv(this.addr,e),Da(n,e))}function Ya(t,e){const n=this.cache;La(n,e)||(t.uniform3uiv(this.addr,e),Da(n,e))}function Ka(t,e){const n=this.cache;La(n,e)||(t.uniform4uiv(this.addr,e),Da(n,e))}function Ja(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||Sa,i)}function Za(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||Ta,i)}function Qa(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||Ea,i)}function to(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||Ma,i)}function eo(t,e){t.uniform1fv(this.addr,e)}function no(t,e){const n=Na(e,this.size,2);t.uniform2fv(this.addr,n)}function ro(t,e){const n=Na(e,this.size,3);t.uniform3fv(this.addr,n)}function io(t,e){const n=Na(e,this.size,4);t.uniform4fv(this.addr,n)}function so(t,e){const n=Na(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function ao(t,e){const n=Na(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function oo(t,e){const n=Na(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function lo(t,e){t.uniform1iv(this.addr,e)}function uo(t,e){t.uniform2iv(this.addr,e)}function co(t,e){t.uniform3iv(this.addr,e)}function ho(t,e){t.uniform4iv(this.addr,e)}function po(t,e){t.uniform1uiv(this.addr,e)}function fo(t,e){t.uniform2uiv(this.addr,e)}function mo(t,e){t.uniform3uiv(this.addr,e)}function go(t,e){t.uniform4uiv(this.addr,e)}function yo(t,e,n){const r=e.length,i=Pa(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.safeSetTexture2D(e[s]||Sa,i[s])}function xo(t,e,n){const r=e.length,i=Pa(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTexture3D(e[s]||Ta,i[s])}function vo(t,e,n){const r=e.length,i=Pa(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.safeSetTextureCube(e[s]||Ea,i[s])}function bo(t,e,n){const r=e.length,i=Pa(n,r);t.uniform1iv(this.addr,i);for(let s=0;s!==r;++s)n.setTexture2DArray(e[s]||Ma,i[s])}function wo(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Oa;case 35664:return Fa;case 35665:return za;case 35666:return Ba;case 35674:return Ua;case 35675:return $a;case 35676:return qa;case 5124:case 35670:return Va;case 35667:case 35671:return Ha;case 35668:case 35672:return Wa;case 35669:case 35673:return Ga;case 5125:return ja;case 36294:return Xa;case 36295:return Ya;case 36296:return Ka;case 35678:case 36198:case 36298:case 36306:case 35682:return Ja;case 35679:case 36299:case 36307:return Za;case 35680:case 36300:case 36308:case 36293:return Qa;case 36289:case 36303:case 36311:case 36292:return to}}(e.type)}function _o(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return eo;case 35664:return no;case 35665:return ro;case 35666:return io;case 35674:return so;case 35675:return ao;case 35676:return oo;case 5124:case 35670:return lo;case 35667:case 35671:return uo;case 35668:case 35672:return co;case 35669:case 35673:return ho;case 5125:return po;case 36294:return fo;case 36295:return mo;case 36296:return go;case 35678:case 36198:case 36298:case 36306:case 35682:return yo;case 35679:case 36299:case 36307:return xo;case 35680:case 36300:case 36308:case 36293:return vo;case 36289:case 36303:case 36311:case 36292:return bo}}(e.type)}function So(t){this.id=t,this.seq=[],this.map={}}_o.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Da(e,t)},So.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(t,e[s.id],n)}};const Mo=/(\w+)(\])?(\[|\.)?/g;function To(t,e){t.seq.push(e),t.map[e.id]=e}function Eo(t,e,n){const r=t.name,i=r.length;for(Mo.lastIndex=0;;){const s=Mo.exec(r),a=Mo.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===i){To(n,void 0===u?new wo(o,t,e):new _o(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new So(o),To(n,t)),n=t}}}function Ao(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);Eo(n,t.getUniformLocation(e,n.name),this)}}function Co(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}Ao.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},Ao.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},Ao.upload=function(t,e,n,r){for(let i=0,s=e.length;i!==s;++i){const s=e[i],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,r)}},Ao.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let Io=0;function ko(t){switch(t){case Ye:return["Linear","( value )"];case Ke:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Ro(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":n.toUpperCase()+"\n\n"+i+"\n\n"+function(t){const e=t.split("\n");for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}(t.getShaderSource(e))}function No(t,e){const n=ko(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Lo(t,e){const n=ko(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Do(t,e){let n;switch(e){case Q:n="Linear";break;case tt:n="Reinhard";break;case et:n="OptimizedCineon";break;case nt:n="ACESFilmic";break;case rt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Po(t){return""!==t}function Oo(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fo(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const zo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bo(t){return t.replace(zo,Uo)}function Uo(t,e){const n=Ps[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Bo(n)}const $o=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,qo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vo(t){return t.replace(qo,Wo).replace($o,Ho)}function Ho(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Wo(0,e,n,r)}function Wo(t,e,n,r){let i="";for(let s=parseInt(e);s<parseInt(n);s++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Go(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function jo(t,e,n,r){const i=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===h?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===d?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===p&&(e="SHADOWMAP_TYPE_VSM"),e}(n),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case st:case at:e="ENVMAP_TYPE_CUBE";break;case ut:case ct:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),c=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case at:case ct:e="ENVMAP_MODE_REFRACTION"}return e}(n),f=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Y:e="ENVMAP_BLENDING_MULTIPLY";break;case K:e="ENVMAP_BLENDING_MIX";break;case J:e="ENVMAP_BLENDING_ADD"}return e}(n),m=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Po).join("\n")}(n),g=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(s),y=i.createProgram();let x,v,b=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(x=[g].filter(Po).join("\n"),x.length>0&&(x+="\n"),v=[m,g].filter(Po).join("\n"),v.length>0&&(v+="\n")):(x=[Go(n),"#define SHADER_NAME "+n.shaderName,g,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Po).join("\n"),v=[m,Go(n),"#define SHADER_NAME "+n.shaderName,g,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Z?"#define TONE_MAPPING":"",n.toneMapping!==Z?Ps.tonemapping_pars_fragment:"",n.toneMapping!==Z?Do("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===Ft?"#define OPAQUE":"",Ps.encodings_pars_fragment,n.map?No("mapTexelToLinear",n.mapEncoding):"",n.matcap?No("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?No("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?No("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularColorMap?No("specularColorMapTexelToLinear",n.specularColorMapEncoding):"",n.sheenColorMap?No("sheenColorMapTexelToLinear",n.sheenColorMapEncoding):"",n.lightMap?No("lightMapTexelToLinear",n.lightMapEncoding):"",Lo("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Po).join("\n")),a=Bo(a),a=Oo(a,n),a=Fo(a,n),o=Bo(o),o=Oo(o,n),o=Fo(o,n),a=Vo(a),o=Vo(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(b="#version 300 es\n",x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+x,v=["#define varying in",n.glslVersion===Cn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Cn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const w=b+v+o,_=Co(i,35633,b+x+a),S=Co(i,35632,w);if(i.attachShader(y,_),i.attachShader(y,S),void 0!==n.index0AttributeName?i.bindAttribLocation(y,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(y).trim(),e=i.getShaderInfoLog(_).trim(),n=i.getShaderInfoLog(S).trim();let r=!0,s=!0;if(!1===i.getProgramParameter(y,35714)){r=!1;const e=Ro(i,_,"vertex"),n=Ro(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(s=!1);s&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:x},fragmentShader:{log:n,prefix:v}})}let M,T;return i.deleteShader(_),i.deleteShader(S),this.getUniforms=function(){return void 0===M&&(M=new Ao(i,y)),M},this.getAttributes=function(){return void 0===T&&(T=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),s=r.name;let a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[s]={type:r.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(i,y)),T},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=Io++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=_,this.fragmentShader=S,this}let Xo=0;class Yo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const n=new Ko;e.set(t,n)}return e.get(t)}}class Ko{constructor(){this.id=Xo++,this.usedTimes=0}}function Jo(t,e,n,r,i,s,a){const o=new Gr,l=new Yo,u=[],c=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,f=i.vertexTextures;let y=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Ye,c&&t&&t.isTexture&&t.format===zt&&t.type===Mt&&t.encoding===Ke&&(e=Ye),e}return{getParameters:function(s,o,u,b,w){const _=b.fog,S=s.isMeshStandardMaterial?b.environment:null,M=(s.isMeshStandardMaterial?n:e).get(s.envMap||S),T=x[s.type],E=w.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(d)return 1024;{const t=p,n=Math.floor((t-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}}(w):0;let A,C,I,k;if(null!==s.precision&&(y=i.getMaxPrecision(s.precision),y!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",y,"instead.")),T){const t=Fs[T];A=t.vertexShader,C=t.fragmentShader}else A=s.vertexShader,C=s.fragmentShader,l.update(s),I=l.getVertexShaderID(s),k=l.getFragmentShaderID(s);const R=t.getRenderTarget(),N=s.alphaTest>0,L=s.clearcoat>0;return{isWebGL2:c,shaderID:T,shaderName:s.type,vertexShader:A,fragmentShader:C,defines:s.defines,customVertexShaderID:I,customFragmentShaderID:k,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:y,instancing:!0===w.isInstancedMesh,instancingColor:!0===w.isInstancedMesh&&null!==w.instanceColor,supportsVertexTextures:f,outputEncoding:null!==R?v(R.texture):t.outputEncoding,map:!!s.map,mapEncoding:v(s.map),matcap:!!s.matcap,matcapEncoding:v(s.matcap),envMap:!!M,envMapMode:M&&M.mapping,envMapEncoding:v(M),envMapCubeUV:!!M&&(M.mapping===ut||M.mapping===ct),lightMap:!!s.lightMap,lightMapEncoding:v(s.lightMap),aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,emissiveMapEncoding:v(s.emissiveMap),bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===tn,tangentSpaceNormalMap:s.normalMapType===Qe,clearcoat:L,clearcoatMap:L&&!!s.clearcoatMap,clearcoatRoughnessMap:L&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:L&&!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,specularColorMapEncoding:v(s.specularColorMap),alphaMap:!!s.alphaMap,alphaTest:N,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenColorMapEncoding:v(s.sheenColorMap),sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!w.geometry&&!!w.geometry.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!w.geometry&&!!w.geometry.attributes.color&&4===w.geometry.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!_,useFog:s.fog,fogExp2:_&&_.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===w.isSkinnedMesh&&E>0,maxBones:E,useVertexTexture:d,morphTargets:!!w.geometry&&!!w.geometry.morphAttributes.position,morphNormals:!!w.geometry&&!!w.geometry.morphAttributes.normal,morphTargetsCount:w.geometry&&w.geometry.morphAttributes.position?w.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,format:s.format,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:Z,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===g,flipSided:s.side===m,depthPacking:void 0!==s.depthPacking&&s.depthPacking,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.mapEncoding),t.push(e.matcapEncoding),t.push(e.envMapMode),t.push(e.envMapEncoding),t.push(e.lightMapEncoding),t.push(e.emissiveMapEncoding),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.maxBones),t.push(e.morphTargetsCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.format),t.push(e.specularColorMapEncoding),t.push(e.sheenColorMapEncoding)}(n,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0),e.supportsVertexTextures&&o.enable(1),e.instancing&&o.enable(2),e.instancingColor&&o.enable(3),e.map&&o.enable(4),e.matcap&&o.enable(5),e.envMap&&o.enable(6),e.envMapCubeUV&&o.enable(7),e.lightMap&&o.enable(8),e.aoMap&&o.enable(9),e.emissiveMap&&o.enable(10),e.bumpMap&&o.enable(11),e.normalMap&&o.enable(12),e.objectSpaceNormalMap&&o.enable(13),e.tangentSpaceNormalMap&&o.enable(14),e.clearcoat&&o.enable(15),e.clearcoatMap&&o.enable(16),e.clearcoatRoughnessMap&&o.enable(17),e.clearcoatNormalMap&&o.enable(18),e.displacementMap&&o.enable(19),e.specularMap&&o.enable(20),e.roughnessMap&&o.enable(21),e.metalnessMap&&o.enable(22),e.gradientMap&&o.enable(23),e.alphaMap&&o.enable(24),e.alphaTest&&o.enable(25),e.vertexColors&&o.enable(26),e.vertexAlphas&&o.enable(27),e.vertexUvs&&o.enable(28),e.vertexTangents&&o.enable(29),e.uvsVertexOnly&&o.enable(30),e.fog&&o.enable(31),t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0),e.flatShading&&o.enable(1),e.logarithmicDepthBuffer&&o.enable(2),e.skinning&&o.enable(3),e.useVertexTexture&&o.enable(4),e.morphTargets&&o.enable(5),e.morphNormals&&o.enable(6),e.premultipliedAlpha&&o.enable(7),e.shadowMapEnabled&&o.enable(8),e.physicallyCorrectLights&&o.enable(9),e.doubleSided&&o.enable(10),e.flipSided&&o.enable(11),e.depthPacking&&o.enable(12),e.dithering&&o.enable(13),e.specularIntensityMap&&o.enable(14),e.specularColorMap&&o.enable(15),e.transmission&&o.enable(16),e.transmissionMap&&o.enable(17),e.thicknessMap&&o.enable(18),e.sheen&&o.enable(19),e.sheenColorMap&&o.enable(20),e.sheenRoughnessMap&&o.enable(21),t.push(o.mask)}(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=x[t.type];let n;if(e){const t=Fs[e];n=ys.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,i=u.length;t<i;t++){const e=u[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new jo(t,n,e,s),u.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=u.indexOf(t);u[e]=u[u.length-1],u.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:u,dispose:function(){l.dispose()}}}function Zo(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Qo(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function tl(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function el(){const t=[];let e=0;const n=[],r=[],i=[];function s(n,r,i,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){e=0,n.length=0,r.length=0,i.length=0},push:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.push(c):!0===a.transparent?i.push(c):n.push(c)},unshift:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.unshift(c):!0===a.transparent?i.unshift(c):n.unshift(c)},finish:function(){for(let n=e,r=t.length;n<r;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Qo),r.length>1&&r.sort(e||tl),i.length>1&&i.sort(e||tl)}}}function nl(){let t=new WeakMap;return{get:function(e,n){let r;return!1===t.has(e)?(r=new el,t.set(e,[r])):n>=t.get(e).length?(r=new el,t.get(e).push(r)):r=t.get(e)[n],r},dispose:function(){t=new WeakMap}}}function rl(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ir,color:new Ei};break;case"SpotLight":n={position:new ir,direction:new ir,color:new Ei,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ir,color:new Ei,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ir,skyColor:new Ei,groundColor:new Ei};break;case"RectAreaLight":n={color:new Ei,position:new ir,halfWidth:new ir,halfHeight:new ir}}return t[e.id]=n,n}}}let il=0;function sl(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function al(t,e){const n=new rl,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new qn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new qn,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let l=0;l<9;l++)i.probe.push(new ir);const s=new ir,a=new Pr,o=new Pr;return{setup:function(s,a){let o=0,l=0,u=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let c=0,h=0,d=0,p=0,f=0,m=0,g=0,y=0;s.sort(sl);const x=!0!==a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,v=e.intensity,b=e.distance,w=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*v*x,l+=a.g*v*x,u+=a.b*v*x;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=w,i.directionalShadowMatrix[c]=e.shadow.matrix,m++}i.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(v*x),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[d]=n,i.spotShadowMap[d]=w,i.spotShadowMatrix[d]=e.shadow.matrix,y++}i.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(a).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=w,i.pointShadowMatrix[h]=e.shadow.matrix,g++}i.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v*x),t.groundColor.copy(e.groundColor).multiplyScalar(v*x),i.hemi[f]=t,f++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=Os.LTC_FLOAT_1,i.rectAreaLTC2=Os.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Os.LTC_HALF_1,i.rectAreaLTC2=Os.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=u;const v=i.hash;v.directionalLength===c&&v.pointLength===h&&v.spotLength===d&&v.rectAreaLength===p&&v.hemiLength===f&&v.numDirectionalShadows===m&&v.numPointShadows===g&&v.numSpotShadows===y||(i.directional.length=c,i.spot.length=d,i.rectArea.length=p,i.point.length=h,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=y,v.directionalLength=c,v.pointLength=h,v.spotLength=d,v.rectAreaLength=p,v.hemiLength=f,v.numDirectionalShadows=m,v.numPointShadows=g,v.numSpotShadows=y,i.version=il++)},setupView:function(t,e){let n=0,r=0,l=0,u=0,c=0;const h=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),n++}else if(e.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),l++}else if(e.isRectAreaLight){const t=i.rectArea[u];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),o.identity(),a.copy(e.matrixWorld),a.premultiply(h),o.extractRotation(a),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),u++}else if(e.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),r++}else if(e.isHemisphereLight){const t=i.hemi[c];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(h),t.direction.normalize(),c++}}},state:i}}function ol(t,e){const n=new al(t,e),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(t){n.setup(r,t)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){i.push(t)}}}function ll(t,e){let n=new WeakMap;return{get:function(r,i=0){let s;return!1===n.has(r)?(s=new ol(t,e),n.set(r,[s])):i>=n.get(r).length?(s=new ol(t,e),n.get(r).push(s)):s=n.get(r)[i],s},dispose:function(){n=new WeakMap}}}class ul extends vi{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=Je,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}ul.prototype.isMeshDepthMaterial=!0;class cl extends vi{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new ir,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function hl(t,e,n){let r=new Rs;const i=new qn,s=new qn,a=new Qn,o=new ul({depthPacking:Ze}),l=new cl,u={},c=n.maxTextureSize,d={0:m,1:f,2:g},y=new xs({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new qn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),x=y.clone();x.defines.HORIZONTAL_PASS=1;const b=new Xi;b.setAttribute("position",new ki(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new ds(b,y),_=this;function S(n,r){const i=e.update(w);y.defines.VSM_SAMPLES!==n.blurSamples&&(y.defines.VSM_SAMPLES=n.blurSamples,x.defines.VSM_SAMPLES=n.blurSamples,y.needsUpdate=!0,x.needsUpdate=!0),y.uniforms.shadow_pass.value=n.map.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,y,w,null),x.uniforms.shadow_pass.value=n.mapPass.texture,x.uniforms.resolution.value=n.mapSize,x.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,x,w,null)}function M(e,n,r,i,s,a,c){let h=null;const f=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(h=void 0!==f?f:!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0){const t=h.uuid,e=r.uuid;let n=u[t];void 0===n&&(n={},u[t]=n);let i=n[e];void 0===i&&(i=h.clone(),n[e]=i),h=i}return h.visible=r.visible,h.wireframe=r.wireframe,h.side=c===p?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:d[r.side],h.alphaMap=r.alphaMap,h.alphaTest=r.alphaTest,h.clipShadows=r.clipShadows,h.clippingPlanes=r.clippingPlanes,h.clipIntersection=r.clipIntersection,h.displacementMap=r.displacementMap,h.displacementScale=r.displacementScale,h.displacementBias=r.displacementBias,h.wireframeLinewidth=r.wireframeLinewidth,h.linewidth=r.linewidth,!0===i.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(i.matrixWorld),h.nearDistance=s,h.farDistance=a),h}function T(n,i,s,a,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===p)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let l=0,u=e.length;l<u;l++){const u=e[l],c=i[u.materialIndex];if(c&&c.visible){const e=M(n,0,c,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,u)}}}else if(i.visible){const e=M(n,0,i,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)T(l[t],i,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=h,this.render=function(e,n,o){if(!1===_.enabled)return;if(!1===_.autoUpdate&&!1===_.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),u=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(v),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=e.length;f<m;f++){const l=e[f],u=l.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;i.copy(u.mapSize);const h=u.getFrameExtents();if(i.multiply(h),s.copy(u.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(s.x=Math.floor(c/h.x),i.x=s.x*h.x,u.mapSize.x=s.x),i.y>c&&(s.y=Math.floor(c/h.y),i.y=s.y*h.y,u.mapSize.y=s.y)),null===u.map&&!u.isPointLightShadow&&this.type===p){const t={minFilter:vt,magFilter:vt,format:zt};u.map=new tr(i.x,i.y,t),u.map.texture.name=l.name+".shadowMap",u.mapPass=new tr(i.x,i.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:ft,magFilter:ft,format:zt};u.map=new tr(i.x,i.y,t),u.map.texture.name=l.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const m=u.getViewportCount();for(let t=0;t<m;t++){const e=u.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),u.updateMatrices(l,t),r=u.getFrustum(),T(n,o,u.camera,l,this.type)}u.isPointLightShadow||this.type!==p||S(u,o),u.needsUpdate=!1}_.needsUpdate=!1,t.setRenderTarget(l,u,h)}}function dl(t,e,n){const r=n.isWebGL2,i=new function(){let e=!1;const n=new Qn;let r=null;const i=new Qn(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,s,a,o){!0===o&&(e*=a,r*=a,s*=a),n.set(e,r,s,a),!1===i.equals(n)&&(t.clearColor(e,r,s,a),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?yt(2929):xt(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case $:t.depthFunc(512);break;case q:t.depthFunc(519);break;case V:t.depthFunc(513);break;case H:t.depthFunc(515);break;case W:t.depthFunc(514);break;case G:t.depthFunc(518);break;case j:t.depthFunc(516);break;case X:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},u=new function(){let e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(t){e||(t?yt(2960):xt(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,a){r===e&&i===n&&s===a||(t.stencilFunc(e,n,a),r=e,i=n,s=a)},setOp:function(e,n,r){a===e&&o===n&&l===r||(t.stencilOp(e,n,r),a=e,o=n,l=r)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null}}};let c={},h={},d=null,p=!1,f=null,y=null,x=null,Y=null,K=null,J=null,Z=null,Q=!1,tt=null,et=null,nt=null,rt=null,it=null;const st=t.getParameter(35661);let at=!1,ot=0;const lt=t.getParameter(7938);-1!==lt.indexOf("WebGL")?(ot=parseFloat(/^WebGL (\d)/.exec(lt)[1]),at=ot>=1):-1!==lt.indexOf("OpenGL ES")&&(ot=parseFloat(/^OpenGL ES (\d)/.exec(lt)[1]),at=ot>=2);let ut=null,ct={};const ht=t.getParameter(3088),dt=t.getParameter(2978),pt=(new Qn).fromArray(ht),ft=(new Qn).fromArray(dt);function mt(e,n,r){const i=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let a=0;a<r;a++)t.texImage2D(n+a,0,6408,1,1,0,6408,5121,i);return s}const gt={};function yt(e){!0!==c[e]&&(t.enable(e),c[e]=!0)}function xt(e){!1!==c[e]&&(t.disable(e),c[e]=!1)}gt[3553]=mt(3553,3553,1),gt[34067]=mt(34067,34069,6),i.setClear(0,0,0,1),s.setClear(1),u.setClear(0),yt(2929),s.setFunc(H),_t(!1),St(o),yt(2884),wt(v);const vt={[T]:32774,[E]:32778,[A]:32779};if(r)vt[C]=32775,vt[I]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(vt[C]=t.MIN_EXT,vt[I]=t.MAX_EXT)}const bt={[k]:0,[R]:1,[N]:768,[D]:770,[U]:776,[z]:774,[O]:772,[L]:769,[P]:771,[B]:775,[F]:773};function wt(e,n,r,i,s,a,o,l){if(e!==v){if(!1===p&&(yt(3042),p=!0),e===M)s=s||n,a=a||r,o=o||i,n===y&&s===K||(t.blendEquationSeparate(vt[n],vt[s]),y=n,K=s),r===x&&i===Y&&a===J&&o===Z||(t.blendFuncSeparate(bt[r],bt[i],bt[a],bt[o]),x=r,Y=i,J=a,Z=o),f=e,Q=null;else if(e!==f||l!==Q){if(y===T&&K===T||(t.blendEquation(32774),y=T,K=T),l)switch(e){case b:t.blendFuncSeparate(1,771,1,771);break;case w:t.blendFunc(1,1);break;case _:t.blendFuncSeparate(0,0,769,771);break;case S:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case b:t.blendFuncSeparate(770,771,1,771);break;case w:t.blendFunc(770,1);break;case _:t.blendFunc(0,769);break;case S:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}x=null,Y=null,J=null,Z=null,f=e,Q=l}}else!0===p&&(xt(3042),p=!1)}function _t(e){tt!==e&&(e?t.frontFace(2304):t.frontFace(2305),tt=e)}function St(e){e!==a?(yt(2884),e!==et&&(e===o?t.cullFace(1029):e===l?t.cullFace(1028):t.cullFace(1032))):xt(2884),et=e}function Mt(e,n,r){e?(yt(32823),rt===n&&it===r||(t.polygonOffset(n,r),rt=n,it=r)):xt(32823)}function Tt(e){void 0===e&&(e=33984+st-1),ut!==e&&(t.activeTexture(e),ut=e)}return{buffers:{color:i,depth:s,stencil:u},enable:yt,disable:xt,bindFramebuffer:function(e,n){return h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,r&&(36009===e&&(h[36160]=n),36160===e&&(h[36009]=n)),!0)},useProgram:function(e){return d!==e&&(t.useProgram(e),d=e,!0)},setBlending:wt,setMaterial:function(t,e){t.side===g?xt(2884):yt(2884);let n=t.side===m;e&&(n=!n),_t(n),t.blending===b&&!1===t.transparent?wt(v):wt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),i.setMask(t.colorWrite);const r=t.stencilWrite;u.setTest(r),r&&(u.setMask(t.stencilWriteMask),u.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),u.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Mt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?yt(32926):xt(32926)},setFlipSided:_t,setCullFace:St,setLineWidth:function(e){e!==nt&&(at&&t.lineWidth(e),nt=e)},setPolygonOffset:Mt,setScissorTest:function(t){t?yt(3089):xt(3089)},activeTexture:Tt,bindTexture:function(e,n){null===ut&&Tt();let r=ct[ut];void 0===r&&(r={type:void 0,texture:void 0},ct[ut]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||gt[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=ct[ut];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===pt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),pt.copy(e))},viewport:function(e){!1===ft.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),ft.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),c={},ut=null,ct={},h={},d=null,p=!1,f=null,y=null,x=null,Y=null,K=null,J=null,Z=null,Q=!1,tt=null,et=null,nt=null,rt=null,it=null,pt.set(0,0,t.canvas.width,t.canvas.height),ft.set(0,0,t.canvas.width,t.canvas.height),i.reset(),s.reset(),u.reset()}}}function pl(t,e,n,r,i,s,a){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,p=new WeakMap;let f,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function g(t,e){return m?new OffscreenCanvas(t,e):jn("canvas")}function y(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?Un:Math.floor,s=r(i*t.width),a=r(i*t.height);void 0===f&&(f=g(s,a));const o=n?g(s,a):f;return o.width=s,o.height=a,o.getContext("2d").drawImage(t,0,0,s,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+a+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function x(t){return zn(t.width)&&zn(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==ft&&t.minFilter!==vt}function b(e){t.generateMipmap(e)}function w(n,r,i,s){if(!1===o)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=r;return 6403===r&&(5126===i&&(a=33326),5131===i&&(a=33325),5121===i&&(a=33321)),6407===r&&(5126===i&&(a=34837),5131===i&&(a=34843),5121===i&&(a=32849)),6408===r&&(5126===i&&(a=34836),5131===i&&(a=34842),5121===i&&(a=s===Ke?35907:32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||e.get("EXT_color_buffer_float"),a}function _(t,e,n){return!0===v(t,n)||t.isFramebufferTexture&&t.minFilter!==ft&&t.minFilter!==vt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function S(t){return t===ft||t===mt||t===yt?9728:9729}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=r.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),r.remove(e))}(n),n.isVideoTexture&&p.delete(n),a.memory.textures--}function T(e){const n=e.target;n.removeEventListener("dispose",T),function(e){const n=e.texture,i=r.get(e),s=r.get(n);if(e){if(void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);i.__webglTexture&&(t.deleteTexture(i.__webglTexture),a.memory.textures--),r.remove(n[e])}r.remove(n),r.remove(e)}}(n)}let E=0;function A(t,e){const i=r.get(t);if(t.isVideoTexture&&function(t){const e=a.render.frame;p.get(t)!==e&&(p.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void L(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function C(e,i){const a=r.get(e);e.version>0&&a.__version!==e.version?function(e,r,i){if(6!==r.image.length)return;N(e,r),n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const a=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=a||l?l?r.image[t].image:r.image[t]:y(r.image[t],!1,!0,u);const h=c[0],d=x(h)||o,p=s.convert(r.format),f=s.convert(r.type),m=w(r.internalFormat,p,f,r.encoding),g=o&&!0!==r.isVideoTexture,S=void 0===e.__version;let M,T=_(r,h,d);if(R(34067,r,d),a){g&&S&&n.texStorage2D(34067,T,m,h.width,h.height);for(let t=0;t<6;t++){M=c[t].mipmaps;for(let e=0;e<M.length;e++){const i=M[e];r.format!==zt&&r.format!==Ft?null!==p?g?n.compressedTexSubImage2D(34069+t,e,0,0,i.width,i.height,p,i.data):n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?n.texSubImage2D(34069+t,e,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e,m,i.width,i.height,0,p,f,i.data)}}}else{M=r.mipmaps,g&&S&&(M.length>0&&T++,n.texStorage2D(34067,T,m,c[0].width,c[0].height));for(let t=0;t<6;t++)if(l){g?n.texSubImage2D(34069+t,0,0,0,c[t].width,c[t].height,p,f,c[t].data):n.texImage2D(34069+t,0,m,c[t].width,c[t].height,0,p,f,c[t].data);for(let e=0;e<M.length;e++){const r=M[e].image[t].image;g?n.texSubImage2D(34069+t,e+1,0,0,r.width,r.height,p,f,r.data):n.texImage2D(34069+t,e+1,m,r.width,r.height,0,p,f,r.data)}}else{g?n.texSubImage2D(34069+t,0,0,0,p,f,c[t]):n.texImage2D(34069+t,0,m,p,f,c[t]);for(let e=0;e<M.length;e++){const r=M[e];g?n.texSubImage2D(34069+t,e+1,0,0,p,f,r.image[t]):n.texImage2D(34069+t,e+1,m,p,f,r.image[t])}}}v(r,d)&&b(34067),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(a,e,i):(n.activeTexture(33984+i),n.bindTexture(34067,a.__webglTexture))}const I={[ht]:10497,[dt]:33071,[pt]:33648},k={[ft]:9728,[mt]:9984,[yt]:9986,[vt]:9729,[bt]:9985,[_t]:9987};function R(n,s,a){if(a?(t.texParameteri(n,10242,I[s.wrapS]),t.texParameteri(n,10243,I[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,I[s.wrapR]),t.texParameteri(n,10240,k[s.magFilter]),t.texParameteri(n,10241,k[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===dt&&s.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,S(s.magFilter)),t.texParameteri(n,10241,S(s.minFilter)),s.minFilter!==ft&&s.minFilter!==vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const a=e.get("EXT_texture_filter_anisotropic");if(s.type===kt&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&s.type===Rt&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||r.get(s).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy)}}function N(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",M),e.__webglTexture=t.createTexture(),a.memory.textures++)}function L(e,r,i){let a=3553;r.isDataTexture2DArray&&(a=35866),r.isDataTexture3D&&(a=32879),N(e,r),n.activeTexture(33984+i),n.bindTexture(a,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const l=function(t){return!o&&(t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==ft&&t.minFilter!==vt)}(r)&&!1===x(r.image),u=y(r.image,l,!1,c),h=x(u)||o,d=s.convert(r.format);let p,f=s.convert(r.type),m=w(r.internalFormat,d,f,r.encoding);R(a,r,h);const g=r.mipmaps,S=o&&!0!==r.isVideoTexture,M=void 0===e.__version,T=_(r,u,h);if(r.isDepthTexture)m=6402,o?m=r.type===kt?36012:r.type===It?33190:r.type===Pt?35056:33189:r.type===kt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===$t&&6402===m&&r.type!==At&&r.type!==It&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=At,f=s.convert(r.type)),r.format===qt&&6402===m&&(m=34041,r.type!==Pt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Pt,f=s.convert(r.type))),S&&M?n.texStorage2D(3553,1,m,u.width,u.height):n.texImage2D(3553,0,m,u.width,u.height,0,d,f,null);else if(r.isDataTexture)if(g.length>0&&h){S&&M&&n.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],S?n.texSubImage2D(3553,0,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1}else S?(M&&n.texStorage2D(3553,T,m,u.width,u.height),n.texSubImage2D(3553,0,0,0,u.width,u.height,d,f,u.data)):n.texImage2D(3553,0,m,u.width,u.height,0,d,f,u.data);else if(r.isCompressedTexture){S&&M&&n.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],r.format!==zt&&r.format!==Ft?null!==d?S?n.compressedTexSubImage2D(3553,t,0,0,p.width,p.height,d,p.data):n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):S?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data)}else if(r.isDataTexture2DArray)S?(M&&n.texStorage3D(35866,T,m,u.width,u.height,u.depth),n.texSubImage3D(35866,0,0,0,0,u.width,u.height,u.depth,d,f,u.data)):n.texImage3D(35866,0,m,u.width,u.height,u.depth,0,d,f,u.data);else if(r.isDataTexture3D)S?(M&&n.texStorage3D(32879,T,m,u.width,u.height,u.depth),n.texSubImage3D(32879,0,0,0,0,u.width,u.height,u.depth,d,f,u.data)):n.texImage3D(32879,0,m,u.width,u.height,u.depth,0,d,f,u.data);else if(r.isFramebufferTexture)S&&M?n.texStorage2D(3553,T,m,u.width,u.height):n.texImage2D(3553,0,m,u.width,u.height,0,d,f,null);else if(g.length>0&&h){S&&M&&n.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],S?n.texSubImage2D(3553,t,0,0,d,f,p):n.texImage2D(3553,t,m,d,f,p);r.generateMipmaps=!1}else S?(M&&n.texStorage2D(3553,T,m,u.width,u.height),n.texSubImage2D(3553,0,0,0,d,f,u)):n.texImage2D(3553,0,m,d,f,u);v(r,h)&&b(a),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function D(e,i,a,o,l){const u=s.convert(a.format),c=s.convert(a.type),h=w(a.internalFormat,u,c,a.encoding);r.get(i).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,i.width,i.height,i.depth,0,u,c,null):n.texImage2D(l,0,h,i.width,i.height,0,u,c,null)),n.bindFramebuffer(36160,e),i.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(a).__webglTexture,0,F(i)):t.framebufferTexture2D(36160,o,l,r.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function P(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||n.useRenderToTexture){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===kt?i=36012:e.type===It&&(i=33190));const r=F(n);n.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,r,i,n.width,n.height):t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const i=F(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):n.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,i=s.convert(e.format),a=s.convert(e.type),o=w(e.internalFormat,i,a,e.encoding),l=F(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,l,o,n.width,n.height):n.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,l,o,n.width,n.height):t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function O(e){const i=r.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),A(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture,a=F(i);if(i.depthTexture.format===$t)i.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,a):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(i.depthTexture.format!==qt)throw new Error("Unknown depthTexture format");i.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,a):t.framebufferTexture2D(36160,33306,3553,s,0)}}(i.__webglFramebuffer,e)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),P(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),P(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function F(t){return o&&(t.useRenderbuffer||t.useRenderToTexture)?Math.min(h,t.samples):0}let z=!1,B=!1;this.allocateTextureUnit=function(){const t=E;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=A,this.setTexture2DArray=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?L(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?L(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=C,this.rebindTextures=function(t,e,n){const i=r.get(t);void 0!==e&&D(i.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&O(t)},this.setupRenderTarget=function(e){const l=e.texture,u=r.get(e),c=r.get(l);e.addEventListener("dispose",T),!0!==e.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=t.createTexture()),c.__version=l.version,a.memory.textures++);const h=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=l.isDataTexture3D||l.isDataTexture2DArray,f=x(e)||o;if(!o||l.format!==Ft||l.type!==kt&&l.type!==Rt||(l.format=zt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){u.__webglFramebuffer=[];for(let e=0;e<6;e++)u.__webglFramebuffer[e]=t.createFramebuffer()}else if(u.__webglFramebuffer=t.createFramebuffer(),d)if(i.drawBuffers){const n=e.texture;for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(e.useRenderbuffer)if(o){u.__webglMultisampledFramebuffer=t.createFramebuffer(),u.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,u.__webglColorRenderbuffer);const r=s.convert(l.format),i=s.convert(l.type),a=w(l.internalFormat,r,i,l.encoding),o=F(e);t.renderbufferStorageMultisample(36161,o,a,e.width,e.height),n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,u.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(u.__webglDepthRenderbuffer=t.createRenderbuffer(),P(u.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){n.bindTexture(34067,c.__webglTexture),R(34067,l,f);for(let t=0;t<6;t++)D(u.__webglFramebuffer[t],e,l,36064,34069+t);v(l,f)&&b(34067),n.unbindTexture()}else if(d){const t=e.texture;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=r.get(s);n.bindTexture(3553,a.__webglTexture),R(3553,s,f),D(u.__webglFramebuffer,e,s,36064+i,3553),v(s,f)&&b(3553)}n.unbindTexture()}else{let t=3553;p&&(o?t=l.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(t,c.__webglTexture),R(t,l,f),D(u.__webglFramebuffer,e,l,36064,t),v(l,f)&&b(t),n.unbindTexture()}e.depthBuffer&&O(e)},this.updateRenderTargetMipmap=function(t){const e=x(t)||o,i=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,a=i.length;s<a;s++){const a=i[s];if(v(a,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,i=r.get(a).__webglTexture;n.bindTexture(e,i),b(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.useRenderbuffer)if(o){const i=e.width,s=e.height;let a=16384;const o=[36064],l=e.stencilBuffer?33306:36096;e.depthBuffer&&o.push(l),e.ignoreDepthForMultisampleCopy||(e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024));const u=r.get(e);n.bindFramebuffer(36008,u.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,u.__webglFramebuffer),e.ignoreDepthForMultisampleCopy&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),t.blitFramebuffer(0,0,i,s,0,0,i,s,a,9728),t.invalidateFramebuffer(36008,o),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,u.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=O,this.setupFrameBufferTexture=D,this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),z=!0),t=t.texture),A(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),B=!0),t=t.texture),C(t,e)}}function fl(t,e,n){const r=n.isWebGL2;return{convert:function(t){let n;if(t===Mt)return 5121;if(t===Nt)return 32819;if(t===Lt)return 32820;if(t===Dt)return 33635;if(t===Tt)return 5120;if(t===Et)return 5122;if(t===At)return 5123;if(t===Ct)return 5124;if(t===It)return 5125;if(t===kt)return 5126;if(t===Rt)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===Ot)return 6406;if(t===Ft)return 6407;if(t===zt)return 6408;if(t===Bt)return 6409;if(t===Ut)return 6410;if(t===$t)return 6402;if(t===qt)return 34041;if(t===Vt)return 6403;if(t===Ht)return 36244;if(t===Wt)return 33319;if(t===Gt)return 33320;if(t===jt)return 36248;if(t===Xt)return 36249;if(t===Yt||t===Kt||t===Jt||t===Zt){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Yt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Kt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Jt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Zt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===Qt||t===te||t===ee||t===ne){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===Qt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===te)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===ee)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===ne)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===re)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===ie||t===se)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===ie)return n.COMPRESSED_RGB8_ETC2;if(t===se)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===ae||t===oe||t===le||t===ue||t===ce||t===he||t===de||t===pe||t===fe||t===me||t===ge||t===ye||t===xe||t===ve||t===we||t===_e||t===Se||t===Me||t===Te||t===Ee||t===Ae||t===Ce||t===Ie||t===ke||t===Re||t===Ne||t===Le||t===De?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===be?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===Pt?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}cl.prototype.isMeshDistanceMaterial=!0;class ml extends bs{constructor(t=[]){super(),this.cameras=t}}ml.prototype.isArrayCamera=!0;class gl extends ai{constructor(){super(),this.type="Group"}}gl.prototype.isGroup=!0;const yl={type:"move"};class xl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new gl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new gl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ir,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ir),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new gl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ir,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ir),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==a&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(yl))),l&&t.hand){s=!0;for(const s of t.hand.values()){const t=e.getJointPose(s,n);if(void 0===l.joints[s.jointName]){const t=new gl;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[s.jointName]=t,l.add(t)}const r=l.joints[s.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],a=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),this}}class vl extends Jn{constructor(t,e,n,r,i,s,a,o,l,u){if((u=void 0!==u?u:$t)!==$t&&u!==qt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===$t&&(n=At),void 0===n&&u===qt&&(n=Pt),super(null,r,i,s,a,o,u,n,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:ft,this.minFilter=void 0!==o?o:ft,this.flipY=!1,this.generateMipmaps=!1}}vl.prototype.isDepthTexture=!0;class bl extends In{constructor(t,e){super();const n=this;let r=null,i=1,s=null,a="local-floor";const o=t.extensions.has("WEBGL_multisampled_render_to_texture");let l=null,u=null,c=null,h=null,d=!1,p=null;const f=e.getContextAttributes();let m=null,g=null;const y=[],x=new Map,v=new bs;v.layers.enable(1),v.viewport=new Qn;const b=new bs;b.layers.enable(2),b.viewport=new Qn;const w=[v,b],_=new ml;_.layers.enable(1),_.layers.enable(2);let S=null,M=null;function T(t){const e=x.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function E(){x.forEach((function(t,e){t.disconnect(e)})),x.clear(),S=null,M=null,t.setRenderTarget(m),h=null,c=null,u=null,r=null,g=null,N.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function A(t){const e=r.inputSources;for(let n=0;n<y.length;n++)x.set(e[n],y[n]);for(let n=0;n<t.removed.length;n++){const e=t.removed[n],r=x.get(e);r&&(r.dispatchEvent({type:"disconnected",data:e}),x.delete(e))}for(let n=0;n<t.added.length;n++){const e=t.added[n],r=x.get(e);r&&r.dispatchEvent({type:"connected",data:e})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=y[t];return void 0===e&&(e=new xl,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new xl,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new xl,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return null!==c?c:h},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(l){if(r=l,null!==r){if(m=t.getRenderTarget(),r.addEventListener("select",T),r.addEventListener("selectstart",T),r.addEventListener("selectend",T),r.addEventListener("squeeze",T),r.addEventListener("squeezestart",T),r.addEventListener("squeezeend",T),r.addEventListener("end",E),r.addEventListener("inputsourceschange",A),!0!==f.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||f.antialias,alpha:f.alpha,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:i};h=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:h}),g=new tr(h.framebufferWidth,h.framebufferHeight,{format:zt,type:Mt,encoding:t.outputEncoding})}else{d=f.antialias;let n=null,s=null,a=null;f.depth&&(a=f.stencil?35056:33190,n=f.stencil?qt:$t,s=f.stencil?Pt:At);const l={colorFormat:f.alpha||d?32856:32849,depthFormat:a,scaleFactor:i};u=new XRWebGLBinding(r,e),c=u.createProjectionLayer(l),r.updateRenderState({layers:[c]}),g=d?new nr(c.textureWidth,c.textureHeight,{format:zt,type:Mt,depthTexture:new vl(c.textureWidth,c.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,ignoreDepth:c.ignoreDepthValues,useRenderToTexture:o,encoding:t.outputEncoding}):new tr(c.textureWidth,c.textureHeight,{format:f.alpha?zt:Ft,type:Mt,depthTexture:new vl(c.textureWidth,c.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,ignoreDepth:c.ignoreDepthValues,encoding:t.outputEncoding})}this.setFoveation(1),s=await r.requestReferenceSpace(a),N.setContext(r),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const C=new ir,I=new ir;function k(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;_.near=b.near=v.near=t.near,_.far=b.far=v.far=t.far,S===_.near&&M===_.far||(r.updateRenderState({depthNear:_.near,depthFar:_.far}),S=_.near,M=_.far);const e=t.parent,n=_.cameras;k(_,e);for(let r=0;r<n.length;r++)k(n[r],e);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),t.position.copy(_.position),t.quaternion.copy(_.quaternion),t.scale.copy(_.scale),t.matrix.copy(_.matrix),t.matrixWorld.copy(_.matrixWorld);const i=t.children;for(let r=0,s=i.length;r<s;r++)i[r].updateMatrixWorld(!0);2===n.length?function(t,e,n){C.setFromMatrixPosition(e.matrixWorld),I.setFromMatrixPosition(n.matrixWorld);const r=C.distanceTo(I),i=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+f,y=o+f,x=d-m,v=p+(r-m),b=l*o/y*g,w=u*o/y*g;t.projectionMatrix.makePerspective(x,v,b,w,g,y)}(_,v,b):_.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==h?h.fixedFoveation:void 0},this.setFoveation=function(t){null!==c&&(c.fixedFoveation=t),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=t)};let R=null;const N=new Ns;N.setAnimationLoop((function(e,n){if(l=n.getViewerPose(s),p=n,null!==l){const e=l.views;null!==h&&(t.setRenderTargetFramebuffer(g,h.framebuffer),t.setRenderTarget(g));let n=!1;e.length!==_.cameras.length&&(_.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let s=null;if(null!==h)s=h.getViewport(i);else{const e=u.getViewSubImage(c,i);s=e.viewport,0===r&&(t.setRenderTargetTextures(g,e.colorTexture,c.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(g))}const a=w[r];a.matrix.fromArray(i.transform.matrix),a.projectionMatrix.fromArray(i.projectionMatrix),a.viewport.set(s.x,s.y,s.width,s.height),0===r&&_.matrix.copy(a.matrix),!0===n&&_.cameras.push(a)}}const i=r.inputSources;for(let t=0;t<y.length;t++){const e=y[t],r=i[t];e.update(r,n,s)}R&&R(e,n),p=null})),this.setAnimationLoop=function(t){R=t},this.dispose=function(){}}}function wl(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const r=t.get(n).envMap;let i,s;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap?i=n.clearcoatRoughnessMap:n.specularIntensityMap?i=n.specularIntensityMap:n.specularColorMap?i=n.specularColorMap:n.transmissionMap?i=n.transmissionMap:n.thicknessMap?i=n.thicknessMap:n.sheenColorMap?i=n.sheenColorMap:n.sheenRoughnessMap&&(i=n.sheenRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix)),n.aoMap?s=n.aoMap:n.lightMap&&(s=n.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uv2Transform.value.copy(s.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===m&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===m&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,i,s,a){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e,r){n(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===m&&t.clearcoatNormalScale.value.negate())),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=r.texture,t.transmissionSamplerSize.value.set(r.width,r.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,r,a):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,r,i,s):r.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function _l(t={}){const e=void 0!==t.canvas?t.canvas:function(){const t=jn("canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,s=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,l=void 0===t.premultipliedAlpha||t.premultipliedAlpha,u=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let d=null,p=null;const y=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ye,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1;const v=this;let b=!1,w=0,_=0,S=null,M=-1,T=null;const E=new Qn,A=new Qn;let C=null,I=e.width,k=e.height,R=1,N=null,L=null;const D=new Qn(0,0,I,k),P=new Qn(0,0,I,k);let O=!1;const F=[],z=new Rs;let B=!1,U=!1,$=null;const q=new Pr,V=new ir,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function W(){return null===S?R:1}let G,j,X,Y,K,J,Q,tt,et,nt,rt,it,st,at,ot,lt,ut,ct,ht,pt,mt,gt,yt,xt=n;function vt(t,n){for(let r=0;r<t.length;r++){const i=t[r],s=e.getContext(i,n);if(null!==s)return s}return null}try{const t={alpha:i,depth:s,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r"+r),e.addEventListener("webglcontextlost",St,!1),e.addEventListener("webglcontextrestored",Tt,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===v.isWebGL1Renderer&&e.shift(),xt=vt(e,t),null===xt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function bt(){G=new da(xt),j=new $s(xt,G,t),G.init(j),gt=new fl(xt,G,j),X=new dl(xt,G,j),F[0]=1029,Y=new ma(xt),K=new Zo,J=new pl(xt,G,X,K,j,gt,Y),Q=new Vs(v),tt=new ha(v),et=new Ls(xt,j),yt=new Bs(xt,G,et,j),nt=new pa(xt,et,Y,yt),rt=new wa(xt,nt,et,Y),ht=new ba(xt,j,J),lt=new qs(K),it=new Jo(v,Q,tt,G,j,yt,lt),st=new wl(K),at=new nl,ot=new ll(G,j),ct=new zs(v,Q,X,rt,l),ut=new hl(v,rt,j),pt=new Us(xt,G,Y,j),mt=new fa(xt,G,Y,j),Y.programs=it.programs,v.capabilities=j,v.extensions=G,v.properties=K,v.renderLists=at,v.shadowMap=ut,v.state=X,v.info=Y}bt();const wt=new bl(v,xt);function St(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Tt(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const t=Y.autoReset,e=ut.enabled,n=ut.autoUpdate,r=ut.needsUpdate,i=ut.type;bt(),Y.autoReset=t,ut.enabled=e,ut.autoUpdate=n,ut.needsUpdate=r,ut.type=i}function Et(t){const e=t.target;e.removeEventListener("dispose",Et),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&(e.forEach((function(t){it.releaseProgram(t)})),t.isShaderMaterial&&it.releaseShaderCache(t))})(t),K.remove(t)}(e)}this.xr=wt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=G.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=G.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(t){void 0!==t&&(R=t,this.setSize(I,k,!1))},this.getSize=function(t){return t.set(I,k)},this.setSize=function(t,n,r){wt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(I=t,k=n,e.width=Math.floor(t*R),e.height=Math.floor(n*R),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(I*R,k*R).floor()},this.setDrawingBufferSize=function(t,n,r){I=t,k=n,R=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(D)},this.setViewport=function(t,e,n,r){t.isVector4?D.set(t.x,t.y,t.z,t.w):D.set(t,e,n,r),X.viewport(E.copy(D).multiplyScalar(R).floor())},this.getScissor=function(t){return t.copy(P)},this.setScissor=function(t,e,n,r){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,n,r),X.scissor(A.copy(P).multiplyScalar(R).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){X.setScissorTest(O=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){L=t},this.getClearColor=function(t){return t.copy(ct.getClearColor())},this.setClearColor=function(){ct.setClearColor.apply(ct,arguments)},this.getClearAlpha=function(){return ct.getClearAlpha()},this.setClearAlpha=function(){ct.setClearAlpha.apply(ct,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),xt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",St,!1),e.removeEventListener("webglcontextrestored",Tt,!1),at.dispose(),ot.dispose(),K.dispose(),Q.dispose(),tt.dispose(),rt.dispose(),yt.dispose(),it.dispose(),wt.dispose(),wt.removeEventListener("sessionstart",Ct),wt.removeEventListener("sessionend",It),$&&($.dispose(),$=null),Nt.stop()},this.renderBufferDirect=function(t,e,n,r,i,s){null===e&&(e=H);const a=i.isMesh&&i.matrixWorld.determinant()<0,o=function(t,e,n,r,i){!0!==e.isScene&&(e=H),J.resetTextureUnits();const s=e.fog,a=r.isMeshStandardMaterial?e.environment:null,o=null===S?v.outputEncoding:S.texture.encoding,l=(r.isMeshStandardMaterial?tt:Q).get(r.envMap||a),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!r.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,f=n.morphAttributes.position?n.morphAttributes.position.length:0,m=r.toneMapped?v.toneMapping:Z,g=K.get(r),y=p.state.lights;if(!0===B&&(!0===U||t!==T)){const e=t===T&&r.id===M;lt.setState(r,t,e)}let x=!1;r.version===g.__version?g.needsLights&&g.lightsStateVersion!==y.state.version||g.outputEncoding!==o||i.isInstancedMesh&&!1===g.instancing?x=!0:i.isInstancedMesh||!0!==g.instancing?i.isSkinnedMesh&&!1===g.skinning?x=!0:i.isSkinnedMesh||!0!==g.skinning?g.envMap!==l||r.fog&&g.fog!==s?x=!0:void 0===g.numClippingPlanes||g.numClippingPlanes===lt.numPlanes&&g.numIntersection===lt.numIntersection?(g.vertexAlphas!==u||g.vertexTangents!==c||g.morphTargets!==h||g.morphNormals!==d||g.toneMapping!==m||!0===j.isWebGL2&&g.morphTargetsCount!==f)&&(x=!0):x=!0:x=!0:x=!0:(x=!0,g.__version=r.version);let b=g.currentProgram;!0===x&&(b=Ft(r,e,i));let w=!1,_=!1,E=!1;const A=b.getUniforms(),C=g.uniforms;if(X.useProgram(b.program)&&(w=!0,_=!0,E=!0),r.id!==M&&(M=r.id,_=!0),w||T!==t){if(A.setValue(xt,"projectionMatrix",t.projectionMatrix),j.logarithmicDepthBuffer&&A.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,_=!0,E=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=A.map.cameraPosition;void 0!==e&&e.setValue(xt,V.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&A.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&A.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(i.isSkinnedMesh){A.setOptional(xt,i,"bindMatrix"),A.setOptional(xt,i,"bindMatrixInverse");const t=i.skeleton;t&&(j.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),A.setValue(xt,"boneTexture",t.boneTexture,J),A.setValue(xt,"boneTextureSize",t.boneTextureSize)):A.setOptional(xt,t,"boneMatrices"))}var I,N;return!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||ht.update(i,n,r,b),(_||g.receiveShadow!==i.receiveShadow)&&(g.receiveShadow=i.receiveShadow,A.setValue(xt,"receiveShadow",i.receiveShadow)),_&&(A.setValue(xt,"toneMappingExposure",v.toneMappingExposure),g.needsLights&&(N=E,(I=C).ambientLightColor.needsUpdate=N,I.lightProbe.needsUpdate=N,I.directionalLights.needsUpdate=N,I.directionalLightShadows.needsUpdate=N,I.pointLights.needsUpdate=N,I.pointLightShadows.needsUpdate=N,I.spotLights.needsUpdate=N,I.spotLightShadows.needsUpdate=N,I.rectAreaLights.needsUpdate=N,I.hemisphereLights.needsUpdate=N),s&&r.fog&&st.refreshFogUniforms(C,s),st.refreshMaterialUniforms(C,r,R,k,$),Ao.upload(xt,g.uniformsList,C,J)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Ao.upload(xt,g.uniformsList,C,J),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&A.setValue(xt,"center",i.center),A.setValue(xt,"modelViewMatrix",i.modelViewMatrix),A.setValue(xt,"normalMatrix",i.normalMatrix),A.setValue(xt,"modelMatrix",i.matrixWorld),b}(t,e,n,r,i);X.setMaterial(r,a);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=nt.getWireframeAttribute(n),h=2),yt.setup(i,r,o,n,l);let d=pt;null!==l&&(c=et.get(l),d=mt,d.setIndex(c));const f=null!==l?l.count:u.count,m=n.drawRange.start*h,g=n.drawRange.count*h,y=null!==s?s.start*h:0,x=null!==s?s.count*h:1/0,b=Math.max(m,y),w=Math.min(f,m+g,y+x)-1,_=Math.max(0,w-b+1);if(0!==_){if(i.isMesh)!0===r.wireframe?(X.setLineWidth(r.wireframeLinewidth*W()),d.setMode(1)):d.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),X.setLineWidth(t*W()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(b,_,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(b,_,t)}else d.render(b,_)}},this.compile=function(t,e){p=ot.get(t),p.init(),x.push(p),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(v.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++)Ft(n[r],t,e);else Ft(n,t,e)})),x.pop(),p=null};let At=null;function Ct(){Nt.stop()}function It(){Nt.start()}const Nt=new Ns;function Lt(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||z.intersectsSprite(t)){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(q);const e=rt.update(t),i=t.material;i.visible&&d.push(t,e,i,n,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Y.render.frame&&(t.skeleton.update(),t.skeleton.frame=Y.render.frame),!t.frustumCulled||z.intersectsObject(t))){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(q);const e=rt.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i[a.materialIndex];o&&o.visible&&d.push(t,e,o,n,V.z,a)}}else i.visible&&d.push(t,e,i,n,V.z,null)}const i=t.children;for(let s=0,a=i.length;s<a;s++)Lt(i[s],e,n,r)}function Dt(t,e,n,r){const i=t.opaque,s=t.transmissive,a=t.transparent;p.setupLightsView(n),s.length>0&&function(t,e,n){if(null===$){const t=!0===o&&!0===j.isWebGL2;$=new(t?nr:tr)(1024,1024,{generateMipmaps:!0,type:null!==gt.convert(Rt)?Rt:Mt,minFilter:_t,magFilter:ft,wrapS:dt,wrapT:dt,useRenderToTexture:G.has("WEBGL_multisampled_render_to_texture")})}const r=v.getRenderTarget();v.setRenderTarget($),v.clear();const i=v.toneMapping;v.toneMapping=Z,Pt(t,e,n),v.toneMapping=i,J.updateMultisampleRenderTarget($),J.updateRenderTargetMipmap($),v.setRenderTarget(r)}(i,e,n),r&&X.viewport(E.copy(r)),i.length>0&&Pt(i,e,n),s.length>0&&Pt(s,e,n),a.length>0&&Pt(a,e,n)}function Pt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=s.object,o=s.geometry,l=null===r?s.material:r,u=s.group;a.layers.test(n.layers)&&Ot(a,e,n,o,l,u)}}function Ot(t,e,n,r,i,s){t.onBeforeRender(v,e,n,r,i,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),i.onBeforeRender(v,e,n,r,t,s),!0===i.transparent&&i.side===g?(i.side=m,i.needsUpdate=!0,v.renderBufferDirect(n,e,r,i,t,s),i.side=f,i.needsUpdate=!0,v.renderBufferDirect(n,e,r,i,t,s),i.side=g):v.renderBufferDirect(n,e,r,i,t,s),t.onAfterRender(v,e,n,r,i,s)}function Ft(t,e,n){!0!==e.isScene&&(e=H);const r=K.get(t),i=p.state.lights,s=p.state.shadowsArray,a=i.state.version,o=it.getParameters(t,i.state,s,e,n),l=it.getProgramCacheKey(o);let u=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?tt:Q).get(t.envMap||r.environment),void 0===u&&(t.addEventListener("dispose",Et),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return Bt(t,o),c}else o.uniforms=it.getUniforms(t),t.onBuild(n,o,v),t.onBeforeCompile(o,v),c=it.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=lt.uniform),Bt(t,o),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=c.getUniforms(),f=Ao.seqWithValue(d.seq,h);return r.currentProgram=c,r.uniformsList=f,c}function Bt(t,e){const n=K.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Nt.setAnimationLoop((function(t){At&&At(t)})),"undefined"!=typeof window&&Nt.setContext(window),this.setAnimationLoop=function(t){At=t,wt.setAnimationLoop(t),null===t?Nt.stop():Nt.start()},wt.addEventListener("sessionstart",Ct),wt.addEventListener("sessionend",It),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===wt.enabled&&!0===wt.isPresenting&&(!0===wt.cameraAutoUpdate&&wt.updateCamera(e),e=wt.getCamera()),!0===t.isScene&&t.onBeforeRender(v,t,e,S),p=ot.get(t,x.length),p.init(),x.push(p),q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),z.setFromProjectionMatrix(q),U=this.localClippingEnabled,B=lt.init(this.clippingPlanes,U,e),d=at.get(t,y.length),d.init(),y.push(d),Lt(t,e,0,v.sortObjects),d.finish(),!0===v.sortObjects&&d.sort(N,L),!0===B&&lt.beginShadows();const n=p.state.shadowsArray;if(ut.render(n,t,e),!0===B&&lt.endShadows(),!0===this.info.autoReset&&this.info.reset(),ct.render(d,t),p.setupLights(v.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,r=n.length;e<r;e++){const r=n[e];Dt(d,t,r,r.viewport)}}else Dt(d,t,e);null!==S&&(J.updateMultisampleRenderTarget(S),J.updateRenderTargetMipmap(S)),!0===t.isScene&&t.onAfterRender(v,t,e),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1),yt.resetDefaultState(),M=-1,T=null,x.pop(),p=x.length>0?x[x.length-1]:null,y.pop(),d=y.length>0?y[y.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(t,e,n){K.get(t.texture).__webglTexture=e,K.get(t.depthTexture).__webglTexture=n;const r=K.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||t.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),t.useRenderToTexture=!1,t.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(t,e){const n=K.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){S=t,w=e,_=n;let r=!0;if(t){const e=K.get(t);void 0!==e.__useDefaultFramebuffer?(X.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?J.setupRenderTarget(t):e.__hasExternalTextures&&J.rebindTextures(t,K.get(t.texture).__webglTexture,K.get(t.depthTexture).__webglTexture)}let i=null,s=!1,a=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const r=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=r[e],s=!0):i=t.useRenderbuffer?K.get(t).__webglMultisampledFramebuffer:r,E.copy(t.viewport),A.copy(t.scissor),C=t.scissorTest}else E.copy(D).multiplyScalar(R).floor(),A.copy(P).multiplyScalar(R).floor(),C=O;if(X.bindFramebuffer(36160,i)&&j.drawBuffers&&r){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const n=t.texture;if(F.length!==n.length||36064!==F[0]){for(let t=0,e=n.length;t<e;t++)F[t]=36064+t;F.length=n.length,e=!0}}else 1===F.length&&36064===F[0]||(F[0]=36064,F.length=1,e=!0);else 1===F.length&&1029===F[0]||(F[0]=1029,F.length=1,e=!0);e&&(j.isWebGL2?xt.drawBuffers(F):G.get("WEBGL_draw_buffers").drawBuffersWEBGL(F))}if(X.viewport(E),X.scissor(A),X.setScissorTest(C),s){const r=K.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(a){const r=K.get(t.texture),i=e||0;xt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}M=-1},this.readRenderTargetPixels=function(t,e,n,r,i,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){X.bindFramebuffer(36160,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==zt&&gt.convert(o)!==xt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===Rt&&(G.has("EXT_color_buffer_half_float")||j.isWebGL2&&G.has("EXT_color_buffer_float"));if(!(l===Mt||gt.convert(l)===xt.getParameter(35738)||l===kt&&(j.isWebGL2||G.has("OES_texture_float")||G.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===xt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&xt.readPixels(e,n,r,i,gt.convert(o),gt.convert(l),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==S?K.get(S).__webglFramebuffer:null;X.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){if(!0!==e.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),s=Math.floor(e.image.height*r);J.setTexture2D(e,0),xt.copyTexSubImage2D(3553,n,0,0,t.x,t.y,i,s),X.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,s=e.image.height,a=gt.convert(n.format),o=gt.convert(n.type);J.setTexture2D(n,0),xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,r,t.x,t.y,i,s,a,o,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):xt.texSubImage2D(3553,r,t.x,t.y,a,o,e.image),0===r&&n.generateMipmaps&&xt.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(v.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=gt.convert(r.format),u=gt.convert(r.type);let c;if(r.isDataTexture3D)J.setTexture3D(r,0),c=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(r,0),c=35866}xt.pixelStorei(37440,r.flipY),xt.pixelStorei(37441,r.premultiplyAlpha),xt.pixelStorei(3317,r.unpackAlignment);const h=xt.getParameter(3314),d=xt.getParameter(32878),p=xt.getParameter(3316),f=xt.getParameter(3315),m=xt.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;xt.pixelStorei(3314,g.width),xt.pixelStorei(32878,g.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,g.data)):xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,g),xt.pixelStorei(3314,h),xt.pixelStorei(32878,d),xt.pixelStorei(3316,p),xt.pixelStorei(3315,f),xt.pixelStorei(32877,m),0===i&&r.generateMipmaps&&xt.generateMipmap(c),X.unbindTexture()},this.initTexture=function(t){J.setTexture2D(t,0),X.unbindTexture()},this.resetState=function(){w=0,_=0,S=null,X.reset(),yt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}_l.prototype.isWebGLRenderer=!0;class Sl extends _l{}Sl.prototype.isWebGL1Renderer=!0;class Ml{constructor(t,e=25e-5){this.name="",this.color=new Ei(t),this.density=e}clone(){return new Ml(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ml.prototype.isFogExp2=!0;class Tl{constructor(t,e=1,n=1e3){this.name="",this.color=new Ei(t),this.near=e,this.far=n}clone(){return new Tl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Tl.prototype.isFog=!0;class El extends ai{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}El.prototype.isScene=!0;class Al{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=xn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Dn()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Dn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Dn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Al.prototype.isInterleavedBuffer=!0;const Cl=new ir;class Il{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Cl.x=this.getX(e),Cl.y=this.getY(e),Cl.z=this.getZ(e),Cl.applyMatrix4(t),this.setXYZ(e,Cl.x,Cl.y,Cl.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Cl.x=this.getX(e),Cl.y=this.getY(e),Cl.z=this.getZ(e),Cl.applyNormalMatrix(t),this.setXYZ(e,Cl.x,Cl.y,Cl.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Cl.x=this.getX(e),Cl.y=this.getY(e),Cl.z=this.getZ(e),Cl.transformDirection(t),this.setXYZ(e,Cl.x,Cl.y,Cl.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new ki(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Il(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Il.prototype.isInterleavedBufferAttribute=!0;class kl extends vi{constructor(t){super(),this.type="SpriteMaterial",this.color=new Ei(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Rl;kl.prototype.isSpriteMaterial=!0;const Nl=new ir,Ll=new ir,Dl=new ir,Pl=new qn,Ol=new qn,Fl=new Pr,zl=new ir,Bl=new ir,Ul=new ir,$l=new qn,ql=new qn,Vl=new qn;class Hl extends ai{constructor(t){if(super(),this.type="Sprite",void 0===Rl){Rl=new Xi;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Al(t,5);Rl.setIndex([0,1,2,0,2,3]),Rl.setAttribute("position",new Il(e,3,0,!1)),Rl.setAttribute("uv",new Il(e,2,3,!1))}this.geometry=Rl,this.material=void 0!==t?t:new kl,this.center=new qn(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ll.setFromMatrixScale(this.matrixWorld),Fl.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Dl.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ll.multiplyScalar(-Dl.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const s=this.center;Wl(zl.set(-.5,-.5,0),Dl,s,Ll,r,i),Wl(Bl.set(.5,-.5,0),Dl,s,Ll,r,i),Wl(Ul.set(.5,.5,0),Dl,s,Ll,r,i),$l.set(0,0),ql.set(1,0),Vl.set(1,1);let a=t.ray.intersectTriangle(zl,Bl,Ul,!1,Nl);if(null===a&&(Wl(Bl.set(-.5,.5,0),Dl,s,Ll,r,i),ql.set(0,1),a=t.ray.intersectTriangle(zl,Ul,Bl,!1,Nl),null===a))return;const o=t.ray.origin.distanceTo(Nl);o<t.near||o>t.far||e.push({distance:o,point:Nl.clone(),uv:yi.getUV(Nl,zl,Bl,Ul,$l,ql,Vl,new qn),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Wl(t,e,n,r,i,s){Pl.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(Ol.x=s*Pl.x-i*Pl.y,Ol.y=i*Pl.x+s*Pl.y):Ol.copy(Pl),t.copy(e),t.x+=Ol.x,t.y+=Ol.y,t.applyMatrix4(Fl)}Hl.prototype.isSprite=!0;const Gl=new ir,jl=new ir;class Xl extends ai{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,r=e.length;n<r;n++){const t=e[n];this.addLevel(t.object.clone(),t.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Gl.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Gl);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Gl.setFromMatrixPosition(t.matrixWorld),jl.setFromMatrixPosition(this.matrixWorld);const n=Gl.distanceTo(jl)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let r=0,i=n.length;r<i;r++){const t=n[r];e.object.levels.push({object:t.object.uuid,distance:t.distance})}return e}}const Yl=new ir,Kl=new Qn,Jl=new Qn,Zl=new ir,Ql=new Pr;class tu extends ds{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Pr,this.bindMatrixInverse=new Pr}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Qn,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Kl.fromBufferAttribute(r.attributes.skinIndex,t),Jl.fromBufferAttribute(r.attributes.skinWeight,t),Yl.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let i=0;i<4;i++){const t=Jl.getComponent(i);if(0!==t){const r=Kl.getComponent(i);Ql.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Zl.copy(Yl).applyMatrix4(Ql),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}tu.prototype.isSkinnedMesh=!0;class eu extends ai{constructor(){super(),this.type="Bone"}}eu.prototype.isBone=!0;class nu extends Jn{constructor(t=null,e=1,n=1,r,i,s,a,o,l=ft,u=ft,c,h){super(null,s,a,o,l,u,r,i,c,h),this.image={data:t,width:e,height:n},this.magFilter=l,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}nu.prototype.isDataTexture=!0;const ru=new Pr,iu=new Pr;class su{constructor(t=[],e=[]){this.uuid=Dn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Pr)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Pr;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let i=0,s=t.length;i<s;i++){const r=t[i]?t[i].matrixWorld:iu;ru.multiplyMatrices(r,e[i]),ru.toArray(n,16*i)}null!==r&&(r.needsUpdate=!0)}clone(){return new su(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=Bn(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new nu(e,t,t,zt,kt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new eu),this.bones.push(i),this.boneInverses.push((new Pr).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const s=n[r];t.boneInverses.push(s.toArray())}return t}}class au extends ki{constructor(t,e,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}au.prototype.isInstancedBufferAttribute=!0;const ou=new Pr,lu=new Pr,uu=[],cu=new ds;class hu extends ds{constructor(t,e,n){super(t,e),this.instanceMatrix=new au(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(cu.geometry=this.geometry,cu.material=this.material,void 0!==cu.material)for(let i=0;i<r;i++){this.getMatrixAt(i,ou),lu.multiplyMatrices(n,ou),cu.matrixWorld=lu,cu.raycast(t,uu);for(let t=0,n=uu.length;t<n;t++){const n=uu[t];n.instanceId=i,n.object=this,e.push(n)}uu.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new au(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}hu.prototype.isInstancedMesh=!0;class du extends vi{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Ei(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}du.prototype.isLineBasicMaterial=!0;const pu=new ir,fu=new ir,mu=new Pr,gu=new Dr,yu=new Er;class xu extends ai{constructor(t=new Xi,e=new du){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)pu.fromBufferAttribute(e,t-1),fu.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=pu.distanceTo(fu);t.setAttribute("lineDistance",new Bi(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),yu.copy(n.boundingSphere),yu.applyMatrix4(r),yu.radius+=i,!1===t.ray.intersectsSphere(yu))return;mu.copy(r).invert(),gu.copy(t.ray).applyMatrix4(mu);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new ir,u=new ir,c=new ir,h=new ir,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes.position;if(null!==r)for(let n=Math.max(0,s.start),a=Math.min(r.count,s.start+s.count)-1;n<a;n+=d){const s=r.getX(n),a=r.getX(n+1);if(l.fromBufferAttribute(i,s),u.fromBufferAttribute(i,a),gu.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(h);d<t.near||d>t.far||e.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,s.start),a=Math.min(i.count,s.start+s.count)-1;n<a;n+=d){if(l.fromBufferAttribute(i,n),u.fromBufferAttribute(i,n+1),gu.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}xu.prototype.isLine=!0;const vu=new ir,bu=new ir;class wu extends xu{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)vu.fromBufferAttribute(e,t),bu.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+vu.distanceTo(bu);t.setAttribute("lineDistance",new Bi(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}wu.prototype.isLineSegments=!0;class _u extends xu{constructor(t,e){super(t,e),this.type="LineLoop"}}_u.prototype.isLineLoop=!0;class Su extends vi{constructor(t){super(),this.type="PointsMaterial",this.color=new Ei(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}Su.prototype.isPointsMaterial=!0;const Mu=new Pr,Tu=new Dr,Eu=new Er,Au=new ir;class Cu extends ai{constructor(t=new Xi,e=new Su){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Eu.copy(n.boundingSphere),Eu.applyMatrix4(r),Eu.radius+=i,!1===t.ray.intersectsSphere(Eu))return;Mu.copy(r).invert(),Tu.copy(t.ray).applyMatrix4(Mu);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position;if(null!==i)for(let n=Math.max(0,s.start),l=Math.min(i.count,s.start+s.count);n<l;n++){const s=i.getX(n);Au.fromBufferAttribute(a,s),Iu(Au,s,o,r,t,e,this)}else for(let n=Math.max(0,s.start),l=Math.min(a.count,s.start+s.count);n<l;n++)Au.fromBufferAttribute(a,n),Iu(Au,n,o,r,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Iu(t,e,n,r,i,s,a){const o=Tu.distanceSqToPoint(t);if(o<n){const n=new ir;Tu.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:a})}}Cu.prototype.isPoints=!0;class ku extends Jn{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.format=void 0!==a?a:Ft,this.minFilter=void 0!==s?s:vt,this.magFilter=void 0!==i?i:vt,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){u.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;0=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}ku.prototype.isVideoTexture=!0;class Ru extends Jn{constructor(t,e,n){super({width:t,height:e}),this.format=n,this.magFilter=ft,this.minFilter=ft,this.generateMipmaps=!1,this.needsUpdate=!0}}Ru.prototype.isFramebufferTexture=!0;class Nu extends Jn{constructor(t,e,n,r,i,s,a,o,l,u,c,h){super(null,s,a,o,l,u,r,i,c,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Nu.prototype.isCompressedTexture=!0;class Lu extends Jn{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.needsUpdate=!0}}Lu.prototype.isCanvasTexture=!0;class Du extends Xi{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],s=[],a=[],o=[],l=new ir,u=new qn;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let c=0,h=3;c<=e;c++,h+=3){const i=n+c/e*r;l.x=t*Math.cos(i),l.y=t*Math.sin(i),s.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(s[h]/t+1)/2,u.y=(s[h+1]/t+1)/2,o.push(u.x,u.y)}for(let c=1;c<=e;c++)i.push(c,c+1,0);this.setIndex(i),this.setAttribute("position",new Bi(s,3)),this.setAttribute("normal",new Bi(a,3)),this.setAttribute("uv",new Bi(o,2))}static fromJSON(t){return new Du(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Pu extends Xi{constructor(t=1,e=1,n=1,r=8,i=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o};const l=this;r=Math.floor(r),i=Math.floor(i);const u=[],c=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function y(n){const i=p,s=new qn,f=new ir;let y=0;const x=!0===n?t:e,v=!0===n?1:-1;for(let t=1;t<=r;t++)c.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const b=p;for(let t=0;t<=r;t++){const e=t/r*o+a,n=Math.cos(e),i=Math.sin(e);f.x=x*i,f.y=m*v,f.z=x*n,c.push(f.x,f.y,f.z),h.push(0,v,0),s.x=.5*n+.5,s.y=.5*i*v+.5,d.push(s.x,s.y),p++}for(let t=0;t<r;t++){const e=i+t,r=b+t;!0===n?u.push(r,r+1,e):u.push(r+1,r,e),y+=3}l.addGroup(g,y,!0===n?1:2),g+=y}!function(){const s=new ir,y=new ir;let x=0;const v=(e-t)/n;for(let l=0;l<=i;l++){const u=[],g=l/i,x=g*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*o+a,l=Math.sin(i),f=Math.cos(i);y.x=x*l,y.y=-g*n+m,y.z=x*f,c.push(y.x,y.y,y.z),s.set(l,v,f).normalize(),h.push(s.x,s.y,s.z),d.push(e,1-g),u.push(p++)}f.push(u)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){const n=f[e][t],r=f[e+1][t],i=f[e+1][t+1],s=f[e][t+1];u.push(n,r,s),u.push(r,i,s),x+=6}l.addGroup(g,x,0),g+=x}(),!1===s&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Bi(c,3)),this.setAttribute("normal",new Bi(h,3)),this.setAttribute("uv",new Bi(d,2))}static fromJSON(t){return new Pu(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Ou extends Pu{constructor(t=1,e=1,n=8,r=1,i=!1,s=0,a=2*Math.PI){super(0,t,e,n,r,i,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:a}}static fromJSON(t){return new Ou(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Fu extends Xi{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],s=[];function a(t,e,n,r){const i=r+1,s=[];for(let a=0;a<=i;a++){s[a]=[];const r=t.clone().lerp(n,a/i),o=e.clone().lerp(n,a/i),l=i-a;for(let t=0;t<=l;t++)s[a][t]=0===t&&a===i?r:r.clone().lerp(o,t/l)}for(let a=0;a<i;a++)for(let t=0;t<2*(i-a)-1;t++){const e=Math.floor(t/2);t%2==0?(o(s[a][e+1]),o(s[a+1][e]),o(s[a][e])):(o(s[a][e+1]),o(s[a+1][e+1]),o(s[a+1][e]))}}function o(t){i.push(t.x,t.y,t.z)}function l(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function u(t,e,n,r){r<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=r/2/Math.PI+.5)}function c(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new ir,r=new ir,i=new ir;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],r),l(e[s+2],i),a(n,r,i,t)}(r),function(t){const e=new ir;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){const t=new ir;for(let n=0;n<i.length;n+=3){t.x=i[n+0],t.y=i[n+1],t.z=i[n+2];const r=c(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(r,1-a)}var e;(function(){const t=new ir,e=new ir,n=new ir,r=new ir,a=new qn,o=new qn,l=new qn;for(let h=0,d=0;h<i.length;h+=9,d+=6){t.set(i[h+0],i[h+1],i[h+2]),e.set(i[h+3],i[h+4],i[h+5]),n.set(i[h+6],i[h+7],i[h+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),r.copy(t).add(e).add(n).divideScalar(3);const p=c(r);u(a,d+0,t,p),u(o,d+2,e,p),u(l,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],r=s[t+4],i=Math.max(e,n,r),a=Math.min(e,n,r);i>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Bi(i,3)),this.setAttribute("normal",new Bi(i.slice(),3)),this.setAttribute("uv",new Bi(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new Fu(t.vertices,t.indices,t.radius,t.details)}}class zu extends Fu{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new zu(t.radius,t.detail)}}const Bu=new ir,Uu=new ir,$u=new ir,qu=new yi;class Vu extends Xi{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,r=Math.pow(10,n),i=Math.cos(Nn*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],u=["a","b","c"],c=new Array(3),h={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=qu;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),qu.getNormal($u),c[0]=`${Math.round(e.x*r)},${Math.round(e.y*r)},${Math.round(e.z*r)}`,c[1]=`${Math.round(n.x*r)},${Math.round(n.y*r)},${Math.round(n.z*r)}`,c[2]=`${Math.round(o.x*r)},${Math.round(o.y*r)},${Math.round(o.z*r)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=c[t],r=c[e],s=qu[u[t]],a=qu[u[e]],o=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?($u.dot(h[p].normal)<=i&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:$u.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];Bu.fromBufferAttribute(a,e),Uu.fromBufferAttribute(a,n),d.push(Bu.x,Bu.y,Bu.z),d.push(Uu.x,Uu.y,Uu.z)}this.setAttribute("position",new Bi(d,3))}}}class Hu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let s;s=e||t*n[i-1];let a,o=0,l=i-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),a=n[r]-s,a<0)o=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(r=l,n[r]===s)return r/(i-1);const u=n[r];return(r+(s-u)/(n[r+1]-u))/(i-1)}getTangent(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const s=this.getPoint(r),a=this.getPoint(i),o=e||(s.isVector2?new qn:new ir);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new ir,r=[],i=[],s=[],a=new ir,o=new Pr;for(let d=0;d<=t;d++){const e=d/t;r[d]=this.getTangentAt(e,new ir)}i[0]=new ir,s[0]=new ir;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],a),s[0].crossVectors(r[0],i[0]);for(let d=1;d<=t;d++){if(i[d]=i[d-1].clone(),s[d]=s[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(Pn(r[d-1].dot(r[d]),-1,1));i[d].applyMatrix4(o.makeRotationAxis(a,t))}s[d].crossVectors(r[d],i[d])}if(!0===e){let e=Math.acos(Pn(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(a.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],e*n)),s[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Wu extends Hu{constructor(t=0,e=0,n=1,r=1,i=0,s=2*Math.PI,a=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new qn,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const s=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=s?0:r),!0!==this.aClockwise||s||(i===r?i=-r:i-=r);const a=this.aStartAngle+t*i;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Wu.prototype.isEllipseCurve=!0;class Gu extends Wu{constructor(t,e,n,r,i,s){super(t,e,n,n,r,i,s),this.type="ArcCurve"}}function ju(){let t=0,e=0,n=0,r=0;function i(i,s,a,o){t=i,e=a,n=-3*i+3*s-2*a-o,r=2*i-2*s+a+o}return{initCatmullRom:function(t,e,n,r,s){i(e,n,s*(n-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,u=(n-e)/a-(r-e)/(a+o)+(r-n)/o;l*=a,u*=a,i(e,n,l,u)},calc:function(i){const s=i*i;return t+e*i+n*s+r*(s*i)}}}Gu.prototype.isArcCurve=!0;const Xu=new ir,Yu=new ju,Ku=new ju,Ju=new ju;class Zu extends Hu{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new ir){const n=e,r=this.points,i=r.length,s=(i-(this.closed?0:1))*t;let a,o,l=Math.floor(s),u=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===u&&l===i-1&&(l=i-2,u=1),this.closed||l>0?a=r[(l-1)%i]:(Xu.subVectors(r[0],r[1]).add(r[0]),a=Xu);const c=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(Xu.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=Xu),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(c),t),n=Math.pow(c.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Yu.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,e,n,r),Ku.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,e,n,r),Ju.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,e,n,r)}else"catmullrom"===this.curveType&&(Yu.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Ku.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),Ju.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return n.set(Yu.calc(u),Ku.calc(u),Ju.calc(u)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ir).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Qu(t,e,n,r,i){const s=.5*(r-e),a=.5*(i-n),o=t*t;return(2*n-2*r+s+a)*(t*o)+(-3*n+3*r-2*s-a)*o+s*t+n}function tc(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function ec(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}Zu.prototype.isCatmullRomCurve3=!0;class nc extends Hu{constructor(t=new qn,e=new qn,n=new qn,r=new qn){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new qn){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(ec(t,r.x,i.x,s.x,a.x),ec(t,r.y,i.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}nc.prototype.isCubicBezierCurve=!0;class rc extends Hu{constructor(t=new ir,e=new ir,n=new ir,r=new ir){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ir){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(ec(t,r.x,i.x,s.x,a.x),ec(t,r.y,i.y,s.y,a.y),ec(t,r.z,i.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}rc.prototype.isCubicBezierCurve3=!0;class ic extends Hu{constructor(t=new qn,e=new qn){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new qn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new qn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}ic.prototype.isLineCurve=!0;class sc extends Hu{constructor(t=new ir,e=new ir){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new ir){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ac extends Hu{constructor(t=new qn,e=new qn,n=new qn){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new qn){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(tc(t,r.x,i.x,s.x),tc(t,r.y,i.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}ac.prototype.isQuadraticBezierCurve=!0;class oc extends Hu{constructor(t=new ir,e=new ir,n=new ir){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ir){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(tc(t,r.x,i.x,s.x),tc(t,r.y,i.y,s.y),tc(t,r.z,i.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}oc.prototype.isQuadraticBezierCurve3=!0;class lc extends Hu{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new qn){const n=e,r=this.points,i=(r.length-1)*t,s=Math.floor(i),a=i-s,o=r[0===s?s:s-1],l=r[s],u=r[s>r.length-2?r.length-1:s+1],c=r[s>r.length-3?r.length-1:s+2];return n.set(Qu(a,o.x,l.x,u.x,c.x),Qu(a,o.y,l.y,u.y,c.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new qn).fromArray(n))}return this}}lc.prototype.isSplineCurve=!0;var uc=Object.freeze({__proto__:null,ArcCurve:Gu,CatmullRomCurve3:Zu,CubicBezierCurve:nc,CubicBezierCurve3:rc,EllipseCurve:Wu,LineCurve:ic,LineCurve3:sc,QuadraticBezierCurve:ac,QuadraticBezierCurve3:oc,SplineCurve:lc});class cc extends Hu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new ic(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){const t=r[i]-n,s=this.curves[i],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const s=i[r],a=s&&s.isEllipseCurve?2*t:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const r=o[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new uc[n.type]).fromJSON(n))}return this}}class hc extends cc{constructor(t){super(),this.type="Path",this.currentPoint=new qn,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new ic(this.currentPoint.clone(),new qn(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new ac(this.currentPoint.clone(),new qn(t,e),new qn(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,s){const a=new nc(this.currentPoint.clone(),new qn(t,e),new qn(n,r),new qn(i,s));return this.curves.push(a),this.currentPoint.set(i,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new lc(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,r,i,s),this}absarc(t,e,n,r,i,s){return this.absellipse(t,e,n,n,r,i,s),this}ellipse(t,e,n,r,i,s,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+l,e+u,n,r,i,s,a,o),this}absellipse(t,e,n,r,i,s,a,o){const l=new Wu(t,e,n,r,i,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class dc extends hc{constructor(t){super(t),this.uuid=Dn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new hc).fromJSON(n))}return this}}function pc(t,e,n,r,i){let s,a;if(i===function(t,e,n,r){let i=0;for(let s=e,a=n-r;s<n;s+=r)i+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return i}(t,e,n,r)>0)for(s=e;s<n;s+=r)a=Dc(s,t[s],t[s+1],a);else for(s=n-r;s>=e;s-=r)a=Dc(s,t[s],t[s+1],a);return a&&Cc(a,a.next)&&(Pc(a),a=a.next),a}function fc(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!Cc(r,r.next)&&0!==Ac(r.prev,r,r.next))r=r.next;else{if(Pc(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function mc(t,e,n,r,i,s,a){if(!t)return;!a&&s&&function(t,e,n,r){let i=t;do{null===i.z&&(i.z=Sc(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n,r,i,s,a,o,l,u=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,r=n,o=0,e=0;e<u&&(o++,r=r.nextZ,r);e++);for(l=u;o>0||l>0&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),s?s.nextZ=i:t=i,i.prevZ=s,s=i;n=r}s.nextZ=null,u*=2}while(a>1)}(i)}(t,r,i,s);let o,l,u=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?yc(t,r,i,s):gc(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),Pc(t),t=l.next,u=l.next;else if((t=l)===u){a?1===a?mc(t=xc(fc(t),e,n),e,n,r,i,s,2):2===a&&vc(t,e,n,r,i,s):mc(fc(t),e,n,r,i,s,1);break}}function gc(t){const e=t.prev,n=t,r=t.next;if(Ac(e,n,r)>=0)return!1;let i=t.next.next;for(;i!==t.prev;){if(Tc(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Ac(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function yc(t,e,n,r){const i=t.prev,s=t,a=t.next;if(Ac(i,s,a)>=0)return!1;const o=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,l=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,u=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,c=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,h=Sc(o,l,e,n,r),d=Sc(u,c,e,n,r);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=h&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Tc(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Ac(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Tc(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&Ac(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=h;){if(p!==t.prev&&p!==t.next&&Tc(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Ac(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Tc(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&Ac(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function xc(t,e,n){let r=t;do{const i=r.prev,s=r.next.next;!Cc(i,s)&&Ic(i,r,r.next,s)&&Nc(i,s)&&Nc(s,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(s.i/n),Pc(r),Pc(r.next),r=t=s),r=r.next}while(r!==t);return fc(r)}function vc(t,e,n,r,i,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&Ec(a,t)){let o=Lc(a,t);return a=fc(a,a.next),o=fc(o,o.next),mc(a,e,n,r,i,s),void mc(o,e,n,r,i,s)}t=t.next}a=a.next}while(a!==t)}function bc(t,e){return t.x-e.x}function wc(t,e){if(e=function(t,e){let n=e;const r=t.x,i=t.y;let s,a=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>a){if(a=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(r===a)return s;const o=s,l=s.x,u=s.y;let c,h=1/0;n=s;do{r>=n.x&&n.x>=l&&r!==n.x&&Tc(i<u?r:a,i,l,u,i<u?a:r,i,n.x,n.y)&&(c=Math.abs(i-n.y)/(r-n.x),Nc(n,t)&&(c<h||c===h&&(n.x>s.x||n.x===s.x&&_c(s,n)))&&(s=n,h=c)),n=n.next}while(n!==o);return s}(t,e)){const n=Lc(e,t);fc(e,e.next),fc(n,n.next)}}function _c(t,e){return Ac(t.prev,t,e.prev)<0&&Ac(e.next,t,t.next)<0}function Sc(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Mc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Tc(t,e,n,r,i,s,a,o){return(i-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(r-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(i-a)*(r-o)>=0}function Ec(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ic(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Nc(t,e)&&Nc(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(Ac(t.prev,t,e.prev)||Ac(t,e.prev,e))||Cc(t,e)&&Ac(t.prev,t,t.next)>0&&Ac(e.prev,e,e.next)>0)}function Ac(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Cc(t,e){return t.x===e.x&&t.y===e.y}function Ic(t,e,n,r){const i=Rc(Ac(t,e,n)),s=Rc(Ac(t,e,r)),a=Rc(Ac(n,r,t)),o=Rc(Ac(n,r,e));return i!==s&&a!==o||!(0!==i||!kc(t,n,e))||!(0!==s||!kc(t,r,e))||!(0!==a||!kc(n,t,r))||!(0!==o||!kc(n,e,r))}function kc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Rc(t){return t>0?1:t<0?-1:0}function Nc(t,e){return Ac(t.prev,t,t.next)<0?Ac(t,e,t.next)>=0&&Ac(t,t.prev,e)>=0:Ac(t,e,t.prev)<0||Ac(t,t.next,e)<0}function Lc(t,e){const n=new Oc(t.i,t.x,t.y),r=new Oc(e.i,e.x,e.y),i=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,s.next=r,r.prev=s,r}function Dc(t,e,n,r){const i=new Oc(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Pc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Oc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Fc{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return Fc.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];zc(t),Bc(n,t);let s=t.length;e.forEach(zc);for(let o=0;o<e.length;o++)r.push(s),s+=e[o].length,Bc(n,e[o]);const a=function(t,e,n=2){const r=e&&e.length,i=r?e[0]*n:t.length;let s=pc(t,0,i,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u,c,h,d,p;if(r&&(s=function(t,e,n,r){const i=[];let s,a,o,l,u;for(s=0,a=e.length;s<a;s++)o=e[s]*r,l=s<a-1?e[s+1]*r:t.length,u=pc(t,o,l,r,!1),u===u.next&&(u.steiner=!0),i.push(Mc(u));for(i.sort(bc),s=0;s<i.length;s++)wc(i[s],n),n=fc(n,n.next);return n}(t,e,s,n)),t.length>80*n){o=u=t[0],l=c=t[1];for(let e=n;e<i;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>u&&(u=h),d>c&&(c=d);p=Math.max(u-o,c-l),p=0!==p?1/p:0}return mc(s,a,n,o,l,p),a}(n,r);for(let o=0;o<a.length;o+=3)i.push(a.slice(o,o+3));return i}}function zc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Bc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Uc extends Xi{constructor(t=new dc([new qn(.5,.5),new qn(-.5,.5),new qn(-.5,-.5),new qn(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let a=0,o=t.length;a<o;a++)s(t[a]);function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,u=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:c-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:$c;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let g,y,x,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,y=f.computeFrenetFrames(o,!1),x=new ir,v=new ir,b=new ir),u||(p=0,c=0,h=0,d=0);const _=t.extractPoints(a);let S=_.shape;const M=_.holes;if(!Fc.isClockWise(S)){S=S.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];Fc.isClockWise(e)&&(M[t]=e.reverse())}}const T=Fc.triangulateShape(S,M),E=S;for(let e=0,n=M.length;e<n;e++){const t=M[e];S=S.concat(t)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const C=S.length,I=T.length;function k(t,e,n){let r,i,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,u=n.y-t.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=e.x-o/h,f=e.y+a/h,m=((n.x-u/d-p)*u-(n.y+l/d-f)*l)/(a*u-o*l);r=p+a*m-t.x,i=f+o*m-t.y;const g=r*r+i*i;if(g<=2)return new qn(r,i);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(u)&&(t=!0),t?(r=-o,i=a,s=Math.sqrt(c)):(r=a,i=o,s=Math.sqrt(c/2))}return new qn(r/s,i/s)}const R=[];for(let e=0,n=E.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),R[e]=k(E[e],E[r],E[i]);const N=[];let L,D=R.concat();for(let e=0,n=M.length;e<n;e++){const t=M[e];L=[];for(let e=0,n=t.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),L[e]=k(t[e],t[r],t[i]);N.push(L),D=D.concat(L)}for(let e=0;e<p;e++){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=E.length;e<i;e++){const t=A(E[e],R[e],r);F(t.x,t.y,-n)}for(let e=0,i=M.length;e<i;e++){const t=M[e];L=N[e];for(let e=0,i=t.length;e<i;e++){const i=A(t[e],L[e],r);F(i.x,i.y,-n)}}}const P=h+d;for(let e=0;e<C;e++){const t=u?A(S[e],D[e],P):S[e];w?(v.copy(y.normals[0]).multiplyScalar(t.x),x.copy(y.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(v).add(x),F(b.x,b.y,b.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const n=u?A(S[t],D[t],P):S[t];w?(v.copy(y.normals[e]).multiplyScalar(n.x),x.copy(y.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(v).add(x),F(b.x,b.y,b.z)):F(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=c*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=E.length;e<i;e++){const t=A(E[e],R[e],r);F(t.x,t.y,l+n)}for(let e=0,i=M.length;e<i;e++){const t=M[e];L=N[e];for(let e=0,i=t.length;e<i;e++){const i=A(t[e],L[e],r);w?F(i.x,i.y+g[o-1].y,g[o-1].x+n):F(i.x,i.y,l+n)}}}function O(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=C*t,s=C*(t+1);B(e+r+n,e+i+n,e+i+s,e+r+s)}}}function F(t,e,n){s.push(t),s.push(e),s.push(n)}function z(t,e,i){U(t),U(e),U(i);const s=r.length/3,a=m.generateTopUV(n,r,s-3,s-2,s-1);$(a[0]),$(a[1]),$(a[2])}function B(t,e,i,s){U(t),U(e),U(s),U(e),U(i),U(s);const a=r.length/3,o=m.generateSideWallUV(n,r,a-6,a-3,a-2,a-1);$(o[0]),$(o[1]),$(o[3]),$(o[1]),$(o[2]),$(o[3])}function U(t){r.push(s[3*t+0]),r.push(s[3*t+1]),r.push(s[3*t+2])}function $(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(u){let t=0,e=C*t;for(let n=0;n<I;n++){const t=T[n];z(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=C*t;for(let n=0;n<I;n++){const t=T[n];z(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<I;t++){const e=T[t];z(e[2],e[1],e[0])}for(let t=0;t<I;t++){const e=T[t];z(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;O(E,e),e+=E.length;for(let n=0,r=M.length;n<r;n++){const t=M[n];O(t,e),e+=t.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Bi(r,3)),this.setAttribute("uv",new Bi(i,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let r=0,i=t.length;r<i;r++){const e=t[r];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const r=e[t.shapes[i]];n.push(r)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new uc[r.type]).fromJSON(r)),new Uc(n,t.options)}}const $c={generateTopUV:function(t,e,n,r,i){const s=e[3*n],a=e[3*n+1],o=e[3*r],l=e[3*r+1],u=e[3*i],c=e[3*i+1];return[new qn(s,a),new qn(o,l),new qn(u,c)]},generateSideWallUV:function(t,e,n,r,i,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],u=e[3*r],c=e[3*r+1],h=e[3*r+2],d=e[3*i],p=e[3*i+1],f=e[3*i+2],m=e[3*s],g=e[3*s+1],y=e[3*s+2];return Math.abs(o-c)<Math.abs(a-u)?[new qn(a,1-l),new qn(u,1-h),new qn(d,1-f),new qn(m,1-y)]:[new qn(o,1-l),new qn(c,1-h),new qn(p,1-f),new qn(g,1-y)]}};class qc extends Fu{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new qc(t.radius,t.detail)}}class Vc extends Xi{constructor(t=[new qn(0,.5),new qn(.5,0),new qn(0,-.5)],e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=Pn(r,0,2*Math.PI);const i=[],s=[],a=[],o=[],l=[],u=1/e,c=new ir,h=new qn,d=new ir,p=new ir,f=new ir;let m=0,g=0;for(let y=0;y<=t.length-1;y++)switch(y){case 0:m=t[y+1].x-t[y].x,g=t[y+1].y-t[y].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:m=t[y+1].x-t[y].x,g=t[y+1].y-t[y].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let y=0;y<=e;y++){const i=n+y*u*r,d=Math.sin(i),p=Math.cos(i);for(let n=0;n<=t.length-1;n++){c.x=t[n].x*d,c.y=t[n].y,c.z=t[n].x*p,s.push(c.x,c.y,c.z),h.x=y/e,h.y=n/(t.length-1),a.push(h.x,h.y);const r=o[3*n+0]*d,i=o[3*n+1],u=o[3*n+0]*p;l.push(r,i,u)}}for(let y=0;y<e;y++)for(let e=0;e<t.length-1;e++){const n=e+y*t.length,r=n,s=n+t.length,a=n+t.length+1,o=n+1;i.push(r,s,o),i.push(s,a,o)}this.setIndex(i),this.setAttribute("position",new Bi(s,3)),this.setAttribute("uv",new Bi(a,2)),this.setAttribute("normal",new Bi(l,3))}static fromJSON(t){return new Vc(t.points,t.segments,t.phiStart,t.phiLength)}}class Hc extends Fu{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Hc(t.radius,t.detail)}}class Wc extends Xi{constructor(t=.5,e=1,n=8,r=1,i=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],u=[];let c=t;const h=(e-t)/(r=Math.max(1,r)),d=new ir,p=new qn;for(let f=0;f<=r;f++){for(let t=0;t<=n;t++){const r=i+t/n*s;d.x=c*Math.cos(r),d.y=c*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,u.push(p.x,p.y)}c+=h}for(let f=0;f<r;f++){const t=f*(n+1);for(let e=0;e<n;e++){const r=e+t,i=r,s=r+n+1,o=r+n+2,l=r+1;a.push(i,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Bi(o,3)),this.setAttribute("normal",new Bi(l,3)),this.setAttribute("uv",new Bi(u,2))}static fromJSON(t){return new Wc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Gc extends Xi{constructor(t=new dc([new qn(0,.5),new qn(-.5,-.5),new qn(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let u=0;u<t.length;u++)l(t[u]),this.addGroup(a,o,u),a+=o,o=0;function l(t){const a=r.length/3,l=t.extractPoints(e);let u=l.shape;const c=l.holes;!1===Fc.isClockWise(u)&&(u=u.reverse());for(let e=0,n=c.length;e<n;e++){const t=c[e];!0===Fc.isClockWise(t)&&(c[e]=t.reverse())}const h=Fc.triangulateShape(u,c);for(let e=0,n=c.length;e<n;e++){const t=c[e];u=u.concat(t)}for(let e=0,n=u.length;e<n;e++){const t=u[e];r.push(t.x,t.y,0),i.push(0,0,1),s.push(t.x,t.y)}for(let e=0,r=h.length;e<r;e++){const t=h[e],r=t[0]+a,i=t[1]+a,s=t[2]+a;n.push(r,i,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Bi(r,3)),this.setAttribute("normal",new Bi(i,3)),this.setAttribute("uv",new Bi(s,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}return new Gc(n,t.curveSegments)}}class jc extends Xi{constructor(t=1,e=32,n=16,r=0,i=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const u=[],c=new ir,h=new ir,d=[],p=[],f=[],m=[];for(let g=0;g<=n;g++){const d=[],y=g/n;let x=0;0==g&&0==s?x=.5/e:g==n&&o==Math.PI&&(x=-.5/e);for(let n=0;n<=e;n++){const o=n/e;c.x=-t*Math.cos(r+o*i)*Math.sin(s+y*a),c.y=t*Math.cos(s+y*a),c.z=t*Math.sin(r+o*i)*Math.sin(s+y*a),p.push(c.x,c.y,c.z),h.copy(c).normalize(),f.push(h.x,h.y,h.z),m.push(o+x,1-y),d.push(l++)}u.push(d)}for(let g=0;g<n;g++)for(let t=0;t<e;t++){const e=u[g][t+1],r=u[g][t],i=u[g+1][t],a=u[g+1][t+1];(0!==g||s>0)&&d.push(e,r,a),(g!==n-1||o<Math.PI)&&d.push(r,i,a)}this.setIndex(d),this.setAttribute("position",new Bi(p,3)),this.setAttribute("normal",new Bi(f,3)),this.setAttribute("uv",new Bi(m,2))}static fromJSON(t){return new jc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Xc extends Fu{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Xc(t.radius,t.detail)}}class Yc extends Xi{constructor(t=1,e=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const s=[],a=[],o=[],l=[],u=new ir,c=new ir,h=new ir;for(let d=0;d<=n;d++)for(let s=0;s<=r;s++){const p=s/r*i,f=d/n*Math.PI*2;c.x=(t+e*Math.cos(f))*Math.cos(p),c.y=(t+e*Math.cos(f))*Math.sin(p),c.z=e*Math.sin(f),a.push(c.x,c.y,c.z),u.x=t*Math.cos(p),u.y=t*Math.sin(p),h.subVectors(c,u).normalize(),o.push(h.x,h.y,h.z),l.push(s/r),l.push(d/n)}for(let d=1;d<=n;d++)for(let t=1;t<=r;t++){const e=(r+1)*d+t-1,n=(r+1)*(d-1)+t-1,i=(r+1)*(d-1)+t,a=(r+1)*d+t;s.push(e,n,a),s.push(n,i,a)}this.setIndex(s),this.setAttribute("position",new Bi(a,3)),this.setAttribute("normal",new Bi(o,3)),this.setAttribute("uv",new Bi(l,2))}static fromJSON(t){return new Yc(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Kc extends Xi{constructor(t=1,e=.4,n=64,r=8,i=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:s},n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],u=[],c=new ir,h=new ir,d=new ir,p=new ir,f=new ir,m=new ir,g=new ir;for(let x=0;x<=n;++x){const a=x/n*i*Math.PI*2;y(a,i,s,t,d),y(a+.01,i,s,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,s=-e*Math.cos(i),a=e*Math.sin(i);c.x=d.x+(s*g.x+a*f.x),c.y=d.y+(s*g.y+a*f.y),c.z=d.z+(s*g.z+a*f.z),o.push(c.x,c.y,c.z),h.subVectors(c,d).normalize(),l.push(h.x,h.y,h.z),u.push(x/n),u.push(t/r)}}for(let x=1;x<=n;x++)for(let t=1;t<=r;t++){const e=(r+1)*(x-1)+(t-1),n=(r+1)*x+(t-1),i=(r+1)*x+t,s=(r+1)*(x-1)+t;a.push(e,n,s),a.push(n,i,s)}function y(t,e,n,r,i){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);i.x=r*(2+l)*.5*s,i.y=r*(2+l)*a*.5,i.z=r*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Bi(o,3)),this.setAttribute("normal",new Bi(l,3)),this.setAttribute("uv",new Bi(u,2))}static fromJSON(t){return new Kc(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Jc extends Xi{constructor(t=new oc(new ir(-1,-1,0),new ir(-1,1,0),new ir(1,1,0)),e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const s=t.computeFrenetFrames(e,i);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new ir,o=new ir,l=new qn;let u=new ir;const c=[],h=[],d=[],p=[];function f(i){u=t.getPointAt(i/e,u);const l=s.normals[i],d=s.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+i*d.x,o.y=s*l.y+i*d.y,o.z=s*l.z+i*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=u.x+n*o.x,a.y=u.y+n*o.y,a.z=u.z+n*o.z,c.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===i?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)l.x=t/e,l.y=n/r,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,a=(r+1)*(t-1)+e;p.push(n,i,a),p.push(i,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Bi(c,3)),this.setAttribute("normal",new Bi(h,3)),this.setAttribute("uv",new Bi(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Jc((new uc[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Zc extends Xi{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,r=new ir,i=new ir;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],u=l.start;for(let t=u,o=u+l.count;t<o;t+=3)for(let l=0;l<3;l++){const o=a.getX(t+l),u=a.getX(t+(l+1)%3);r.fromBufferAttribute(s,o),i.fromBufferAttribute(s,u),!0===Qc(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let o=0;o<3;o++){const a=3*t+o,l=3*t+(o+1)%3;r.fromBufferAttribute(s,a),i.fromBufferAttribute(s,l),!0===Qc(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}this.setAttribute("position",new Bi(e,3))}}}function Qc(t,e,n){const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r,i),!0)}var th=Object.freeze({__proto__:null,BoxGeometry:fs,BoxBufferGeometry:fs,CircleGeometry:Du,CircleBufferGeometry:Du,ConeGeometry:Ou,ConeBufferGeometry:Ou,CylinderGeometry:Pu,CylinderBufferGeometry:Pu,DodecahedronGeometry:zu,DodecahedronBufferGeometry:zu,EdgesGeometry:Vu,ExtrudeGeometry:Uc,ExtrudeBufferGeometry:Uc,IcosahedronGeometry:qc,IcosahedronBufferGeometry:qc,LatheGeometry:Vc,LatheBufferGeometry:Vc,OctahedronGeometry:Hc,OctahedronBufferGeometry:Hc,PlaneGeometry:Ds,PlaneBufferGeometry:Ds,PolyhedronGeometry:Fu,PolyhedronBufferGeometry:Fu,RingGeometry:Wc,RingBufferGeometry:Wc,ShapeGeometry:Gc,ShapeBufferGeometry:Gc,SphereGeometry:jc,SphereBufferGeometry:jc,TetrahedronGeometry:Xc,TetrahedronBufferGeometry:Xc,TorusGeometry:Yc,TorusBufferGeometry:Yc,TorusKnotGeometry:Kc,TorusKnotBufferGeometry:Kc,TubeGeometry:Jc,TubeBufferGeometry:Jc,WireframeGeometry:Zc});class eh extends vi{constructor(t){super(),this.type="ShadowMaterial",this.color=new Ei(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}eh.prototype.isShadowMaterial=!0;class nh extends vi{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ei(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ei(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new qn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}nh.prototype.isMeshStandardMaterial=!0;class rh extends nh{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new qn(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Pn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Ei(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Ei(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ei(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}rh.prototype.isMeshPhysicalMaterial=!0;class ih extends vi{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Ei(16777215),this.specular=new Ei(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ei(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new qn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}ih.prototype.isMeshPhongMaterial=!0;class sh extends vi{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ei(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ei(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new qn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}sh.prototype.isMeshToonMaterial=!0;class ah extends vi{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new qn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}ah.prototype.isMeshNormalMaterial=!0;class oh extends vi{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Ei(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ei(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Y,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}oh.prototype.isMeshLambertMaterial=!0;class lh extends vi{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ei(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qe,this.normalScale=new qn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}lh.prototype.isMeshMatcapMaterial=!0;class uh extends du{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}uh.prototype.isLineDashedMaterial=!0;var ch=Object.freeze({__proto__:null,ShadowMaterial:eh,SpriteMaterial:kl,RawShaderMaterial:Ws,ShaderMaterial:xs,PointsMaterial:Su,MeshPhysicalMaterial:rh,MeshStandardMaterial:nh,MeshPhongMaterial:ih,MeshToonMaterial:sh,MeshNormalMaterial:ah,MeshLambertMaterial:oh,MeshDepthMaterial:ul,MeshDistanceMaterial:cl,MeshBasicMaterial:Ai,MeshMatcapMaterial:lh,LineDashedMaterial:uh,LineBasicMaterial:du,Material:vi});const hh={arraySlice:function(t,e,n){return hh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let r=0;r!==e;++r)n[r]=r;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let s=0,a=0;a!==r;++s){const r=n[s]*e;for(let n=0;n!==e;++n)i[a++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,s=t[0];for(;void 0!==s&&void 0===s[r];)s=t[i++];if(void 0===s)return;let a=s[r];if(void 0!==a)if(Array.isArray(a))do{a=s[r],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[i++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[r],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[i++]}while(void 0!==s);else do{a=s[r],void 0!==a&&(e.push(s.time),n.push(a)),s=t[i++]}while(void 0!==s)},subclip:function(t,e,n,r,i=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const t=s.tracks[l],e=t.getValueSize(),o=[],u=[];for(let s=0;s<t.times.length;++s){const a=t.times[s]*i;if(!(a<n||a>=r)){o.push(t.times[s]);for(let n=0;n<e;++n)u.push(t.values[s*e+n])}}0!==o.length&&(t.times=hh.convertArray(o,t.times.constructor),t.values=hh.convertArray(u,t.values.constructor),a.push(t))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,s=e/r;for(let a=0;a<i;++a){const e=n.tracks[a],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const i=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===r}));if(void 0===i)continue;let o=0;const l=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=e.times.length-1;let d;if(s<=e.times[0]){const t=o,n=l-o;d=hh.arraySlice(e.values,t,n)}else if(s>=e.times[h]){const t=h*l+o,n=t+l-o;d=hh.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=o,r=l-o;t.evaluate(s),d=hh.arraySlice(t.resultBuffer,n,r)}"quaternion"===r&&(new rr).fromArray(d).normalize().conjugate().toArray(d);const p=i.times.length;for(let t=0;t<p;++t){const e=t*c+u;if("quaternion"===r)rr.multiplyQuaternionsFlat(i.values,e,d,0,i.values,e);else{const t=c-2*u;for(let n=0;n<t;++n)i.values[e+n]-=d[n]}}}return t.blendMode=We,t}};class dh{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let s;n:{r:if(!(t<r)){for(let s=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===s)break;if(i=r,r=e[++n],t<r)break e}s=e.length;break n}if(t>=i)break t;{const a=e[1];t<a&&(n=2,i=a);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===s)break;if(r=i,i=e[--n-1],t>=i)break e}s=n,n=0}}for(;n<s;){const r=n+s>>>1;t<e[r]?s=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let s=0;s!==r;++s)e[s]=n[i+s];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}dh.prototype.beforeStart_=dh.prototype.copySampleValue_,dh.prototype.afterEnd_=dh.prototype.copySampleValue_;class ph extends dh{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:$e,endingEnd:$e}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,s=t+1,a=r[i],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case qe:i=t,a=2*e-n;break;case Ve:i=r.length-2,a=e+r[i]-r[i+1];break;default:i=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case qe:s=t,o=2*n-e;break;case Ve:s=1,o=n+r[1]-r[0];break;default:s=t-1,o=e}const l=.5*(n-e),u=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=s*u}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let b=0;b!==a;++b)i[b]=g*s[u+b]+y*s[l+b]+x*s[o+b]+v*s[c+b];return i}}class fh extends dh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=(n-e)/(r-e),c=1-u;for(let h=0;h!==a;++h)i[h]=s[l+h]*c+s[o+h]*u;return i}}class mh extends dh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class gh{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=hh.convertArray(e,this.TimeBufferType),this.values=hh.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:hh.convertArray(t.times,Array),values:hh.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new mh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new fh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ph(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ze:e=this.InterpolantFactoryMethodDiscrete;break;case Be:e=this.InterpolantFactoryMethodLinear;break;case Ue:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ze;case this.InterpolantFactoryMethodLinear:return Be;case this.InterpolantFactoryMethodSmooth:return Ue}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const t=this.getValueSize();this.times=hh.arraySlice(n,i,s),this.values=hh.arraySlice(this.values,i*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let a=0;a!==i;a++){const e=n[a];if("number"==typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,e),t=!1;break}if(null!==s&&s>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,e,s),t=!1;break}s=e}if(void 0!==r&&hh.isTypedArray(r))for(let a=0,o=r.length;a!==o;++a){const e=r[a];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,e),t=!1;break}}return t}optimize(){const t=hh.arraySlice(this.times),e=hh.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Ue,i=t.length-1;let s=1;for(let a=1;a<i;++a){let i=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(r)i=!0;else{const t=a*n,r=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[r+a]||n!==e[s+a]){i=!0;break}}}if(i){if(a!==s){t[s]=t[a];const r=a*n,i=s*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++s}}if(i>0){t[s]=t[i];for(let t=i*n,r=s*n,a=0;a!==n;++a)e[r+a]=e[t+a];++s}return s!==t.length?(this.times=hh.arraySlice(t,0,s),this.values=hh.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=hh.arraySlice(this.times,0),e=hh.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}gh.prototype.TimeBufferType=Float32Array,gh.prototype.ValueBufferType=Float32Array,gh.prototype.DefaultInterpolation=Be;class yh extends gh{}yh.prototype.ValueTypeName="bool",yh.prototype.ValueBufferType=Array,yh.prototype.DefaultInterpolation=ze,yh.prototype.InterpolantFactoryMethodLinear=void 0,yh.prototype.InterpolantFactoryMethodSmooth=void 0;class xh extends gh{}xh.prototype.ValueTypeName="color";class vh extends gh{}vh.prototype.ValueTypeName="number";class bh extends dh{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(r-e);let l=t*a;for(let u=l+a;l!==u;l+=4)rr.slerpFlat(i,0,s,l-a,s,l,o);return i}}class wh extends gh{InterpolantFactoryMethodLinear(t){return new bh(this.times,this.values,this.getValueSize(),t)}}wh.prototype.ValueTypeName="quaternion",wh.prototype.DefaultInterpolation=Be,wh.prototype.InterpolantFactoryMethodSmooth=void 0;class _h extends gh{}_h.prototype.ValueTypeName="string",_h.prototype.ValueBufferType=Array,_h.prototype.DefaultInterpolation=ze,_h.prototype.InterpolantFactoryMethodLinear=void 0,_h.prototype.InterpolantFactoryMethodSmooth=void 0;class Sh extends gh{}Sh.prototype.ValueTypeName="vector";class Mh{constructor(t,e=-1,n,r=He){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Dn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let s=0,a=n.length;s!==a;++s)e.push(Th(n[s]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,s=n.length;i!==s;++i)e.push(gh.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,s=[];for(let a=0;a<i;a++){let t=[],o=[];t.push((a+i-1)%i,a,(a+1)%i),o.push(0,1,0);const l=hh.getKeyframeOrder(t);t=hh.sortedArray(t,1,l),o=hh.sortedArray(o,1,l),r||0!==t[0]||(t.push(i),o.push(o[0])),s.push(new vh(".morphTargetInfluences["+e[a].name+"]",t,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let a=0,o=t.length;a<o;a++){const e=t[a],n=e.name.match(i);if(n&&n.length>1){const t=n[1];let i=r[t];i||(r[t]=i=[]),i.push(e)}}const s=[];for(const a in r)s.push(this.CreateFromMorphTargetSequence(a,r[a],e,n));return s}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const s=[],a=[];hh.flattenJSON(n,s,a,r),0!==s.length&&i.push(new t(e,s,a))}},r=[],i=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const t=l[u].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let r=0;r<t[n].morphTargets.length;r++)e[t[n].morphTargets[r]]=-1;for(const i in e){const e=[],s=[];for(let r=0;r!==t[n].morphTargets.length;++r){const r=t[n];e.push(r.time),s.push(r.morphTarget===i?1:0)}r.push(new vh(".morphTargetInfluence["+i+"]",e,s))}o=e.length*(s||1)}else{const i=".bones["+e[u].name+"]";n(Sh,i+".position",t,"pos",r),n(wh,i+".quaternion",t,"rot",r),n(Sh,i+".scale",t,"scl",r)}}return 0===r.length?null:new this(i,o,r,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Th(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return vh;case"vector":case"vector2":case"vector3":case"vector4":return Sh;case"color":return xh;case"quaternion":return wh;case"bool":case"boolean":return yh;case"string":return _h}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];hh.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Eh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Ah{constructor(t,e,n){const r=this;let i,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==r.onStart&&r.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const Ch=new Ah;class Ih{constructor(t){this.manager=void 0!==t?t:Ch,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const kh={};class Rh extends Ih{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=Eh.get(t);if(void 0!==i)return this.manager.itemStart(t),setTimeout(()=>{e&&e(i),this.manager.itemEnd(t)},0),i;if(void 0!==kh[t])return void kh[t].push({onLoad:e,onProgress:n,onError:r});kh[t]=[],kh[t].push({onLoad:e,onProgress:n,onError:r});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(s).then(e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body.getReader)return e;const n=kh[t],r=e.body.getReader(),i=e.headers.get("Content-Length"),s=i?parseInt(i):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){r.read().then(({done:r,value:i})=>{if(r)t.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(r)}t.enqueue(i),e()}})}()}});return new Response(l)}throw Error(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`)}).then(t=>{switch(this.responseType){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then(t=>(new DOMParser).parseFromString(t,this.mimeType));case"json":return t.json();default:return t.text()}}).then(e=>{Eh.add(t,e);const n=kh[t];delete kh[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onLoad&&r.onLoad(e)}}).catch(e=>{const n=kh[t];if(void 0===n)throw this.manager.itemError(t),e;delete kh[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Nh extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Rh(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=Mh.parse(t[n]);e.push(r)}return e}}class Lh extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=[],a=new Nu,o=new Rh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function u(u){o.load(t[u],(function(t){const n=i.parse(t,!0);s[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=vt),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))}),n,r)}if(Array.isArray(t))for(let c=0,h=t.length;c<h;++c)u(c);else o.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=vt),a.format=n.format,a.needsUpdate=!0,e&&e(a)}),n,r);return a}}class Dh extends Ih{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=Eh.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a=jn("img");function o(){u(),Eh.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){u(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(t),a.src=t,a}}class Ph extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=new Ss,s=new Dh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],(function(t){i.images[n]=t,a++,6===a&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let l=0;l<t.length;++l)o(l);return i}}class Oh extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new nu,a=new Rh(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(i.withCredentials),a.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:dt,s.wrapT=void 0!==n.wrapT?n.wrapT:dt,s.magFilter=void 0!==n.magFilter?n.magFilter:vt,s.minFilter=void 0!==n.minFilter?n.minFilter:vt,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=_t),1===n.mipmapCount&&(s.minFilter=vt),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,r),s}}class Fh extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=new Jn,s=new Dh(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){i.image=t,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class zh extends ai{constructor(t,e=1){super(),this.type="Light",this.color=new Ei(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}zh.prototype.isLight=!0;class Bh extends zh{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(ai.DefaultUp),this.updateMatrix(),this.groundColor=new Ei(e)}copy(t){return zh.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}Bh.prototype.isHemisphereLight=!0;const Uh=new Pr,$h=new ir,qh=new ir;class Vh{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new qn(512,512),this.map=null,this.mapPass=null,this.matrix=new Pr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Rs,this._frameExtents=new qn(1,1),this._viewportCount=1,this._viewports=[new Qn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;$h.setFromMatrixPosition(t.matrixWorld),e.position.copy($h),qh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(qh),e.updateMatrixWorld(),Uh.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Uh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Hh extends Vh{constructor(){super(new bs(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Ln*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Hh.prototype.isSpotLightShadow=!0;class Wh extends zh{constructor(t,e,n=0,r=Math.PI/3,i=0,s=1){super(t,e),this.type="SpotLight",this.position.copy(ai.DefaultUp),this.updateMatrix(),this.target=new ai,this.distance=n,this.angle=r,this.penumbra=i,this.decay=s,this.shadow=new Hh}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Wh.prototype.isSpotLight=!0;const Gh=new Pr,jh=new ir,Xh=new ir;class Yh extends Vh{constructor(){super(new bs(90,1,.5,500)),this._frameExtents=new qn(4,2),this._viewportCount=6,this._viewports=[new Qn(2,1,1,1),new Qn(0,1,1,1),new Qn(3,1,1,1),new Qn(1,1,1,1),new Qn(3,0,1,1),new Qn(1,0,1,1)],this._cubeDirections=[new ir(1,0,0),new ir(-1,0,0),new ir(0,0,1),new ir(0,0,-1),new ir(0,1,0),new ir(0,-1,0)],this._cubeUps=[new ir(0,1,0),new ir(0,1,0),new ir(0,1,0),new ir(0,1,0),new ir(0,0,1),new ir(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),jh.setFromMatrixPosition(t.matrixWorld),n.position.copy(jh),Xh.copy(n.position),Xh.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Xh),n.updateMatrixWorld(),r.makeTranslation(-jh.x,-jh.y,-jh.z),Gh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gh)}}Yh.prototype.isPointLightShadow=!0;class Kh extends zh{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Yh}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Kh.prototype.isPointLight=!0;class Jh extends Vh{constructor(){super(new Hs(-5,5,5,-5,.5,500))}}Jh.prototype.isDirectionalLightShadow=!0;class Zh extends zh{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(ai.DefaultUp),this.updateMatrix(),this.target=new ai,this.shadow=new Jh}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Zh.prototype.isDirectionalLight=!0;class Qh extends zh{constructor(t,e){super(t,e),this.type="AmbientLight"}}Qh.prototype.isAmbientLight=!0;class td extends zh{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}td.prototype.isRectAreaLight=!0;class ed{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ir)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*r),e.addScaledVector(s[2],.488603*i),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*r*1.092548),e.addScaledVector(s[5],r*i*1.092548),e.addScaledVector(s[6],.315392*(3*i*i-1)),e.addScaledVector(s[7],n*i*1.092548),e.addScaledVector(s[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*r),e.addScaledVector(s[2],1.023328*i),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*r),e.addScaledVector(s[5],.858086*r*i),e.addScaledVector(s[6],.743125*i*i-.247708),e.addScaledVector(s[7],.858086*n*i),e.addScaledVector(s[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}ed.prototype.isSphericalHarmonics3=!0;class nd extends zh{constructor(t=new ed,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}nd.prototype.isLightProbe=!0;class rd extends Ih{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,s=new Rh(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new ch[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new Ei).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.format&&(r.format=t.format),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const i in t.uniforms){const e=t.uniforms[i];switch(r.uniforms[i]={},e.type){case"t":r.uniforms[i].value=n(e.value);break;case"c":r.uniforms[i].value=(new Ei).setHex(e.value);break;case"v2":r.uniforms[i].value=(new qn).fromArray(e.value);break;case"v3":r.uniforms[i].value=(new ir).fromArray(e.value);break;case"v4":r.uniforms[i].value=(new Qn).fromArray(e.value);break;case"m3":r.uniforms[i].value=(new Vn).fromArray(e.value);break;case"m4":r.uniforms[i].value=(new Pr).fromArray(e.value);break;default:r.uniforms[i].value=e.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const i in t.extensions)r.extensions[i]=t.extensions[i];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new qn).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new qn).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=n(t.thicknessMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=n(t.sheenRoughnessMap)),r}setTextures(t){return this.textures=t,this}}class id{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class sd extends Xi{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}sd.prototype.isInstancedBufferGeometry=!0;class ad extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Rh(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],s=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),a=Gn(i.type,s),o=new Al(a,i.stride);return o.uuid=i.uuid,e[r]=o,o}const i=t.isInstancedBufferGeometry?new sd:new Xi,s=t.data.index;if(void 0!==s){const t=Gn(s.type,s.array);i.setIndex(new ki(t,1))}const a=t.data.attributes;for(const c in a){const e=a[c];let n;if(e.isInterleavedBufferAttribute){const i=r(t.data,e.data);n=new Il(i,e.itemSize,e.offset,e.normalized)}else{const t=Gn(e.type,e.array);n=new(e.isInstancedBufferAttribute?au:ki)(t,e.itemSize,e.normalized)}void 0!==e.name&&(n.name=e.name),void 0!==e.usage&&n.setUsage(e.usage),void 0!==e.updateRange&&(n.updateRange.offset=e.updateRange.offset,n.updateRange.count=e.updateRange.count),i.setAttribute(c,n)}const o=t.data.morphAttributes;if(o)for(const c in o){const e=o[c],n=[];for(let i=0,s=e.length;i<s;i++){const s=e[i];let a;if(s.isInterleavedBufferAttribute){const e=r(t.data,s.data);a=new Il(e,s.itemSize,s.offset,s.normalized)}else{const t=Gn(s.type,s.array);a=new ki(t,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),n.push(a)}i.morphAttributes[c]=n}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let c=0,h=l.length;c!==h;++c){const t=l[c];i.addGroup(t.start,t.count,t.materialIndex)}const u=t.data.boundingSphere;if(void 0!==u){const t=new ir;void 0!==u.center&&t.fromArray(u.center),i.boundingSphere=new Er(t,u.radius)}return t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}class od extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=""===this.path?id.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new Rh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=s.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?i.parse(s,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)}async loadAsync(t,e){const n=""===this.path?id.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const r=new Rh(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const i=await r.loadAsync(t,e),s=JSON.parse(i),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,i,o,a,n),u=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,u),void 0!==e){let t=!1;for(const e in s)if(s[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),i=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,i),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,r,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new dc).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse((function(t){t.isBone&&(r[t.uuid]=t)})),void 0!==t)for(let i=0,s=t.length;i<s;i++){const e=(new su).fromJSON(t[i],r);n[e.uuid]=e}return n}parseGeometries(t,e){const n={};if(void 0!==t){const r=new ad;for(let i=0,s=t.length;i<s;i++){let s;const a=t[i];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in th?s=th[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new rd;i.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];if("MultiMaterial"===s.type){const t=[];for(let e=0;e<s.materials.length;e++){const r=s.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),t.push(n[r.uuid])}r[s.uuid]=t}else void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=Mh.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:Gn(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Ah(e);i=new Dh(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const n=t[e],i=n.url;if(Array.isArray(i)){r[n.uuid]=[];for(let t=0,e=i.length;t<e;t++){const e=s(i[t]);null!==e&&(e instanceof HTMLImageElement?r[n.uuid].push(e):r[n.uuid].push(new nu(e.data,e.width,e.height)))}}else{const t=s(n.url);null!==t&&(r[n.uuid]=t)}}}return r}async parseImagesAsync(t){const e=this,n={};let r;async function i(t){if("string"==typeof t){const n=t,i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await r.loadAsync(i)}return t.data?{data:Gn(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){r=new Dh(this.manager),r.setCrossOrigin(this.crossOrigin);for(let e=0,r=t.length;e<r;e++){const r=t[e],s=r.url;if(Array.isArray(s)){n[r.uuid]=[];for(let t=0,e=s.length;t<e;t++){const e=s[t],a=await i(e);null!==a&&(a instanceof HTMLImageElement?n[r.uuid].push(a):n[r.uuid].push(new nu(a.data,a.width,a.height)))}}else{const t=await i(r.url);null!==t&&(n[r.uuid]=t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,s=t.length;i<s;i++){const s=t[i];let a;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const o=e[s.image];Array.isArray(o)?(a=new Ss(o),6===o.length&&(a.needsUpdate=!0)):(a=o&&o.data?new nu(o.data,o.width,o.height):new Jn(o),o&&(a.needsUpdate=!0)),a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),void 0!==s.mapping&&(a.mapping=n(s.mapping,ld)),void 0!==s.offset&&a.offset.fromArray(s.offset),void 0!==s.repeat&&a.repeat.fromArray(s.repeat),void 0!==s.center&&a.center.fromArray(s.center),void 0!==s.rotation&&(a.rotation=s.rotation),void 0!==s.wrap&&(a.wrapS=n(s.wrap[0],ud),a.wrapT=n(s.wrap[1],ud)),void 0!==s.format&&(a.format=s.format),void 0!==s.type&&(a.type=s.type),void 0!==s.encoding&&(a.encoding=s.encoding),void 0!==s.minFilter&&(a.minFilter=n(s.minFilter,cd)),void 0!==s.magFilter&&(a.magFilter=n(s.magFilter,cd)),void 0!==s.anisotropy&&(a.anisotropy=s.anisotropy),void 0!==s.flipY&&(a.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(a.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(a.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(a.userData=s.userData),r[s.uuid]=a}return r}parseObject(t,e,n,r,i){let s,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function u(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function c(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),r[t]}switch(t.type){case"Scene":s=new El,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new Ei(t.background):s.background=c(t.background)),void 0!==t.environment&&(s.environment=c(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new Tl(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new Ml(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":s=new bs(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new Hs(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new Qh(t.color,t.intensity);break;case"DirectionalLight":s=new Zh(t.color,t.intensity);break;case"PointLight":s=new Kh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new td(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new Wh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":s=new Bh(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new nd).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=u(t.material),s=new tu(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=u(t.material),s=new ds(a,o);break;case"InstancedMesh":a=l(t.geometry),o=u(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;s=new hu(a,o,e),s.instanceMatrix=new au(new Float32Array(n.array),16),void 0!==r&&(s.instanceColor=new au(new Float32Array(r.array),r.itemSize));break;case"LOD":s=new Xl;break;case"Line":s=new xu(l(t.geometry),u(t.material));break;case"LineLoop":s=new _u(l(t.geometry),u(t.material));break;case"LineSegments":s=new wu(l(t.geometry),u(t.material));break;case"PointCloud":case"Points":s=new Cu(l(t.geometry),u(t.material));break;case"Sprite":s=new Hl(u(t.material));break;case"Group":s=new gl;break;case"Bone":s=new eu;break;default:s=new ai}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,r,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=s.getObjectByProperty("uuid",n.object);void 0!==r&&s.addLevel(r,n.distance)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const ld={UVMapping:it,CubeReflectionMapping:st,CubeRefractionMapping:at,EquirectangularReflectionMapping:ot,EquirectangularRefractionMapping:lt,CubeUVReflectionMapping:ut,CubeUVRefractionMapping:ct},ud={RepeatWrapping:ht,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:pt},cd={NearestFilter:ft,NearestMipmapNearestFilter:mt,NearestMipmapLinearFilter:yt,LinearFilter:vt,LinearMipmapNearestFilter:bt,LinearMipmapLinearFilter:_t};class hd extends Ih{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=Eh.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){Eh.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}let dd;hd.prototype.isImageBitmapLoader=!0;const pd={getContext:function(){return void 0===dd&&(dd=new(window.AudioContext||window.webkitAudioContext)),dd},setContext:function(t){dd=t}};class fd extends Ih{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Rh(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{const t=n.slice(0);pd.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}}class md extends nd{constructor(t,e,n=1){super(void 0,n);const r=(new Ei).set(t),i=(new Ei).set(e),s=new ir(r.r,r.g,r.b),a=new ir(i.r,i.g,i.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}md.prototype.isHemisphereLightProbe=!0;class gd extends nd{constructor(t,e=1){super(void 0,e);const n=(new Ei).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}gd.prototype.isAmbientLightProbe=!0;const yd=new Pr,xd=new Pr,vd=new Pr;class bd{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bs,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bs,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,vd.copy(t.projectionMatrix);const n=e.eyeSep/2,r=n*e.near/e.focus,i=e.near*Math.tan(Nn*e.fov*.5)/e.zoom;let s,a;xd.elements[12]=-n,yd.elements[12]=n,s=-i*e.aspect+r,a=i*e.aspect+r,vd.elements[0]=2*e.near/(a-s),vd.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(vd),s=-i*e.aspect-r,a=i*e.aspect-r,vd.elements[0]=2*e.near/(a-s),vd.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(vd)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(xd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(yd)}}class wd{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=_d(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=_d();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function _d(){return("undefined"==typeof performance?Date:performance).now()}const Sd=new ir,Md=new rr,Td=new ir,Ed=new ir;class Ad extends ai{constructor(){super(),this.type="AudioListener",this.context=pd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new wd}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Sd,Md,Td),Ed.set(0,0,-1).applyQuaternion(Md),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Sd.x,t),e.positionY.linearRampToValueAtTime(Sd.y,t),e.positionZ.linearRampToValueAtTime(Sd.z,t),e.forwardX.linearRampToValueAtTime(Ed.x,t),e.forwardY.linearRampToValueAtTime(Ed.y,t),e.forwardZ.linearRampToValueAtTime(Ed.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Sd.x,Sd.y,Sd.z),e.setOrientation(Ed.x,Ed.y,Ed.z,n.x,n.y,n.z)}}class Cd extends ai{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Id=new ir,kd=new rr,Rd=new ir,Nd=new ir;class Ld extends Cd{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Id,kd,Rd),Nd.set(0,0,1).applyQuaternion(kd);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Id.x,t),e.positionY.linearRampToValueAtTime(Id.y,t),e.positionZ.linearRampToValueAtTime(Id.z,t),e.orientationX.linearRampToValueAtTime(Nd.x,t),e.orientationY.linearRampToValueAtTime(Nd.y,t),e.orientationZ.linearRampToValueAtTime(Nd.z,t)}else e.setPosition(Id.x,Id.y,Id.z),e.setOrientation(Nd.x,Nd.y,Nd.z)}}class Dd{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Pd{constructor(t,e,n){let r,i,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==r;++t)n[i+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,s=r;i!==s;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let s=0;s!==i;++s)t[e+s]=t[n+s]}_slerp(t,e,n,r){rr.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const s=this._workIndex*i;rr.multiplyQuaternionsFlat(t,s,t,e,t,n),rr.slerpFlat(t,e,t,e,t,s,r)}_lerp(t,e,n,r,i){const s=1-r;for(let a=0;a!==i;++a){const i=e+a;t[i]=t[i]*s+t[n+a]*r}}_lerpAdditive(t,e,n,r,i){for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]+t[n+s]*r}}}const Od=new RegExp("[\\[\\]\\.:\\/]","g"),Fd="[^\\[\\]\\.:\\/]",zd="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Bd=/((?:WC+[\/:])*)/.source.replace("WC",Fd),Ud=/(WCOD+)?/.source.replace("WCOD",zd),$d=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fd),qd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fd),Vd=new RegExp("^"+Bd+Ud+$d+qd+"$"),Hd=["material","materials","bones"];class Wd{constructor(t,e,n){this.path=e,this.parsedPath=n||Wd.parseTrackName(e),this.node=Wd.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Wd.Composite(t,e,n):new Wd(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Od,"")}static parseTrackName(t){const e=Vd.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Hd.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const s=n(i.children);if(s)return s}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=Wd.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const s=t[r];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Wd.Composite=class{constructor(t,e,n){const r=n||Wd.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Wd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Wd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Wd.prototype.GetterByBindingType=[Wd.prototype._getValue_direct,Wd.prototype._getValue_array,Wd.prototype._getValue_arrayElement,Wd.prototype._getValue_toArray],Wd.prototype.SetterByBindingTypeAndVersioning=[[Wd.prototype._setValue_direct,Wd.prototype._setValue_direct_setNeedsUpdate,Wd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Wd.prototype._setValue_array,Wd.prototype._setValue_array_setNeedsUpdate,Wd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Wd.prototype._setValue_arrayElement,Wd.prototype._setValue_arrayElement_setNeedsUpdate,Wd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Wd.prototype._setValue_fromArray,Wd.prototype._setValue_fromArray_setNeedsUpdate,Wd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Gd{constructor(){this.uuid=Dn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,s=i.length;let a,o=t.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(c);for(let t=0,e=s;t!==e;++t)i[t].push(new Wd(c,n[t],r[t]))}else if(d<l){a=t[d];const o=--l,u=t[o];e[u.uuid]=d,t[d]=u,e[h]=o,t[o]=c;for(let t=0,e=s;t!==e;++t){const e=i[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new Wd(c,n[t],r[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=i){const s=i++,u=t[s];e[u.uuid]=l,t[l]=u,e[o]=s,t[s]=a;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[l]=r,e[s]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<i){const a=--i,o=t[a],u=--s,c=t[u];e[o.uuid]=l,t[l]=o,e[c.uuid]=a,t[a]=c,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],i=e[u];e[l]=r,e[a]=i,e.pop()}}else{const i=--s,a=t[i];i>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[l]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=i.length,n[t]=r,s.push(t),a.push(e),i.push(c);for(let h=u,d=o.length;h!==d;++h){const n=o[h];c[h]=new Wd(n,t,e)}return c}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),i[n]=i[a],i.pop(),r[n]=r[a],r.pop()}}}Gd.prototype.isAnimationObjectGroup=!0;class jd{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,s=i.length,a=new Array(s),o={endingStart:$e,endingEnd:$e};for(let l=0;l!==s;++l){const t=i[l].createInterpolant(null);a[l]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Oe,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,s=n/r;t.warp(1,i,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=i,o[1]=i+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case We:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);break;case He:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulate(r,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const s=n===Fe;if(0===t)return-1===i?r:s&&1==(1&i)?e-r:r;if(n===Pe){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(s&&1==(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=qe,r.endingEnd=qe):(r.endingStart=t?this.zeroSlopeAtStart?qe:$e:Ve,r.endingEnd=e?this.zeroSlopeAtEnd?qe:$e:Ve)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let s=this._weightInterpolant;null===s&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=i,o[0]=e,a[1]=i+t,o[1]=n,this}}class Xd extends In{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let c=0;c!==i;++c){const t=r[c],i=t.name;let l=u[i];if(void 0!==l)s[c]=l;else{if(l=s[c],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,i));continue}const r=e&&e._propertyBindings[c].binding.parsedPath;l=new Pd(Wd.create(n,i,r),t.ValueTypeName,t.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,i),s[c]=l}a[c].resultBuffer=l.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let s=i[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,s=this._actionsByClip,a=s[i],o=a.knownActions,l=o[o.length-1],u=t._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const t=e[n];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let s=r[e];void 0===s&&(s={},r[e]=s),s[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,a=s[r],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[i],0===Object.keys(a).length&&delete s[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new fh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let s="string"==typeof t?Mh.findByName(r,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:He),void 0!==o){const t=o.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const u=new jd(this,s,e,n);return this._bindAction(u,l),this._addInactiveAction(u,a,i),u}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?Mh.findByName(n,t):t,s=i?i.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),s=this._accuIndex^=1;for(let l=0;l!==n;++l)e[l]._update(r,t,i,s);const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,s=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,s._cacheIndex=i,e[i]=s,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const i in n){const t=n[i].actionByRoot[e];void 0!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const i in r){const t=r[i];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Xd.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Yd{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Yd(void 0===this.value.clone?this.value:this.value.clone())}}class Kd extends Al{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}Kd.prototype.isInstancedInterleavedBuffer=!0;class Jd{constructor(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Jd.prototype.isGLBufferAttribute=!0;class Zd{constructor(t,e,n=0,r=1/0){this.ray=new Dr(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new Gr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return tp(t,this,n,e),n.sort(Qd),n}intersectObjects(t,e=!0,n=[]){for(let r=0,i=t.length;r<i;r++)tp(t[r],this,n,e);return n.sort(Qd),n}}function Qd(t,e){return t.distance-e.distance}function tp(t,e,n,r){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===r){const r=t.children;for(let t=0,i=r.length;t<i;t++)tp(r[t],e,n,!0)}}class ep{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Pn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class np{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const rp=new qn;class ip{constructor(t=new qn(1/0,1/0),e=new qn(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=rp.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return rp.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}ip.prototype.isBox2=!0;const sp=new ir,ap=new ir;class op{constructor(t=new ir,e=new ir){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){sp.subVectors(t,this.start),ap.subVectors(this.end,this.start);const n=ap.dot(ap);let r=ap.dot(sp)/n;return e&&(r=Pn(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const lp=new ir;class up extends ai{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new Xi,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let s=0,a=1,o=32;s<o;s++,a++){const t=s/o*Math.PI*2,e=a/o*Math.PI*2;r.push(Math.cos(t),Math.sin(t),1,Math.cos(e),Math.sin(e),1)}n.setAttribute("position",new Bi(r,3));const i=new du({fog:!1,toneMapped:!1});this.cone=new wu(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),lp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(lp),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const cp=new ir,hp=new Pr,dp=new Pr;class pp extends wu{constructor(t){const e=fp(t),n=new Xi,r=[],i=[],s=new Ei(0,0,1),a=new Ei(0,1,0);for(let o=0;o<e.length;o++){const t=e[o];t.parent&&t.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(s.r,s.g,s.b),i.push(a.r,a.g,a.b))}n.setAttribute("position",new Bi(r,3)),n.setAttribute("color",new Bi(i,3)),super(n,new du({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");dp.copy(this.root.matrixWorld).invert();for(let i=0,s=0;i<e.length;i++){const t=e[i];t.parent&&t.parent.isBone&&(hp.multiplyMatrices(dp,t.matrixWorld),cp.setFromMatrixPosition(hp),r.setXYZ(s,cp.x,cp.y,cp.z),hp.multiplyMatrices(dp,t.parent.matrixWorld),cp.setFromMatrixPosition(hp),r.setXYZ(s+1,cp.x,cp.y,cp.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function fp(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,fp(t.children[n]));return e}class mp extends ds{constructor(t,e,n){super(new jc(e,4,2),new Ai({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const gp=new ir,yp=new Ei,xp=new Ei;class vp extends ai{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new Hc(e);r.rotateY(.5*Math.PI),this.material=new Ai({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),s=new Float32Array(3*i.count);r.setAttribute("color",new ki(s,3)),this.add(new ds(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");yp.copy(this.light.color),xp.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?yp:xp;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(gp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class bp extends wu{constructor(t=10,e=10,n=4473924,r=8947848){n=new Ei(n),r=new Ei(r);const i=e/2,s=t/e,a=t/2,o=[],l=[];for(let c=0,h=0,d=-a;c<=e;c++,d+=s){o.push(-a,0,d,a,0,d),o.push(d,0,-a,d,0,a);const t=c===i?n:r;t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3}const u=new Xi;u.setAttribute("position",new Bi(o,3)),u.setAttribute("color",new Bi(l,3)),super(u,new du({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class wp extends wu{constructor(t=10,e=16,n=8,r=64,i=4473924,s=8947848){i=new Ei(i),s=new Ei(s);const a=[],o=[];for(let u=0;u<=e;u++){const n=u/e*(2*Math.PI),r=Math.sin(n)*t,l=Math.cos(n)*t;a.push(0,0,0),a.push(r,0,l);const c=1&u?i:s;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let u=0;u<=n;u++){const e=1&u?i:s,l=t-t/n*u;for(let t=0;t<r;t++){let n=t/r*(2*Math.PI),i=Math.sin(n)*l,s=Math.cos(n)*l;a.push(i,0,s),o.push(e.r,e.g,e.b),n=(t+1)/r*(2*Math.PI),i=Math.sin(n)*l,s=Math.cos(n)*l,a.push(i,0,s),o.push(e.r,e.g,e.b)}}const l=new Xi;l.setAttribute("position",new Bi(a,3)),l.setAttribute("color",new Bi(o,3)),super(l,new du({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const _p=new ir,Sp=new ir,Mp=new ir;class Tp extends ai{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new Xi;r.setAttribute("position",new Bi([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new du({fog:!1,toneMapped:!1});this.lightPlane=new xu(r,i),this.add(this.lightPlane),r=new Xi,r.setAttribute("position",new Bi([0,0,0,0,0,1],3)),this.targetLine=new xu(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_p.setFromMatrixPosition(this.light.matrixWorld),Sp.setFromMatrixPosition(this.light.target.matrixWorld),Mp.subVectors(Sp,_p),this.lightPlane.lookAt(Sp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Sp),this.targetLine.scale.z=Mp.length()}}const Ep=new ir,Ap=new vs;class Cp extends wu{constructor(t){const e=new Xi,n=new du({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],s={},a=new Ei(16755200),o=new Ei(16711680),l=new Ei(43775),u=new Ei(16777215),c=new Ei(3355443);function h(t,e,n){d(t,n),d(e,n)}function d(t,e){r.push(0,0,0),i.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(r.length/3-1)}h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",u),h("p","c",c),h("cn1","cn2",c),h("cn3","cn4",c),h("cf1","cf2",c),h("cf3","cf4",c),e.setAttribute("position",new Bi(r,3)),e.setAttribute("color",new Bi(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const t=this.geometry,e=this.pointMap;Ap.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ip("c",e,t,Ap,0,0,-1),Ip("t",e,t,Ap,0,0,1),Ip("n1",e,t,Ap,-1,-1,-1),Ip("n2",e,t,Ap,1,-1,-1),Ip("n3",e,t,Ap,-1,1,-1),Ip("n4",e,t,Ap,1,1,-1),Ip("f1",e,t,Ap,-1,-1,1),Ip("f2",e,t,Ap,1,-1,1),Ip("f3",e,t,Ap,-1,1,1),Ip("f4",e,t,Ap,1,1,1),Ip("u1",e,t,Ap,.7,1.1,-1),Ip("u2",e,t,Ap,-.7,1.1,-1),Ip("u3",e,t,Ap,0,2,-1),Ip("cf1",e,t,Ap,-1,0,1),Ip("cf2",e,t,Ap,1,0,1),Ip("cf3",e,t,Ap,0,-1,1),Ip("cf4",e,t,Ap,0,1,1),Ip("cn1",e,t,Ap,-1,0,-1),Ip("cn2",e,t,Ap,1,0,-1),Ip("cn3",e,t,Ap,0,-1,-1),Ip("cn4",e,t,Ap,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ip(t,e,n,r,i,s,a){Ep.set(i,s,a).unproject(r);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],Ep.x,Ep.y,Ep.z)}}const kp=new or;class Rp extends wu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Xi;i.setIndex(new ki(n,1)),i.setAttribute("position",new ki(r,3)),super(i,new du({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&kp.setFromObject(this.object),kp.isEmpty())return;const e=kp.min,n=kp.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return wu.prototype.copy.call(this,t),this.object=t.object,this}}class Np extends wu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Xi;r.setIndex(new ki(n,1)),r.setAttribute("position",new Bi([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new du({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class Lp extends xu{constructor(t,e=1,n=16776960){const r=n,i=new Xi;i.setAttribute("position",new Bi([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new du({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Xi;s.setAttribute("position",new Bi([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new ds(s,new Ai({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const Dp=new ir;let Pp,Op;class Fp extends ai{constructor(t=new ir(0,0,1),e=new ir(0,0,0),n=1,r=16776960,i=.2*n,s=.2*i){super(),this.type="ArrowHelper",void 0===Pp&&(Pp=new Xi,Pp.setAttribute("position",new Bi([0,0,0,0,1,0],3)),Op=new Pu(0,.5,1,5,1),Op.translate(0,-.5,0)),this.position.copy(e),this.line=new xu(Pp,new du({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ds(Op,new Ai({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Dp.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Dp,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class zp extends wu{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Xi;n.setAttribute("position",new Bi(e,3)),n.setAttribute("color",new Bi([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new du({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const r=new Ei,i=this.geometry.attributes.color.array;return r.set(t),r.toArray(i,0),r.toArray(i,3),r.set(e),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Bp{constructor(){this.type="ShapePath",this.color=new Ei,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new hc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,s){return this.currentPath.bezierCurveTo(t,e,n,r,i,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new dc;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,s=0;s<n;i=s++){let n=e[i],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[i],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return r}const i=Fc.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let a,o,l;const u=[];if(1===s.length)return o=s[0],l=new dc,l.curves=o.curves,u.push(l),u;let c=!i(s[0].getPoints());c=t?!c:c;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let y=0,x=s.length;y<x;y++)o=s[y],p=o.getPoints(),a=i(p),a=t?!a:a,a?(!c&&d[g]&&g++,d[g]={s:new dc,p:p},d[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(s);if(d.length>1){let t=!1;const e=[];for(let n=0,r=d.length;n<r;n++)h[n]=[];for(let n=0,i=d.length;n<i;n++){const i=m[n];for(let s=0;s<i.length;s++){const a=i[s];let o=!0;for(let i=0;i<d.length;i++)r(a.p,d[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:s}),o?(o=!1,h[i].push(a)):t=!0);o&&h[n].push(a)}}e.length>0&&(t||(m=h))}for(let y=0,x=d.length;y<x;y++){l=d[y].s,u.push(l),f=m[y];for(let t=0,e=f.length;t<e;t++)l.holes.push(f[t].h)}return u}}const Up=new Float32Array(1),$p=new Int32Array(Up.buffer);class qp{static toHalfFloat(t){t>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),t=65504),Up[0]=t;const e=$p[0];let n=e>>16&32768,r=e>>12&2047;const i=e>>23&255;return i<103?n:i>142?(n|=31744,n|=(255==i?0:1)&&8388607&e,n):i<113?(r|=2048,n|=(r>>114-i)+(r>>113-i&1),n):(n|=i-112<<10|r>>1,n+=1&r,n)}}const Vp=0,Hp=1,Wp=0,Gp=1,jp=2;function Xp(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function Yp(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function Kp(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Cu(t,e)}function Jp(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Hl(t)}function Zp(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Cu(t,e)}function Qp(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Su(t)}function tf(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Su(t)}function ef(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Su(t)}function nf(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new ir(t,e,n)}function rf(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new ki(t,e).setUsage(vn)}function sf(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ri(t,e)}function af(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Ni(t,e)}function of(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Li(t,e)}function lf(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Di(t,e)}function uf(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Pi(t,e)}function cf(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Oi(t,e)}function hf(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Fi(t,e)}function df(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Bi(t,e)}function pf(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Ui(t,e)}function ff(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new zp(t)}function mf(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Rp(t,e)}function gf(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new wu(new Vu(t.geometry),new du({color:void 0!==e?e:16777215}))}function yf(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new wu(new Zc(t.geometry),new du({color:void 0!==e?e:16777215}))}function xf(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Rh(t)}function vf(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Oh(t)}function bf(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ms(t,n)}function wf(){console.error("THREE.CanvasRenderer has been removed")}function _f(){console.error("THREE.JSONLoader has been removed.")}Hu.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Hu.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},hc.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},bp.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},pp.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ih.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),id.extractUrlBase(t)},Ih.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},ip.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},ip.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ip.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},ip.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},or.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},or.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},or.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},or.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},or.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Er.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Rs.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},op.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Vn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Vn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Vn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Vn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Vn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Vn.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Pr.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Pr.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Pr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ir).setFromMatrixColumn(this,3)},Pr.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Pr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Pr.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Pr.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Pr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Pr.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Pr.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Pr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Pr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Pr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Pr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Pr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Pr.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Pr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Pr.prototype.makeFrustum=function(t,e,n,r,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,s)},Pr.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Cs.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},rr.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},rr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Dr.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Dr.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Dr.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},yi.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},yi.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},yi.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},yi.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},yi.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},yi.barycoordFromPoint=function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),yi.getBarycoord(t,e,n,r,i)},yi.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),yi.getNormal(t,e,n,r)},dc.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},dc.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Uc(this,t)},dc.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Gc(this,t)},qn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},qn.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},qn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ir.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},ir.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},ir.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},ir.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},ir.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},ir.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},ir.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},ir.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},ir.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Qn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Qn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ai.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},ai.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},ai.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},ai.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},ai.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(ai.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),ds.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(ds.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Ge},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),tu.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},bs.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(zh.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(ki.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===vn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(vn)}}}),ki.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?vn:xn),this},ki.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ki.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Xi.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Xi.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new ki(arguments[1],arguments[2])))},Xi.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Xi.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Xi.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Xi.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Xi.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Xi.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Al.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?vn:xn),this},Al.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Uc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Uc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Uc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},El.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Yd.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(vi.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ei}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===y}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(xs.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),_l.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},_l.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},_l.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},_l.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},_l.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},_l.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},_l.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},_l.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},_l.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},_l.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},_l.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},_l.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},_l.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},_l.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},_l.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},_l.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},_l.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},_l.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},_l.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},_l.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},_l.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},_l.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},_l.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},_l.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},_l.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(_l.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ke:Ye}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(hl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(tr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Cd.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new fd).load(t,(function(t){e.setBuffer(t)})),this},Dd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},_s.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},_s.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},Yn.crossOrigin=void 0,Yn.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Fh;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},Yn.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Ph;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},Yn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Yn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Sf={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Mf(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function Tf(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new Xi}function Ef(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new Xi}function Af(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function Cf(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function If(){console.error("THREE.ImmediateRenderObject has been removed.")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},1564:(t,e,n)=>{"use strict";n.r(e),n.d(e,{CSS3DObject:()=>o,CSS3DSprite:()=>l,CSS3DRenderer:()=>h});var r=n(2212);const i=new r.Vector3,s=new r.Quaternion,a=new r.Vector3;class o extends r.Object3D{constructor(t=document.createElement("div")){super(),this.element=t,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",(function(){this.traverse((function(t){t.element instanceof Element&&null!==t.element.parentNode&&t.element.parentNode.removeChild(t.element)}))}))}copy(t,e){return super.copy(t,e),this.element=t.element.cloneNode(!0),this}}o.prototype.isCSS3DObject=!0;class l extends o{constructor(t){super(t),this.rotation2D=0}copy(t,e){return super.copy(t,e),this.rotation2D=t.rotation2D,this}}l.prototype.isCSS3DSprite=!0;const u=new r.Matrix4,c=new r.Matrix4;class h{constructor(t={}){const e=this;let n,r,o,l;const h={camera:{fov:0,style:""},objects:new WeakMap},d=void 0!==t.element?t.element:document.createElement("div");d.style.overflow="hidden",this.domElement=d;const p=document.createElement("div");function f(t){return Math.abs(t)<1e-10?0:t}function m(t){const e=t.elements;return"matrix3d("+f(e[0])+","+f(-e[1])+","+f(e[2])+","+f(e[3])+","+f(e[4])+","+f(-e[5])+","+f(e[6])+","+f(e[7])+","+f(e[8])+","+f(-e[9])+","+f(e[10])+","+f(e[11])+","+f(e[12])+","+f(-e[13])+","+f(e[14])+","+f(e[15])+")"}function g(t){const e=t.elements;return"translate(-50%,-50%)matrix3d("+f(e[0])+","+f(e[1])+","+f(e[2])+","+f(e[3])+","+f(-e[4])+","+f(-e[5])+","+f(-e[6])+","+f(-e[7])+","+f(e[8])+","+f(e[9])+","+f(e[10])+","+f(e[11])+","+f(e[12])+","+f(e[13])+","+f(e[14])+","+f(e[15])+")"}function y(t,n,r,o){if(t.isCSS3DObject){let o;t.onBeforeRender(e,n,r),t.isCSS3DSprite?(u.copy(r.matrixWorldInverse),u.transpose(),0!==t.rotation2D&&u.multiply(c.makeRotationZ(t.rotation2D)),t.matrixWorld.decompose(i,s,a),u.setPosition(i),u.scale(a),u.elements[3]=0,u.elements[7]=0,u.elements[11]=0,u.elements[15]=1,o=g(u)):o=g(t.matrixWorld);const l=t.element,d=h.objects.get(t);if(void 0===d||d.style!==o){l.style.transform=o;const e={style:o};h.objects.set(t,e)}l.style.display=t.visible?"":"none",l.parentNode!==p&&p.appendChild(l),t.onAfterRender(e,n,r)}for(let e=0,i=t.children.length;e<i;e++)y(t.children[e],n,r,o)}p.style.transformStyle="preserve-3d",p.style.pointerEvents="none",d.appendChild(p),this.getSize=function(){return{width:n,height:r}},this.render=function(t,e){const n=e.projectionMatrix.elements[5]*l;let r,i;h.camera.fov!==n&&(d.style.perspective=e.isPerspectiveCamera?n+"px":"",h.camera.fov=n),!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),e.isOrthographicCamera&&(r=-(e.right+e.left)/2,i=(e.top+e.bottom)/2);const s=e.isOrthographicCamera?"scale("+n+")translate("+f(r)+"px,"+f(i)+"px)"+m(e.matrixWorldInverse):"translateZ("+n+"px)"+m(e.matrixWorldInverse),a=s+"translate("+o+"px,"+l+"px)";h.camera.style!==a&&(p.style.transform=a,h.camera.style=a),y(t,t,e,s)},this.setSize=function(t,e){n=t,r=e,o=n/2,l=r/2,d.style.width=t+"px",d.style.height=e+"px",p.style.width=t+"px",p.style.height=e+"px"}}}},383:(t,e,n)=>{t.exports=function(){return n(9855)('(()=>{var t={508:(t,e,r)=>{const{resize:a}=r(140);t.exports={buildImageList:t=>{const e=[];let r=100/Math.min(t.width,t.height);for(;;)if(e.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}e.push(r),e.reverse();const i=[];for(let r=0;r<e.length;r++)t.width,e[r],t.height,e[r],i.push(Object.assign(a({image:t,ratio:e[r]}),{scale:e[r]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),r=[],i=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)i.push(Object.assign(a({image:t,ratio:r[e]}),{scale:r[e]}));return i}}},589:(t,e,r)=>{const{Cumsum:a}=r(535),i=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:i,imageDataSqrCumsum:s})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let h=i.query(e-6,r-6,e+6,r+6);h/=169;let o=s.query(e-6,r-6,e+6,r+6);return o-=2*h*i.query(e-6,r-6,e+6,r+6),o+=169*h*h,o/169<a*a?null:(o=Math.sqrt(o),o)},s=t=>{const{image:e,cx:r,cy:a,vlen:i,tx:s,ty:h,imageDataCumsum:o,imageDataSqrCumsum:l}=t,{data:u,width:n,height:m}=e;if(r-6<0||r+6>=n)return null;if(a-6<0||a+6>=m)return null;let c=o.query(r-6,a-6,r+6,a+6),f=l.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*n+(r-6),p=(h-6)*n+(s-6),w=n-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=u[d]*u[p],d+=1,p+=1;d+=w,p+=w}let M=o.query(s-6,h-6,s+6,h+6);M/=169,g-=M*c;let y=f-c*c/169;return 0==y?null:(y=Math.sqrt(y),1*g/(i*y))};t.exports={extract:t=>{const{data:e,width:r,height:h,scale:o}=t,l=[r*h];for(let t=0;t<l.length;t++)l[t]=!1;const u=new Float32Array(e.length);for(let t=0;t<r;t++)u[t]=-1,u[r*(h-1)+t]=-1;for(let t=0;t<h;t++)u[t*r]=-1,u[t*r+r-1]=-1;for(let t=1;t<r-1;t++)for(let a=1;a<h-1;a++){let i=t+r*a,s=0,h=0;for(let t=-1;t<=1;t++)s+=e[i+r*t+1]-e[i+r*t-1],h+=e[i+r+t]-e[i-r+t];s/=768,h/=768,u[i]=Math.sqrt((s*s+h*h)/2)}const n=new Uint32Array(1e3);for(let t=0;t<1e3;t++)n[t]=0;const m=[-1,1,-r,r];let c=0;for(let t=1;t<r-1;t++)for(let e=1;e<h-1;e++){let a=t+r*e,i=!0;for(let t=0;t<m.length;t++)if(u[a]<=u[a+m[t]]){i=!1;break}if(i){let t=Math.floor(1e3*u[a]);t>999&&(t=999),t<0&&(t=0),n[t]+=1,c+=1,l[a]=!0}}const f=.02*r*h;let g=999,d=0;for(;g>=0&&(d+=n[g],!(d>f));)g--;for(let t=0;t<l.length;t++)l[t]&&1e3*u[t]<g&&(l[t]=!1);const p=[];for(let t=0;t<e.length;t++)p[t]=e[t]*e[t];const w=new a(e,r,h),M=new a(p,r,h),y=new Float32Array(e.length);for(let e=0;e<r;e++)for(let a=0;a<h;a++){const h=a*r+e;if(!l[h]){y[h]=1;continue}const o=i({image:t,cx:e,cy:a,sdThresh:5,imageDataCumsum:w,imageDataSqrCumsum:M});if(null===o){y[h]=1;continue}let u=-1;for(let r=-10;r<=10;r++){for(let i=-10;i<=10;i++){if(i*i+r*r<=4)continue;const h=s({image:t,cx:e+i,cy:a+r,vlen:o,tx:e,ty:a,imageDataCumsum:w,imageDataSqrCumsum:M});if(null!==h&&h>u&&(u=h,u>.95))break}if(u>.95)break}y[h]=u}return(t=>{let{image:e,featureMap:r,templateSize:a,searchSize:h,occSize:o,maxSimThresh:l,minSimThresh:u,sdThresh:n,imageDataCumsum:m,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:p}=e;o=Math.floor(Math.min(e.width,e.height)/10);const w=3*(2*a+1),M=Math.floor(g/w),y=Math.floor(d/w);let x=Math.floor(g/o)*Math.floor(d/o)+M*y;const q=[],C=new Float32Array(f.length);for(let t=0;t<C.length;t++)C[t]=r[t];let S=0;for(;S<x;){let t=l,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)C[e*g+a]<t&&(t=C[e*g+a],r=a,f=e);if(-1===r)break;const p=i({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:m,imageDataSqrCumsum:c});if(null===p){C[f*g+r]=1;continue}if(p/(2*a+1)<n){C[f*g+r]=1;continue}let w=1,M=-1;for(let a=-h;a<=h;a++){for(let i=-h;i<=h;i++){if(i*i+a*a>h*h)continue;if(0===i&&0===a)continue;const o=s({image:e,vlen:p,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:m,imageDataSqrCumsum:c});if(null!==o){if(o<w&&(w=o,w<u&&w<t))break;if(o>M&&(M=o,M>.99))break}}if(w<u&&w<t||M>.99)break}if(w<u&&w<t||M>.99)C[f*g+r]=1;else{q.push({x:r,y:f}),S+=1;for(let t=-o;t<=o;t++)for(let e=-o;e<=o;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(C[(f+t)*g+(r+e)]=1)}}return q})({image:t,featureMap:y,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:w,imageDataSqrCumsum:M})}}},535:t=>{t.exports={Cumsum:class{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let i=this.cumsum[a][r];return e>0&&(i-=this.cumsum[e-1][r]),t>0&&(i-=this.cumsum[a][t-1]),t>0&&e>0&&(i+=this.cumsum[e-1][t-1]),i}}}},140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:r,height:a}=t,i=Math.floor(r/2),s=Math.floor(a/2),h=new Float32Array(i*s),o=[0,1,r,r+1];for(let t=0;t<s;t++)for(let a=0;a<i;a++){let s=2*t*r+2*a,l=0;for(let t=0;t<o.length;t++)l+=e[s+o[t]];l*=.25,h[t*i+a]=l}return{data:h,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:r})=>{const{width:a,height:i,data:s}=t,h=2*t.width+(e?1:0),o=2*t.height+(r?1:0),l=new Float32Array(h*o);for(let t=0;t<h;t++){const e=.5*t-.25;let r=Math.floor(e),u=Math.ceil(e);r<0&&(r=0),u>=a&&(u=a-1);for(let n=0;n<o;n++){const o=.5*n-.25;let m=Math.floor(o),c=Math.ceil(o);m<0&&(m=0),c>=i&&(c=i-1);const f=(u-e)*(c-o)*s[m*a+r]+(u-e)*(o-m)*s[c*a+r]+(e-r)*(c-o)*s[m*a+u]+(e-r)*(o-m)*s[c*a+u];l[n*h+t]=f}}return{data:l,width:h,height:o}},resize:({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),i=new Uint8Array(r*a);for(let s=0;s<r;s++){let h=Math.round(1*s/e),o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let n=0,m=0;for(let e=h;e<=o;e++)for(let r=a;r<=u;r++)n+=1*t.data[r*t.width+e],m+=1;i[l*r+s]=Math.floor(n/m)}}return{data:i,width:r,height:a}}}}},e={};function r(a){if(e[a])return e[a].exports;var i=e[a]={exports:{}};return t[a](i,i.exports,r),i.exports}(()=>{const{extract:t}=r(589),{buildTrackingImageList:e}=r(508);onmessage=t=>{const{data:r}=t;if("compile"===r.type){const{targetImages:t}=r,i=50/t.length;let s=0;const h=[];for(let r=0;r<t.length;r++){const o=t[r],l=e(o),u=i/l.length,n=a(l,(t=>{s+=u,postMessage({type:"progress",percent:s})}));h.push(n)}postMessage({type:"compileDone",list:h})}};const a=(e,r)=>{const a=[];for(let i=0;i<e.length;i++){const s=e[i],h=t(s),o={data:s.data,scale:s.scale,width:s.width,height:s.height,points:h};a.push(o),r(i)}return a}})()})();',n.p+"compiler.worker.prod.js")}},1077:(t,e,n)=>{t.exports=function(){return n(9855)('(()=>{var t={331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{AbstractMatrix:()=>v,CHO:()=>tt,CholeskyDecomposition:()=>tt,EVD:()=>K,EigenvalueDecomposition:()=>K,LU:()=>H,LuDecomposition:()=>H,Matrix:()=>k,MatrixColumnSelectionView:()=>T,MatrixColumnView:()=>I,MatrixFlipColumnView:()=>A,MatrixFlipRowView:()=>q,MatrixRowSelectionView:()=>P,MatrixRowView:()=>C,MatrixSelectionView:()=>V,MatrixSubView:()=>N,MatrixTransposeView:()=>j,NIPALS:()=>et,Nipals:()=>et,QR:()=>$,QrDecomposition:()=>$,SVD:()=>L,SingularValueDecomposition:()=>L,WrapperMatrix1D:()=>z,WrapperMatrix2D:()=>F,correlation:()=>J,covariance:()=>B,default:()=>k,determinant:()=>X,inverse:()=>O,linearDependencies:()=>Q,pseudoInverse:()=>W,solve:()=>U,wrap:()=>D});const s=Object.prototype.toString;function o(t){return s.call(t).endsWith("Array]")}const n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]>h&&(h=t[l]);return h},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]<h&&(h=t[l]);return h},h=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!o(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var s=i(t),h=n(t);if(s===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?s:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-s),m=0;m<t.length;m++)e[m]=(t[m]-s)*f+u;return e},l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,s){const{rows:o,columns:n}=t,i=Math.min(o,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let o=0;o<h;o++)r.push(c(t.get(e,o),s));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==o&&l.push(`... ${o-e} more rows`),l.join(`\\n${u}`)}(t,r,s,o)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const s=t.toPrecision(e-2);if(s.length<=e)return s;const o=t.toExponential(e-2),n=o.indexOf("e"),i=o.slice(n);return o.slice(0,e-i.length)+i}function f(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function m(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e,r){return{row:d(t,e),column:y(t,r)}}function d(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function y(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function M(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(x("startRow",e),x("endRow",r),x("startColumn",s),x("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function b(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function x(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function E(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class v{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new k(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new k(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new k(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new k(t,e)}static ones(t,e){return new k(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new k(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return v.isMatrix(t)?t:new k(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new k(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return k.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return k.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){v.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new k(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}strassen2x2(t){t=k.checkMatrix(t);let e=new k(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=k.checkMatrix(t);let e=new k(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,S=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),T=(-o+u+a)*(w+d-y),A=(o-a)*(w-y),q=o*d,C=(u+a)*(-d+y),P=(-o+i+h)*(p+d-M),V=(o-h)*(p-M),N=(i+h)*(-d+M),j=v+q+s*g,z=(r+s+o-n-i-u-a)*w+x+E+v+T+q+C,F=v+S+I+(r+s+o-i-h-l-u)*p+q+P+N,D=b+i*(-c+f+g-w-p-d+M)+x+v+q+P+V,H=b+x+E+v+h*y,_=q+P+V+N+n*m,$=v+S+R+u*(-c+m+g-w-p-d+y)+T+A+q,L=T+A+q+C+l*f,O=v+S+R+I+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,D),e.set(1,1,H),e.set(1,2,_),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=k.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=v.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(v.add(l,g),v.add(u,w),n,h),d=t(v.add(f,g),u,n,h),y=t(l,v.sub(c,w),n,h),M=t(g,v.sub(m,u),n,h),b=t(v.add(l,a),w,n,h),x=t(v.sub(f,l),v.add(u,c),n,h),E=t(v.sub(a,g),v.add(m,w),n,h),S=v.add(p,M);S.sub(b),S.add(E);let k=v.add(y,b),R=v.add(d,M),I=v.sub(p,d);I.add(y),I.add(x);let T=v.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(R,0,S.columns),T=T.setSubMatrix(I,S.rows,S.columns),T.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.rows;t++){const o=this.getRow(t);o.length>0&&h(o,{min:e,max:r,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.columns;t++){const o=this.getColumn(t);o.length&&h(o,{min:e,max:r,output:o}),s.setColumn(t,o)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new k(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new k(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=S){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=S){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){M(this,t,e,r,s);let o=new k(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new k(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new k(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=k.checkMatrix(t)).isEmpty())return this;M(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){let r=p(this,t,e),s=new k(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let o=0;o<r.column.length;o++){let n=r.column[o];s.set(t,o,this.get(e,n))}}return s}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new k(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=b(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=b(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:s=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,s);case"column":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,s);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=Math.pow(t.get(o,s),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function S(t,e){return t-e}v.prototype.klass="Matrix","undefined"!=typeof Symbol&&(v.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),v.random=v.rand,v.randomInt=v.randInt,v.diagonal=v.diag,v.prototype.diagonal=v.prototype.diag,v.identity=v.eye,v.prototype.negate=v.prototype.neg,v.prototype.tensorProduct=v.prototype.kroneckerProduct;class k extends v{constructor(t,e){if(super(),k.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[s]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(v,k);class R extends v{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class T extends R{constructor(t,e){e=y(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class A extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends R{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class P extends R{constructor(t,e){super(t,(e=d(t,e)).length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class V extends R{constructor(t,e,r){let s=p(t,e,r);super(t,s.row.length,s.column.length),this.rowIndices=s.row,this.columnIndices=s.column}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class N extends R{constructor(t,e,r,s,o){M(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class j extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class z extends v{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends v{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function D(t,e){if(Array.isArray(t))return t[0]&&Array.isArray(t[0])?new F(t):new z(t,e);throw new Error("the argument is not an array")}class H{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=k.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function _(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class ${constructor(t){let e,r,s,o,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=_(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=k.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new k(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new k(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class L{constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new k(r,c),w=new k(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=_(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=_(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,S=0,R=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+R*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=R*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=_(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=_(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=_(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=_(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y,S+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}S=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=k.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=k.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(k.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new k(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new k(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return k.diag(this.s)}}function O(t,e=!1){return t=F.checkMatrix(t),e?new L(t).inverse():U(t,k.eye(t.rows))}function U(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new L(t).solve(e):t.isSquare()?new H(t).solve(e):new $(t).solve(e)}function X(t){if((t=k.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,s,o;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),s=t.get(1,0),o=t.get(1,1),e*o-r*s;if(3===t.columns){let o,n,i;return o=new V(t,[1,2],[1,2]),n=new V(t,[1,2],[0,2]),i=new V(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),s=t.get(0,2),e*X(o)-r*X(n)+s*X(i)}return new H(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function Y(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function G(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}function Q(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=k.checkMatrix(t)).rows,n=new k(o,o);for(let e=0;e<o;e++){let i=k.columnVector(t.getRow(e)),h=t.subMatrixRow(Y(o,e)).transpose(),l=new L(h).solve(i),u=k.sub(i,h.mmul(l)).abs().max();n.setRow(e,G(u,l,e,r,s))}return n}function W(t,e=Number.EPSILON){if((t=k.checkMatrix(t)).isEmpty())return t.transpose();let r=new L(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(k.diag(n).mmul(s.transpose()))}function B(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0}=r;o&&(t=t.center("column"),s||(e=e.center("column")));const n=t.transpose().mmul(e);for(let e=0;e<n.rows;e++)for(let r=0;r<n.columns;r++)n.set(e,r,n.get(e,r)*(1/(t.rows-1)));return n}function J(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0,scale:n=!0}=r;o&&(t.center("column"),s||e.center("column")),n&&(t.scale("column"),s||e.scale("column"));const i=t.standardDeviation("column",{unbiased:!0}),h=s?i:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(i[e]*h[r]))*(1/(t.rows-1)));return l}class K{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new k(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,o=r[u],c=(r[u+1]-o)/(2*e[u]),f=_(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=_(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new k(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,T=0,A=0,q=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===T&&(T=S),!(Math.abs(o.get(l,l-1))<E*T));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,q=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,A=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(A=k>=0?k+A:k-A,r[b-1]=f+A,r[b]=r[b-1],0!==A&&(r[b]=f-c/A),e[b-1]=0,e[b]=0,f=o.get(b,b-1),T=Math.abs(f)+Math.abs(A),k=f/T,R=A/T,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)A=o.get(b-1,i),o.set(b-1,i,R*A+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*A);for(n=0;n<=b;n++)A=o.get(n,b-1),o.set(n,b-1,R*A+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*A);for(n=0;n<=x;n++)A=s.get(n,b-1),s.set(n,b-1,R*A+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*A)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=A,e[b]=-A;b-=2,q=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===q){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);T=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===q&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-T);v+=T,f=m=c=.964}for(q+=1,u=b-2;u>=l&&(A=o.get(u,u),I=f-A,T=m-A,k=(I*T-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-A-I-T,I=o.get(u+2,u+1),T=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=T,R/=T,I/=T,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(A)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(T=Math.sqrt(k*k+R*R+I*I),k<0&&(T=-T),0!==T){for(h!==u?o.set(h,h-1,-T*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=T,f=k/T,m=R/T,A=I/T,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*A)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=A*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=A*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)A=c,T=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-A*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(A)?(-I-c*a)/f:(-T-m*a)/A)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=Z(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)A=c,I=g,T=w;else if(l=n,0===e[n]?(M=Z(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(A))),M=Z(f*I-A*g+R*w,f*T-A*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(A)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=Z(-I-m*o.get(n,b-1),-T-m*o.get(n,b),A,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(A=0,h=0;h<=Math.min(i,x);h++)A+=s.get(n,h)*o.get(h,i);s.set(n,i,A)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new k(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function Z(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class tt{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new k(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class et{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:s=!1,maxIterations:o=1e3,terminationCriteria:n=1e-10}=e;let i;if(r){if(r=Array.isArray(r)&&"number"==typeof r[0]?k.columnVector(r):F.checkMatrix(r),!r.isColumnVector()||r.rows!==t.rows)throw new Error("Y must be a column vector of length X.rows");i=r}else i=t.getColumnVector(0);let h,l,u,a,c=1;for(let e=0;e<o&&c>n;e++)u=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),u=u.div(u.norm()),h=t.mmul(u).div(u.transpose().mmul(u).get(0,0)),e>0&&(c=h.clone().sub(a).pow(2).sum()),a=h.clone(),r?(l=r.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),l=l.div(l.norm()),i=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):i=h;if(r){let e=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0));e=e.div(e.norm());let s=t.clone().sub(h.clone().mmul(e.transpose())),o=i.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),n=r.clone().sub(h.clone().mulS(o.get(0,0)).mmul(l.transpose()));this.t=h,this.p=e.transpose(),this.w=u.transpose(),this.q=l,this.u=i,this.s=h.transpose().mmul(h),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=u.transpose(),this.s=h.transpose().mmul(h).sqrt(),this.t=s?h.clone().div(this.s.get(0,0)):h,this.xResidual=t.sub(h.mmul(u.transpose()))}}},842:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}},902:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{solveHomography:n}=r(450);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new s([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new s(r),u=o(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},421:(t,e,r)=>{const{estimate:s}=r(902),{refineEstimate:o}=r(269);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return s({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return o({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},269:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(420);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;p[t]=o,d[t]=n,c[t]=o*o+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const s=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<s.length;t++)x.push(s[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*s*l-o*h,u[0][2]=r*o*l+s*h,u[0][3]=e[3],u[1][0]=s*r*l+o*h,u[1][1]=s*s*l+i,u[1][2]=s*o*l-r*h,u[1][3]=e[4],u[2][0]=o*r*l-s*h,u[2][1]=o*s*l+r*h,u[2][2]=o*o*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new s(e),n=new s(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=o(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:h,z:l}=s,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=o[0][2]*h,c[0][1]=-o[0][2]*n,c[0][2]=o[0][1]*n-o[0][0]*h,c[0][3]=o[0][0],c[0][4]=o[0][1],c[0][5]=o[0][2],c[1][0]=o[1][2]*h,c[1][1]=-o[1][2]*n,c[1][2]=o[1][1]*n-o[1][0]*h,c[1][3]=o[1][0],c[1][4]=o[1][1],c[1][5]=o[1][2],c[2][0]=o[2][2]*h,c[2][1]=-o[2][2]*n,c[2][2]=o[2][1]*n-o[2][0]*h,c[2][3]=o[2][0],c[2][4]=o[2][1],c[2][5]=o[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{let o=0,n=0;for(let t=0;t<r.length;t++)o+=r[t].x,n+=r[t].y;o/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-o,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)}}},420:t=>{const e=(t,e,r,s)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,s,o)=>{const{x:n,y:i,z:h}=e(t,r,s);return{x:n/h,y:i/h}}}},233:t=>{t.exports={compute:t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;s+=(n=void 0,((n=((n=((n=((n=(o=i)-(o>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var o,n;return s}}},934:t=>{const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}};t.exports={computeHoughMatches:t=>{const{keywidth:r,keyheight:s,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(r,s),g=Math.floor(r/2),w=Math.floor(s/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const s=e/r;p.push(s*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(let t=0;t<i.length;t++){const r=i[t].querypoint,s=i[t].keypoint,{x:o,y:n,scale:m,angle:p}=e({querypoint:r,keypoint:s,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(o<l||o>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(o-l)/(h-l),k=M*(n-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),I=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:R,binScale:I};let T=Math.floor(d-.5),A=Math.floor(k-.5),q=Math.floor(I-.5),C=(Math.floor(R-.5)+c)%c;if(T<0||T+1>=y||A<0||A+1>=M||q<0||q+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=T+t;for(let t=0;t<2;t++){let r=A+t;for(let t=0;t<2;t++){let s=(C+t)%c;for(let t=0;t<2;t++){const o=e+r*y+s*b+(q+t)*x;void 0===S[o]&&(S[o]=0),S[o]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(S).forEach((t=>{S[t]>k&&(k=S[t],R=t)})),k<3)return[];const I=Math.floor(R%x%b%y),T=Math.floor((R-I)%x%b/y),A=Math.floor((R-I-T*y)%x/b),q=Math.floor((R-I-T*y-A*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(I+.5))>=1)continue;if(Math.abs(e.binY-(T+.5))>=1)continue;if(Math.abs(e.binScale-(q+.5))>=1)continue;const r=Math.abs(e.binAngle-(A+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C}}},582:(t,e,r)=>{const{match:s}=r(492);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},o=null;for(let n=0;n<t.length;n++){const{H:i,matches:h,debugExtra:l}=s({keyframe:t[n],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(l),i&&(null===o||o.matches.length<h.length)&&(o={keyframeIndex:n,H:i,matches:h})}if(null===o)return{keyframeIndex:-1,debugExtra:r};const n=[],i=[],h=t[o.keyframeIndex];for(let t=0;t<o.matches.length;t++){const e=o.matches[t].querypoint,r=o.matches[t].keypoint;n.push({x:e.x,y:e.y}),i.push({x:(r.x+.5)/h.scale,y:(r.y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:o.keyframeIndex,debugExtra:r}}}}},492:(t,e,r)=>{const s=r(842).Z,{compute:o}=r(233),{computeHoughMatches:n}=r(934),{computeHomography:i}=r(838),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(289),u=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=o({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let o=0;o<t.children.length;o++)h[o]===l&&u({node:t.children[o],keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:o}=s.pop();u({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{H:e,matches:r,threshold:s}=t,o=s*s,n=[];for(let t=0;t<r.length;t++){const s=r[t].querypoint,i=r[t].keypoint,l=h([i.x,i.y],e);(l[0]-s.x)*(l[0]-s.x)+(l[1]-s.y)*(l[1]-s.y)<=o&&n.push(r[t])}return n};t.exports={match:({keyframe:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m={};const g=[];for(let r=0;r<e.length;r++){const n=e[r],i=n.maxima?t.maximaPoints:t.minimaPoints;if(0===i.length)continue;const h=n.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,l=[],a=new s([],((t,e)=>t.d-e.d));u({node:h,keypoints:i,querypoint:n,queue:a,keypointIndexes:l,numPop:0});let c=-1,f=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER;for(let t=0;t<l.length;t++){const e=i[l[t]],r=o({v1:e.descriptors,v2:n.descriptors});r<f?(m=f,f=r,c=l[t]):r<m&&(m=r)}-1!==c&&(m===Number.MAX_SAFE_INTEGER||1*f/m<.7)&&g.push({querypoint:n,keypoint:i[c]})}if(f&&(m.matches=g),g.length<6)return{debugExtra:m};const w=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:g});f&&(m.houghMatches=w);const p=i({srcPoints:w.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:w.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===p)return{debugExtra:m};const d=a({H:p,matches:w,threshold:3});if(f&&(m.inlierMatches=d),d.length<6)return{debugExtra:m};const y=l(p,1e-5),M=[];for(let r=0;r<e.length;r++){const s=e[r],n=h([s.x,s.y],y);let i=-1,l=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=s.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const e=a[t];if((e.x-n[0])*(e.x-n[0])+(e.y-n[1])*(e.y-n[1])>100)continue;const r=o({v1:e.descriptors,v2:s.descriptors});r<l?(u=l,l=r,i=t):r<u&&(u=r)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*l/u<.7)&&M.push({querypoint:s,keypoint:a[i]})}f&&(m.matches2=M);const b=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:M});f&&(m.houghMatches2=b);const x=i({srcPoints:b.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:b.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===x)return{debugExtra:m};const E=a({H:x,matches:b,threshold:3});return f&&(m.inlierMatches2=E),{H:x,matches:E,debugExtra:m}}}},838:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{createRandomizer:n}=r(48),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(289),{solveHomography:m}=r(450),g=({H:t,testPoints:e,keyframe:r})=>{const s=h(t,1e-5);if(null===s)return!1;const o=[];for(let t=0;t<e.length;t++)o.push(u(e[t],s));return!(l(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!i(o[0],o[1],o[2],o[3]))},w=({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r},p=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:s})=>{const o=u(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},d=({H:t,testPoints:e})=>{const r=[];for(let s=0;s<e.length;s++)r[s]=u(e[s],t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:s,quickMode:o}=t,i=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]];if(e.length<4)return null;const h=Math.min(10,e.length),l=n(),u=[];for(let t=0;t<e.length;t++)u[t]=t;l.arrayShuffle({arr:u,sampleSize:u.length});const a=o?10:20,f=2*a;let y=0;const M=[];for(;y<f&&M.length<a;){if(y+=1,l.arrayShuffle({arr:u,sampleSize:4}),!c(e[u[0]],e[u[1]],e[u[2]],e[u[3]],r[u[0]],r[u[1]],r[u[2]],r[u[3]]))continue;const t=m([e[u[0]],e[u[1]],e[u[2]],e[u[3]]],[r[u[0]],r[u[1]],r[u[2]],r[u[3]]]);null!==t&&d({H:t,testPoints:i})&&M.push(t)}if(0===M.length)return null;const b=[];for(let t=0;t<M.length;t++)b.push({H:M[t],cost:0});let x=h;for(let t=0;t<e.length&&b.length>2;t+=x){x=Math.min(h,e.length-t);let s=t+x;for(let o=0;o<b.length;o++)for(let n=t;n<s;n++){const t=p({H:b[o].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});b[o].cost+=t}b.sort(((t,e)=>t.cost-e.cost)),b.splice(-Math.floor((b.length+1)/2))}let E=null;for(let t=0;t<b.length;t++){const e=w({inH:b[t].H});if(g({H:e,testPoints:i,keyframe:s})){E=e;break}}return E}}},289:t=>{const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s},s=(t,e)=>[t[0]-e[0],t[1]-e[1]],o=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const s=r(t);if(Math.abs(s)<=e)return null;const o=1/s;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,s,o)=>{const n=e(t,r,s)<=0;return e(r,s,o)<=0===n&&e(s,o,t)<=0===n&&e(o,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=s(e,t),h=s(r,t),l=s(n,t),u=s(e,r),a=s(n,r),c=o(i,h),f=o(h,l),m=o(i,l),g=o(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],s=[];return s[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,s[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,s},checkThreePointsConsistent:(t,r,s,o,n,i)=>e(t,r,s)>0==e(o,n,i)>0,checkFourPointsConsistent:(t,r,s,o,n,i,h,l)=>e(t,r,s)>0==e(n,i,h)>0&&e(r,s,o)>0==e(i,h,l)>0&&e(s,o,t)>0==e(h,l,n)>0&&e(o,t,r)>0==e(l,n,i)>0,determinant:r}},450:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),n=t=>{let e=0,r=0;for(let s=0;s<t.length;s++)e+=t[s][0],r+=t[s][1];let s=e/t.length,o=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-s,i=t[e][1]-o;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-s)*i,(t[e][1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(s),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new s(a),e=new s(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(o(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},48:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{const{Matcher:t}=r(582),{Estimator:e}=r(421);let s=null,o=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)s=l.projectionTransform,o=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.targetIndexes;let e=-1,r=null,s=null;for(let n=0;n<t.length;n++){const u=t[n],{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(o[u],l.featurePoints);if(s=m,-1!==a){const t=h.estimate({screenCoords:c,worldCoords:f});t&&(e=u,r=t);break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtra:s})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,s=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})()})();',n.p+"controller.worker.prod.js")}},9855:t=>{"use strict";var e=window.URL||window.webkitURL;t.exports=function(t,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(t),r=r.getBlob()}catch(e){r=new Blob([t])}return new Worker(e.createObjectURL(r))}catch(e){return new Worker("data:application/javascript,"+encodeURIComponent(t))}}catch(t){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},5217:(t,e,n)=>{const r=n(383),{Detector:i}=n(6416),{buildImageList:s,buildTrackingImageList:a}=n(7508),{build:o}=n(723),l=n(1113),u=n(4563),c=async(t,e)=>{const n=[];for(let r=0;r<t.length;r++){const s=t[r],a=new i(s.width,s.height);await u.nextFrame(),u.tidy(()=>{const t=u.tensor(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:i}=a.detect(t),l=i.filter(t=>t.maxima),c=i.filter(t=>!t.maxima),h=o({points:l}),d=o({points:c});n.push({maximaPoints:l,minimaPoints:c,maximaPointsCluster:h,minimaPointsCluster:d,width:s.width,height:s.height,scale:s.scale}),e(r)})}return n};t.exports={Compiler:class{constructor(){this.data=null}compileImageTargets(t,e){return new Promise(async(n,i)=>{const o=[];for(let e=0;e<t.length;e++){const n=t[e],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");i.drawImage(n,0,0,n.width,n.height);const s=i.getImageData(0,0,n.width,n.height),a=new Uint8Array(n.width*n.height);for(let t=0;t<a.length;t++){const e=4*t;a[t]=Math.floor((s.data[e]+s.data[e+1]+s.data[e+2])/3)}const l={data:a,height:n.height,width:n.width};o.push(l)}const l=50/o.length;let u=0;this.data=[];for(let t=0;t<o.length;t++){const n=o[t],r=s(n),i=l/r.length,a=await c(r,()=>{u+=i,e(u)});this.data.push({targetImage:n,imageList:r,matchingData:a})}for(let t=0;t<o.length;t++){const e=a(o[t]);this.data[t].trackingImageList=e}const h=await new Promise((t,n)=>{const i=new r;i.onmessage=n=>{"progress"===n.data.type?e(50+n.data.percent):"compileDone"===n.data.type&&t(n.data.list)},i.postMessage({type:"compile",targetImages:o})});for(let t=0;t<o.length;t++)this.data[t].trackingData=h[t];n(this.data)})}exportData(){const t=[];for(let e=0;e<this.data.length;e++)t.push({targetImage:{width:this.data[e].targetImage.width,height:this.data[e].targetImage.height},trackingData:this.data[e].trackingData,matchingData:this.data[e].matchingData});return l.encode({v:2,dataList:t})}importData(t){const e=l.decode(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(let r=0;r<n.length;r++)this.data.push({targetImage:n[r].targetImage,trackingData:n[r].trackingData,matchingData:n[r].matchingData});return this.data}}}},7957:(t,e,n)=>{const r=n(4563),i=n(1077),{Tracker:s}=n(6417),{CropDetector:a}=n(7051),{Compiler:o}=n(5217),{InputLoader:l}=n(7325),{OneEuroFilter:u}=n(344);t.exports={Controller:class{constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:s=1,warmupTolerance:o=null,missTolerance:u=null,filterMinCF:c=null,filterBeta:h=null}){this.inputWidth=t,this.inputHeight=e,this.maxTrack=s,this.filterMinCF=null===c?.001:c,this.filterBeta=null===h?1e3:h,this.warmupTolerance=null===o?5:o,this.missTolerance=null===u?5:u,this.cropDetector=new a(this.inputWidth,this.inputHeight,r),this.inputLoader=new l(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const d=45*Math.PI/180,p=this.inputHeight/2/Math.tan(d/2);this.projectionTransform=[[p,0,this.inputWidth/2],[0,p,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new i,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{"matchDone"===t.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(t.data),"trackUpdateDone"===t.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(t.data)}}showTFStats(){console.log(r.memory().numTensors),console.table(r.memory())}addImageTargets(t){return new Promise(async(e,n)=>{const r=await fetch(t),i=await r.arrayBuffer();e(this.addImageTargetsFromBuffer(i))})}addImageTargetsFromBuffer(t){const e=(new o).importData(t),n=[],r=[],i=[];for(let s=0;s<e.length;s++)r.push(e[s].matchingData),n.push(e[s].trackingData),i.push([e[s].targetImage.width,e[s].targetImage.height]);return this.tracker=new s(i,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=i,{dimensions:i,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:i}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:i}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:i}=this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:i})}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new u({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const e=this.inputLoader.loadInput(t);if(this.trackingStates.reduce((t,e)=>t+(e.isTracking?1:0),0)<this.maxTrack){const t=[];for(let e=0;e<this.trackingStates.length;e++)!0!==this.trackingStates[e].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==e||t.push(e));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(e,t);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let t=0;t<this.trackingStates.length;t++){const n=this.trackingStates[t];if(n.isTracking){let r=await this._trackAndUpdate(e,n.currentModelViewTransform,t);null===r?n.isTracking=!1:n.currentModelViewTransform=r}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:null})))),n.showing){const e=this._glModelViewMatrix(n.currentModelViewTransform,t);n.trackingMatrix=n.filter.filter(Date.now(),e);const r=[];for(let t=0;t<n.trackingMatrix.length;t++)r[t]=n.trackingMatrix[t];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:r})}}e.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await r.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async track(t,e,n){const r=this.inputLoader.loadInput(t),i=this.tracker.track(r,e,n);return r.dispose(),i}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}_workerMatch(t,e){return new Promise(async(n,r)=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})})}_workerTrackUpdate(t,e){return new Promise(async(n,r)=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:i,screenCoords:s}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,worldCoords:i,screenCoords:s})})}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}_glProjectionMatrix({projectionTransform:t,width:e,height:n,near:r,far:i}){const s=[[2*t[0][0]/e,0,-(2*t[0][2]/e-1),0],[0,2*t[1][1]/n,-(2*t[1][2]/n-1),0],[0,0,-(i+r)/(i-r),-2*i*r/(i-r)],[0,0,-1,0]],a=[];for(let o=0;o<4;o++)for(let t=0;t<4;t++)a.push(s[t][o]);return a}}}},7051:(t,e,n)=>{n(4563);const{Detector:r}=n(6416),{buildModelViewProjectionTransform:i,computeScreenCoordiate:s}=n(7420);t.exports={CropDetector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let i=Math.min(t,e)/2,s=Math.pow(2,Math.round(Math.log(i)/Math.log(2)));this.cropSize=s,this.detector=new r(s,s,n),this.kernelCaches={},this.lastRandomIndex=4}detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return i<0&&(i=0),r<0&&(r=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,i,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:s}=this.detector.detect(r);return i.forEach(t=>{t.x+=e,t.y+=n}),this.debugMode&&(s.projectedImage=r.arraySync()),r.dispose(),{featurePoints:i,debugExtra:s}}}}},6416:(t,e,n)=>{const r=n(4563),{FREAKPOINTS:i}=n(2793),s=(i.length-1)*i.length/2;t.exports={Detector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(let r=0;r<t.length;r++)e[4*r]=t[r],e[4*r+1]=t[r],e[4*r+2]=t[r],e[4*r+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}detect(t){let e=null;const n=[];for(let g=0;g<this.numOctaves;g++){let e,r;e=0===g?this._applyFilter(t):this._downsampleBilinear(n[g-1][n[g-1].length-1]),r=this._applyFilter(e),n.push([e,r])}const r=[];for(let g=0;g<this.numOctaves;g++){let t=this._differenceImageBinomial(n[g][0],n[g][1]);r.push(t)}const i=[];for(let g=1;g<this.numOctaves-1;g++){const t=this._buildExtremas(r[g-1],r[g],r[g+1]);i.push(t)}const s=this._applyPrune(i),a=this._computeLocalization(s,r),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,a,u),h=this._computeFreakDescriptors(c),d=a.arraySync(),p=u.arraySync(),f=h.arraySync();this.debugMode&&(e={pyramidImages:n.map(t=>t.map(t=>t.arraySync())),dogPyramidImages:r.map(t=>t?t.arraySync():null),extremasResults:i.map(t=>t.arraySync()),extremaAngles:u.arraySync(),prunedExtremas:s,localizedExtremas:a.arraySync()}),n.forEach(t=>t.forEach(t=>t.dispose())),r.forEach(t=>t&&t.dispose()),i.forEach(t=>t.dispose()),a.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const m=[];for(let g=0;g<d.length;g++){if(0==d[g][0])continue;const t=[];for(let a=0;a<f[g].length;a+=4){let e=16777216*f[g][a]+65536*f[g][a+1]+256*f[g][a+2]+f[g][a+3];t.push(e)}const e=d[g][1],n=d[g][2],r=d[g][3]*Math.pow(2,e)+Math.pow(2,e-1)-.5,i=n*Math.pow(2,e)+Math.pow(2,e-1)-.5,s=Math.pow(2,e);m.push({maxima:d[g][0]>0,x:r,y:i,scale:s,angle:p[g],descriptors:t})}return{featurePoints:m,debugExtra:e}}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let i=r+1;i<t.shape[1];i++)e.push(r),n.push(i);const i=r.tensor(e,[e.length]).cast("int32"),s=r.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:r.keep(r.stack([i,s],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(s/8);if(!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[t.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${s}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[e]}return r.tidy(()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")})}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||r.tidy(()=>{const t=r.tensor(i);this.tensorCaches._computeExtremaFreak={freakPointsT:r.keep(t)}});const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,a=[];for(let r=1;r<t.length;r++)a.push(t[r][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const s={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],i.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[s]}return r.tidy(()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...a,e,n,s])})}_computeExtremaAngles(t){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=e}return r.tidy(()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])})}_computeOrientationHistograms(t,e){const n=[];for(let r=1;r<e.length;r++)n.push(e[r][1]);this.tensorCaches.orientationHistograms||r.tidy(()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=r*r+n*n;if(t<=20.25){const i=-.05555555555555555*t;let s=.0013888888*(720+i*(720+i*(360+i*(120+i*(30+i*(6+i))))));e.push([n,r,s])}}this.tensorCaches.orientationHistograms={radialPropertiesT:r.keep(r.tensor(e,[e.length,3]))}});const{radialPropertiesT:i}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;r+="}";const s={variableNames:[...n,"extrema","radial"],outputShape:[t.shape[0],i.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},a={variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${i.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[s,a]}return r.tidy(()=>{const[e,r]=this.kernelCaches.computeOrientationHistograms,s=this._compileAndRun(e,[...n,t,i]);return this._compileAndRun(r,[s])})}_smoothHistograms(t){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=e}return r.tidy(()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t})}_computeLocalization(t,e){if(!this.kernelCaches.computeLocalization){const n=[];let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)n.push("image"+t),r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n \t`;r+="}";const i={variableNames:[...n,"extrema"],outputShape:[t.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[i]}return r.tidy(()=>{const n=this.kernelCaches.computeLocalization[0],i=r.tensor(t,[t.length,t[0].length],"int32"),s=this._compileAndRun(n,[...e.slice(1),i]).arraySync(),a=[];for(let t=0;t<s.length;t++){a.push([]);for(let e=0;e<s[t].length;e++)a[t].push([])}const o=[];for(let e=0;e<t.length;e++)o[e]=[t[e][0],t[e][1],t[e][2],t[e][3]];for(let t=0;t<o.length;t++){if(0===o[t][0])continue;const e=s[t],n=.5*(e[1][2]-e[1][0]),r=.5*(e[2][1]-e[0][1]),i=e[1][2]+e[1][0]-2*e[1][1],a=e[2][1]+e[0][1]-2*e[1][1],l=.25*(e[0][0]+e[2][2]-e[0][2]-e[2][0]),u=i*a-l*l,c=(a*-n+-l*-r)/u,h=(-l*-n+i*-r)/u,d=o[t][2]+h,p=o[t][3]+c;Math.abs(u)<1e-4||(o[t][2]=d,o[t][3]=p)}return r.tensor(o,[o.length,o[0].length],"float32")})}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=[];for(let n=0;n<t.length;n++){const r=t[n].shape[0],i=t[n].shape[1],s={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(i/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};e.push(s)}this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let r=0;r<100;r++){n.push([]),e.push([]);for(let t=0;t<5;t++)n[r].push([0,0,0,0]),e[r].push(0)}r.tidy(()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let i=0;i<t.length;i++){const s=r[i],a=this._compileAndRun(s,[t[i]]),o=i+1,l=a.arraySync(),u=a.shape[0],c=a.shape[1],h=2*c/10,d=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<c;r++){const i=l[t][r];if(0==i)continue;const s=i%1e3,a=Math.floor(Math.abs(i)/1e3),u=2*r+(2===a||3===a?1:0),c=2*t+(1===a||3===a?1:0),p=Math.floor(u/h),f=10*Math.floor(c/d)+p,m=Math.abs(s);let g=5;for(;g>=1&&m>e[f][g-1];)g-=1;if(g<5){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t][0]=n[f][t-1][0],n[f][t][1]=n[f][t-1][1],n[f][t][2]=n[f][t-1][2],n[f][t][3]=n[f][t-1][3];e[f][g]=m,n[f][g][0]=s,n[f][g][1]=o,n[f][g][2]=c,n[f][g][3]=u}}}});const i=[];for(let r=0;r<100;r++)for(let t=0;t<5;t++)i.push(n[r][t]);return i}_buildExtremas(t,e,n){const i=e.shape[0],s=e.shape[1],a="w"+s;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[a]){const t={variableNames:["image0","image1","image2"],outputShape:[i,s],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${i-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[a]=t}return r.tidy(()=>{const r=this.kernelCaches.buildExtremas[a];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])})}_differenceImageBinomial(t,e){return r.tidy(()=>t.sub(e))}_applyFilter(t){const e=t.shape[0],n=t.shape[1],i="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[i]){const t={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},r={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[i]=[t,r]}return r.tidy(()=>{const[e,n]=this.kernelCaches.applyFilter[i],r=this._compileAndRun(e,[t]);return this._compileAndRun(n,[r])})}_upsampleBilinear(t,e){t.shape[0];const n="w"+t.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const t={variableNames:["p"],outputShape:[e.shape[0],e.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=t}return r.tidy(()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])})}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],i="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[i]){const t={variableNames:["p"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[i]=t}return r.tidy(()=>{const e=this.kernelCaches.downsampleBilinear[i];return this._compileAndRun(e,[t])})}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const i=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}}}},2793:t=>{const e=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let r=0;r<e.length;r++){const t=e[r].sigma;for(let i=0;i<e[r].points.length;i++){const s=e[r].points[i];n.push([t,s[0],s[1]])}}t.exports={FREAKPOINTS:n}},7420:t=>{const e=(t,e,n,r)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,n,r,i)=>{const{x:s,y:a,z:o}=e(t,n,r);return{x:s/o,y:a/o}}}},7508:(t,e,n)=>{const{resize:r}=n(9140);t.exports={buildImageList:t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const i=[];for(let s=0;s<e.length;s++)t.width,e[s],t.height,e[s],i.push(Object.assign(r({image:t,ratio:e[s]}),{scale:e[s]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),n=[],i=[];n.push(256/e),n.push(128/e);for(let s=0;s<n.length;s++)i.push(Object.assign(r({image:t,ratio:n[s]}),{scale:n[s]}));return i}}},7325:(t,e,n)=>{const r=n(4563);t.exports={InputLoader:class{constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const i=r.backend();this.tempPixelHandle=i.makeTensorInfo(this.texShape,"float32"),i.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(t){return r.tidy(()=>{let e=r.browser.fromPixels(t);return e=e.mean(2),e})}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=r.backend();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===r.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const i=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}}}},2233:t=>{t.exports={compute:t=>{const{v1:e,v2:n}=t;let r=0;for(let a=0;a<e.length;a++){let t=(e[a]^n[a])>>>0;r+=(s=void 0,((s=((s=((s=((s=(i=t)-(i>>1&1431655765))>>2&858993459)+(858993459&s))>>4)+s&252645135)>>8)+s&16711935)>>16)+s&65535)}var i,s;return r}}},723:(t,e,n)=>{const{compute:r}=n(2233),{createRandomizer:i}=n(6048),s=t=>{const{points:e,pointIndexes:n,centerPointIndex:i,randomizer:a}=t;let o=!1;(n.length<=8||n.length<=16)&&(o=!0);const l={};if(!o){const t=(t=>{const{points:e,pointIndexes:n,randomizer:i}=t,s=[];for(let r=0;r<n.length;r++)s.push(r);let a=Number.MAX_SAFE_INTEGER,o=-1;const l=[];for(let u=0;u<128;u++){i.arrayShuffle({arr:s,sampleSize:8});let t=0;const c=[];for(let i=0;i<n.length;i++){let a=Number.MAX_SAFE_INTEGER;for(let t=0;t<8;t++){const o=n[s[t]],l=r({v1:e[n[i]].descriptors,v2:e[o].descriptors});l<a&&(c[i]=s[t],a=l)}t+=a}l.push(c),t<a&&(a=t,o=u)}return l[o]})({points:e,pointIndexes:n,randomizer:a});for(let e=0;e<t.length;e++)void 0===l[n[t[e]]]&&(l[n[t[e]]]=[]),l[n[t[e]]].push(n[e])}1===Object.keys(l).length&&(o=!0);const u={centerPointIndex:i};if(o){u.leaf=!0,u.pointIndexes=[];for(let t=0;t<n.length;t++)u.pointIndexes.push(n[t]);return u}return u.leaf=!1,u.children=[],Object.keys(l).forEach(t=>{u.children.push(s({points:e,pointIndexes:l[t],centerPointIndex:t,randomizer:a}))}),u};t.exports={build:({points:t})=>{const e=[];for(let r=0;r<t.length;r++)e.push(r);const n=i();return{rootNode:s({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}}}},6417:(t,e,n)=>{const r=n(4563),{buildModelViewProjectionTransform:i,computeScreenCoordiate:s}=n(7420);t.exports={Tracker:class{constructor(t,e,n,r,i,s=!1){this.markerDimensions=t,this.trackingDataList=e,this.projectionTransform=n,this.debugMode=s,this.trackingKeyframeList=[];for(let o=0;o<e.length;o++)this.trackingKeyframeList.push(e[o][1]);let a=0;for(let o=0;o<this.trackingKeyframeList.length;o++)a=Math.max(a,this.trackingKeyframeList[o].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let o=0;o<this.trackingKeyframeList.length;o++){const{featurePoints:t,imagePixels:e,imageProperties:n}=this._prebuild(this.trackingKeyframeList[o],a);this.featurePointsListT[o]=t,this.imagePixelsListT[o]=e,this.imagePropertiesListT[o]=n}this.kernelCaches={}}dummyRun(t){let e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const a=i(this.projectionTransform,e),o=this._buildAdjustedModelViewTransform(a),l=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,t,n),{matchingPointsT:d,simT:p}=this._computeMatching(l,u,c,h),f=d.arraySync(),m=p.arraySync(),g=this.trackingKeyframeList[n],y=[],x=[],v=[];for(let i=0;i<f.length;i++)if(m[i]>.8&&i<g.points.length){v.push(i);const t=s(a,f[i][0],f[i][1]);x.push(t),y.push({x:g.points[i].x/g.scale,y:g.points[i].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:d.arraySync(),goodTrack:v,trackedPoints:x}),o.dispose(),h.dispose(),d.dispose(),p.dispose(),{worldCoords:y,screenCoords:x,debugExtra:r}}_computeMatching(t,e,n,i){const s=i.shape[0],a=i.shape[1],o=t.shape[0];if(!this.kernelCaches.computeMatching){const t={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[o,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${s} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},e={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[o,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[o],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[t,e,n]}return r.tidy(()=>{const r=this.kernelCaches.computeMatching,s=this._compileAndRun(r[0],[t,e,n,i]),a=s.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[t,n,a]),simT:this._compileAndRun(r[2],[s,a])}})}_computeProjection(t,e,n){const i=this.trackingKeyframeList[n].width,s=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,o=i+"-"+s+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[o]){const t={variableNames:["M","pixel"],outputShape:[s,i],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[o]=t}return r.tidy(()=>{const n=this.kernelCaches.computeProjection[o];return this._compileAndRun(n,[t,e])})}_buildAdjustedModelViewTransform(t){return r.tidy(()=>{let e=[];for(let n=0;n<t.length;n++){e.push([]);for(let r=0;r<t[n].length;r++)e[n].push(t[n][r]/1e3)}return r.tensor(e,[3,4])})}_prebuild(t,e){return r.tidy(()=>{const n=t.scale,i=[];for(let r=0;r<e;r++)r<t.points.length?i.push([t.points[r].x/n,t.points[r].y/n]):i.push([-1,-1]);const s=r.tensor(t.data,[t.width*t.height]),a=r.tensor([t.width,t.height,t.scale],[3]);return{featurePoints:r.tensor(i,[i.length,2],"float32"),imagePixels:s,imageProperties:a}})}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}}},9140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:n,height:r}=t,i=Math.floor(n/2),s=Math.floor(r/2),a=new Float32Array(i*s),o=[0,1,n,n+1];for(let l=0;l<s;l++)for(let t=0;t<i;t++){let r=2*l*n+2*t,s=0;for(let t=0;t<o.length;t++)s+=e[r+o[t]];s*=.25,a[l*i+t]=s}return{data:a,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:n})=>{const{width:r,height:i,data:s}=t,a=2*t.width+(e?1:0),o=2*t.height+(n?1:0),l=new Float32Array(a*o);for(let u=0;u<a;u++){const t=.5*u-.25;let e=Math.floor(t),n=Math.ceil(t);e<0&&(e=0),n>=r&&(n=r-1);for(let c=0;c<o;c++){const o=.5*c-.25;let h=Math.floor(o),d=Math.ceil(o);h<0&&(h=0),d>=i&&(d=i-1);const p=(n-t)*(d-o)*s[h*r+e]+(n-t)*(o-h)*s[d*r+e]+(t-e)*(d-o)*s[h*r+n]+(t-e)*(o-h)*s[d*r+n];l[c*a+u]=p}}return{data:l,width:a,height:o}},resize:({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),i=new Uint8Array(n*r);for(let s=0;s<n;s++){let a=Math.round(1*s/e),o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let c=0,h=0;for(let e=a;e<=o;e++)for(let n=r;n<=u;n++)c+=1*t.data[n*t.width+e],h+=1;i[l*n+s]=Math.floor(c/h)}}return{data:i,width:n,height:r}}}},6048:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let r=0;r<n;r++){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;t%=e.length;let n=e[r];e[r]=e[t],e[t]=n}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}},344:t=>{const e=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},n=(t,e,n)=>t*e+(1-t)*n;t.exports={OneEuroFilter:class{constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,r){if(!this.initialized)return this.initialized=!0,this.xPrev=r,this.dxPrev=r.map(()=>0),this.tPrev=t,r;const{xPrev:i,tPrev:s,dxPrev:a}=this,o=t-s,l=e(o,this.dCutOff),u=[],c=[],h=[];for(let d=0;d<r.length;d++){u[d]=(r[d]-i[d])/o,c[d]=n(l,u[d],a[d]);const t=this.minCutOff+this.beta*Math.abs(c[d]),s=e(o,t);h[d]=n(s,r[d],i[d])}return this.xPrev=h,this.dxPrev=c,this.tPrev=t,h}}}},2749:(t,e,n)=>{n(4412);const r=n(9894).Z,i=n(7676).Z,s=n(2810).Z;t.exports={UI:class{constructor({uiLoading:t,uiScanning:e,uiError:n}){"yes"===t?this.loadingModal=this._loadHTML(r):"no"!==t&&(this.loadingModal=document.querySelector(t)),"yes"===n?this.compatibilityModal=this._loadHTML(i):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===e?this.scanningMask=this._loadHTML(s):"no"!==e&&(this.scanningMask=document.querySelector(e)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{}},r={};function i(t){if(r[t])return r[t].exports;var e=r[t]={id:t,loaded:!1,exports:{}};return n[t].call(e.exports,e,e.exports,i),e.loaded=!0,e.exports}i.amdD=function(){throw new Error("define cannot be used indirect")},i.amdO={},i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),i.p="",(()=>{const t=i(2212),e=i(4563),{CSS3DRenderer:n}=i(1564),{Controller:r}=i(7957),{UI:s}=i(2749),a=new t.Matrix4;a.compose(new t.Vector3,new t.Quaternion,new t.Vector3(.001,.001,.001)),window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=class{constructor({container:e,imageTargetSrc:r,maxTrack:i,uiLoading:a="yes",uiScanning:o="yes",uiError:l="yes",filterMinCF:u=null,filterBeta:c=null,warmupTolerance:h=null,missTolerance:d=null}){this.container=e,this.imageTargetSrc=r,this.maxTrack=i,this.filterMinCF=u,this.filterBeta=c,this.warmupTolerance=h,this.missTolerance=d,this.ui=new s({uiLoading:a,uiScanning:o,uiError:l}),this.scene=new t.Scene,this.cssScene=new t.Scene,this.renderer=new t.WebGLRenderer({antialias:!0,alpha:!0}),this.cssRenderer=new n({antialias:!0}),this.renderer.outputEncoding=t.sRGBEncoding,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new t.PerspectiveCamera,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach((function(t){t.stop()})),this.video.remove()}addAnchor(e){const n=new t.Group;n.visible=!1,n.matrixAutoUpdate=!1;const r={group:n,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(r),this.scene.add(n),r}addCSSAnchor(e){const n=new t.Group;n.visible=!1,n.matrixAutoUpdate=!1;const r={group:n,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(r),this.cssScene.add(n),r}_startVideo(){return new Promise((t,e)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void e();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(e=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),t()}),this.video.srcObject=e}).catch(t=>{console.log("getUserMedia error",t),e()})})}_startAR(){return new Promise(async(e,n)=>{const i=this.video;this.container,this.controller=new r({inputWidth:i.videoWidth,inputHeight:i.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:e=>{if("updateMatrix"===e.type){const{targetIndex:n,worldMatrix:r}=e;for(let e=0;e<this.anchors.length;e++)if(this.anchors[e].targetIndex===n){if(this.anchors[e].css?this.anchors[e].group.children.forEach(t=>{t.element.style.visibility=null===r?"hidden":"visible"}):this.anchors[e].group.visible=null!==r,null!==r){let i=new t.Matrix4;i.elements=[...r],i.multiply(this.postMatrixs[n]),this.anchors[e].css&&i.multiply(a),this.anchors[e].group.matrix=i}this.anchors[e].visible&&null===r&&(this.anchors[e].visible=!1,this.anchors[e].onTargetLost&&this.anchors[e].onTargetLost()),this.anchors[e].visible||null===r||(this.anchors[e].visible=!0,this.anchors[e].onTargetFound&&this.anchors[e].onTargetFound()),null!==r&&this.ui.hideScanning()}}}}),this.resize();const{dimensions:s}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let r=0;r<s.length;r++){const e=new t.Vector3,n=new t.Quaternion,i=new t.Vector3,[a,o]=s[r];e.x=a/2,e.y=a/2+(o-a)/2,i.x=a,i.y=a,i.z=a;const l=new t.Matrix4;l.compose(e,n,i),this.postMatrixs.push(l)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()})}resize(){const{renderer:t,cssRenderer:e,camera:n,container:r,video:i}=this;if(!i)return;let s,a;const o=i.videoWidth/i.videoHeight;o>r.clientWidth/r.clientHeight?(a=r.clientHeight,s=a*o):(s=r.clientWidth,a=s/o);const l=this.controller.getProjectionMatrix(),u=2*Math.atan(1/l[5]/a*r.clientHeight)*180/Math.PI,c=l[14]/(l[10]-1),h=l[14]/(l[10]+1);l[5],l[0],n.fov=u,n.near=c,n.far=h,n.aspect=r.clientWidth/r.clientHeight,n.updateProjectionMatrix(),i.style.top=-(a-r.clientHeight)/2+"px",i.style.left=-(s-r.clientWidth)/2+"px",i.style.width=s+"px",i.style.height=a+"px";const d=t.domElement,p=e.domElement;d.style.position="absolute",d.style.left=0,d.style.top=0,d.style.width=r.clientWidth+"px",d.style.height=r.clientHeight+"px",p.style.position="absolute",p.style.left=0,p.style.top=0,p.style.width=r.clientWidth+"px",p.style.height=r.clientHeight+"px",t.setSize(r.clientWidth,r.clientHeight),e.setSize(r.clientWidth,r.clientHeight)}},window.MINDAR.IMAGE.THREE=t,window.MINDAR.IMAGE.tf=e})()})()}).call(this,n("4362"),n("b639").Buffer)},"94ca":function(t,e,n){var r=n("d039"),i=n("1626"),s=/#|\.prototype\./,a=function(t,e){var n=l[o(t)];return n==c||n!=u&&(i(e)?r(e):!!e)},o=a.normalize=function(t){return String(t).replace(s,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";t.exports=a},"96cf":function(t,e,n){var r=function(t){"use strict";var e,n=Object.prototype,r=n.hasOwnProperty,i="function"===typeof Symbol?Symbol:{},s=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(N){l=function(t,e,n){return t[e]=n}}function u(t,e,n,r){var i=e&&e.prototype instanceof g?e:g,s=Object.create(i.prototype),a=new I(r||[]);return s._invoke=T(t,n,a),s}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(N){return{type:"throw",arg:N}}}t.wrap=u;var h="suspendedStart",d="suspendedYield",p="executing",f="completed",m={};function g(){}function y(){}function x(){}var v={};l(v,s,(function(){return this}));var b=Object.getPrototypeOf,w=b&&b(b(k([])));w&&w!==n&&r.call(w,s)&&(v=w);var _=x.prototype=g.prototype=Object.create(v);function S(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function M(t,e){function n(i,s,a,o){var l=c(t[i],t,s);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"===typeof h&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,a,o)}),(function(t){n("throw",t,a,o)})):e.resolve(h).then((function(t){u.value=t,a(u)}),(function(t){return n("throw",t,a,o)}))}o(l.arg)}var i;function s(t,r){function s(){return new e((function(e,i){n(t,r,e,i)}))}return i=i?i.then(s,s):s()}this._invoke=s}function T(t,e,n){var r=h;return function(i,s){if(r===p)throw new Error("Generator is already running");if(r===f){if("throw"===i)throw s;return R()}n.method=i,n.arg=s;while(1){var a=n.delegate;if(a){var o=E(a,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var l=c(t,e,n);if("normal"===l.type){if(r=n.done?f:d,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=f,n.method="throw",n.arg=l.arg)}}}function E(t,n){var r=t.iterator[n.method];if(r===e){if(n.delegate=null,"throw"===n.method){if(t.iterator["return"]&&(n.method="return",n.arg=e,E(t,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var i=c(r,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,m;var s=i.arg;return s?s.done?(n[t.resultName]=s.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function A(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function C(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function I(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function k(t){if(t){var n=t[s];if(n)return n.call(t);if("function"===typeof t.next)return t;if(!isNaN(t.length)){var i=-1,a=function n(){while(++i<t.length)if(r.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}return{next:R}}function R(){return{value:e,done:!0}}return y.prototype=x,l(_,"constructor",x),l(x,"constructor",y),y.displayName=l(x,o,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"===typeof t&&t.constructor;return!!e&&(e===y||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,x):(t.__proto__=x,l(t,o,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},S(M.prototype),l(M.prototype,a,(function(){return this})),t.AsyncIterator=M,t.async=function(e,n,r,i,s){void 0===s&&(s=Promise);var a=new M(u(e,n,r,i),s);return t.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},S(_),l(_,o,"Generator"),l(_,s,(function(){return this})),l(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){while(e.length){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=k,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(C),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0],e=t.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(r,i){return o.type="throw",o.arg=t,n.next=r,i&&(n.method="next",n.arg=e),!!i}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],o=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),u=r.call(a,"finallyLoc");if(l&&u){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var s=i;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=e&&e<=s.finallyLoc&&(s=null);var a=s?s.completion:{};return a.type=t,a.arg=e,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),C(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var i=r.arg;C(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:k(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}(t.exports);try{regeneratorRuntime=r}catch(i){"object"===typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},"9a1f":function(t,e,n){var r=n("da84"),i=n("c65b"),s=n("59ed"),a=n("825a"),o=n("0d51"),l=n("35a1"),u=r.TypeError;t.exports=function(t,e){var n=arguments.length<2?l(t):e;if(s(n))return a(i(n,t));throw u(o(t)+" is not iterable")}},"9bf2":function(t,e,n){var r=n("da84"),i=n("83ab"),s=n("0cfb"),a=n("aed9"),o=n("825a"),l=n("a04b"),u=r.TypeError,c=Object.defineProperty,h=Object.getOwnPropertyDescriptor,d="enumerable",p="configurable",f="writable";e.f=i?a?function(t,e,n){if(o(t),e=l(e),o(n),"function"===typeof t&&"prototype"===e&&"value"in n&&f in n&&!n[f]){var r=h(t,e);r&&r[f]&&(t[e]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:d in n?n[d]:r[d],writable:!1})}return c(t,e,n)}:c:function(t,e,n){if(o(t),e=l(e),o(n),s)try{return c(t,e,n)}catch(r){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},"9ed3":function(t,e,n){"use strict";var r=n("ae93").IteratorPrototype,i=n("7c73"),s=n("5c6c"),a=n("d44e"),o=n("3f8c"),l=function(){return this};t.exports=function(t,e,n,u){var c=e+" Iterator";return t.prototype=i(r,{next:s(+!u,n)}),a(t,c,!1,!0),o[c]=l,t}},a04b:function(t,e,n){var r=n("c04e"),i=n("d9b5");t.exports=function(t){var e=r(t,"string");return i(e)?e:e+""}},a4b4:function(t,e,n){var r=n("342f");t.exports=/web0s(?!.*chrome)/i.test(r)},a640:function(t,e,n){"use strict";var r=n("d039");t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){return 1},1)}))}},a79d:function(t,e,n){"use strict";var r=n("23e7"),i=n("c430"),s=n("fea9"),a=n("d039"),o=n("d066"),l=n("1626"),u=n("4840"),c=n("cdf9"),h=n("6eeb"),d=!!s&&a((function(){s.prototype["finally"].call({then:function(){}},(function(){}))}));if(r({target:"Promise",proto:!0,real:!0,forced:d},{finally:function(t){var e=u(this,o("Promise")),n=l(t);return this.then(n?function(n){return c(e,t()).then((function(){return n}))}:t,n?function(n){return c(e,t()).then((function(){throw n}))}:t)}}),!i&&l(s)){var p=o("Promise").prototype["finally"];s.prototype["finally"]!==p&&h(s.prototype,"finally",p,{unsafe:!0})}},ad6d:function(t,e,n){"use strict";var r=n("825a");t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},ae93:function(t,e,n){"use strict";var r,i,s,a=n("d039"),o=n("1626"),l=n("7c73"),u=n("e163"),c=n("6eeb"),h=n("b622"),d=n("c430"),p=h("iterator"),f=!1;[].keys&&(s=[].keys(),"next"in s?(i=u(u(s)),i!==Object.prototype&&(r=i)):f=!0);var m=void 0==r||a((function(){var t={};return r[p].call(t)!==t}));m?r={}:d&&(r=l(r)),o(r[p])||c(r,p,(function(){return this})),t.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:f}},aed9:function(t,e,n){var r=n("83ab"),i=n("d039");t.exports=r&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},b041:function(t,e,n){"use strict";var r=n("00ee"),i=n("f5df");t.exports=r?{}.toString:function(){return"[object "+i(this)+"]"}},b0c0:function(t,e,n){var r=n("83ab"),i=n("5e77").EXISTS,s=n("e330"),a=n("9bf2").f,o=Function.prototype,l=s(o.toString),u=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,c=s(u.exec),h="name";r&&!i&&a(o,h,{configurable:!0,get:function(){try{return c(u,l(this))[1]}catch(t){return""}}})},b575:function(t,e,n){var r,i,s,a,o,l,u,c,h=n("da84"),d=n("0366"),p=n("06cf").f,f=n("2cf4").set,m=n("1cdc"),g=n("d4c3"),y=n("a4b4"),x=n("605d"),v=h.MutationObserver||h.WebKitMutationObserver,b=h.document,w=h.process,_=h.Promise,S=p(h,"queueMicrotask"),M=S&&S.value;M||(r=function(){var t,e;x&&(t=w.domain)&&t.exit();while(i){e=i.fn,i=i.next;try{e()}catch(n){throw i?a():s=void 0,n}}s=void 0,t&&t.enter()},m||x||y||!v||!b?!g&&_&&_.resolve?(u=_.resolve(void 0),u.constructor=_,c=d(u.then,u),a=function(){c(r)}):x?a=function(){w.nextTick(r)}:(f=d(f,h),a=function(){f(r)}):(o=!0,l=b.createTextNode(""),new v(r).observe(l,{characterData:!0}),a=function(){l.data=o=!o})),t.exports=M||function(t){var e={fn:t,next:void 0};s&&(s.next=e),i||(i=e,a()),s=e}},b622:function(t,e,n){var r=n("da84"),i=n("5692"),s=n("1a2d"),a=n("90e3"),o=n("4930"),l=n("fdbf"),u=i("wks"),c=r.Symbol,h=c&&c["for"],d=l?c:c&&c.withoutSetter||a;t.exports=function(t){if(!s(u,t)||!o&&"string"!=typeof u[t]){var e="Symbol."+t;o&&s(c,t)?u[t]=c[t]:u[t]=l&&h?h(e):d(e)}return u[t]}},b639:function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),i=n("9152"),s=n("e3db");function a(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function l(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=u.prototype):(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!u.TYPED_ARRAY_SUPPORT&&!(this instanceof u))return new u(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return p(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?g(t,e,n,r):"string"===typeof e?f(t,e,n):y(t,e)}function h(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e,n,r){return h(e),e<=0?l(t,e):void 0!==n?"string"===typeof r?l(t,e).fill(n,r):l(t,e).fill(n):l(t,e)}function p(t,e){if(h(e),t=l(t,e<0?0:0|x(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function f(t,e,n){if("string"===typeof n&&""!==n||(n="utf8"),!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|b(e,n);t=l(t,r);var i=t.write(e,n);return i!==r&&(t=t.slice(0,i)),t}function m(t,e){var n=e.length<0?0:0|x(e.length);t=l(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function g(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),u.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=u.prototype):t=m(t,e),t}function y(t,e){if(u.isBuffer(e)){var n=0|x(e.length);return t=l(t,n),0===t.length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||et(e.length)?l(t,0):m(t,e);if("Buffer"===e.type&&s(e.data))return m(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function x(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function v(t){return+t!=t&&(t=0),u.alloc(+t)}function b(t,e){if(u.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return K(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Q(t).length;default:if(r)return K(t).length;e=(""+e).toLowerCase(),r=!0}}function w(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,e>>>=0,n<=e)return"";t||(t="utf8");while(1)switch(t){case"hex":return F(this,e,n);case"utf8":case"utf-8":return N(this,e,n);case"ascii":return P(this,e,n);case"latin1":case"binary":return O(this,e,n);case"base64":return R(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function _(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function S(t,e,n,r,i){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(i)return-1;n=t.length-1}else if(n<0){if(!i)return-1;n=0}if("string"===typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:M(t,e,n,r,i);if("number"===typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):M(t,[e],n,r,i);throw new TypeError("val must be string, number or Buffer")}function M(t,e,n,r,i){var s,a=1,o=t.length,l=e.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;a=2,o/=2,l/=2,n/=2}function u(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}if(i){var c=-1;for(s=n;s<o;s++)if(u(t,s)===u(e,-1===c?0:s-c)){if(-1===c&&(c=s),s-c+1===l)return c*a}else-1!==c&&(s-=s-c),c=-1}else for(n+l>o&&(n=o-l),s=n;s>=0;s--){for(var h=!0,d=0;d<l;d++)if(u(t,s+d)!==u(e,d)){h=!1;break}if(h)return s}return-1}function T(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r),r>i&&(r=i)):r=i;var s=e.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var a=0;a<r;++a){var o=parseInt(e.substr(2*a,2),16);if(isNaN(o))return a;t[n+a]=o}return a}function E(t,e,n,r){return tt(K(e,t.length-n),t,n,r)}function A(t,e,n,r){return tt(J(e),t,n,r)}function C(t,e,n,r){return A(t,e,n,r)}function I(t,e,n,r){return tt(Q(e),t,n,r)}function k(t,e,n,r){return tt(Z(e,t.length-n),t,n,r)}function R(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function N(t,e,n){n=Math.min(t.length,n);var r=[],i=e;while(i<n){var s,a,o,l,u=t[i],c=null,h=u>239?4:u>223?3:u>191?2:1;if(i+h<=n)switch(h){case 1:u<128&&(c=u);break;case 2:s=t[i+1],128===(192&s)&&(l=(31&u)<<6|63&s,l>127&&(c=l));break;case 3:s=t[i+1],a=t[i+2],128===(192&s)&&128===(192&a)&&(l=(15&u)<<12|(63&s)<<6|63&a,l>2047&&(l<55296||l>57343)&&(c=l));break;case 4:s=t[i+1],a=t[i+2],o=t[i+3],128===(192&s)&&128===(192&a)&&128===(192&o)&&(l=(15&u)<<18|(63&s)<<12|(63&a)<<6|63&o,l>65535&&l<1114112&&(c=l))}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),i+=h}return D(r)}e.Buffer=u,e.SlowBuffer=v,e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:a(),e.kMaxLength=o(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return d(null,t,e,n)},u.allocUnsafe=function(t){return p(null,t)},u.allocUnsafeSlow=function(t){return p(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,i=0,s=Math.min(n,r);i<s;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),i=0;for(n=0;n<t.length;++n){var a=t[n];if(!u.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,i),i+=a.length}return r},u.byteLength=b,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)_(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)_(this,e,e+3),_(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)_(this,e,e+7),_(this,e+1,e+6),_(this,e+2,e+5),_(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?N(this,0,t):w.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,i){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),e<0||n>t.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&e>=n)return 0;if(r>=i)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,i>>>=0,this===t)return 0;for(var s=i-r,a=n-e,o=Math.min(s,a),l=this.slice(r,i),c=t.slice(e,n),h=0;h<o;++h)if(l[h]!==c[h]){s=l[h],a=c[h];break}return s<a?-1:a<s?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return S(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return S(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return T(this,t,e,n);case"utf8":case"utf-8":return E(this,t,e,n);case"ascii":return A(this,t,e,n);case"latin1":case"binary":return C(this,t,e,n);case"base64":return I(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var L=4096;function D(t){var e=t.length;if(e<=L)return String.fromCharCode.apply(String,t);var n="",r=0;while(r<e)n+=String.fromCharCode.apply(String,t.slice(r,r+=L));return n}function P(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function O(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function F(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i="",s=e;s<n;++s)i+=Y(t[s]);return i}function z(t,e,n){for(var r=t.slice(e,n),i="",s=0;s<r.length;s+=2)i+=String.fromCharCode(r[s]+256*r[s+1]);return i}function B(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function U(t,e,n,r,i,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<s)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function $(t,e,n,r){e<0&&(e=65535+e+1);for(var i=0,s=Math.min(t.length-n,2);i<s;++i)t[n+i]=(e&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function q(t,e,n,r){e<0&&(e=4294967295+e+1);for(var i=0,s=Math.min(t.length-n,4);i<s;++i)t[n+i]=e>>>8*(r?i:3-i)&255}function V(t,e,n,r,i,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function H(t,e,n,r,s){return s||V(t,e,n,4,34028234663852886e22,-34028234663852886e22),i.write(t,e,n,r,23,4),n+4}function W(t,e,n,r,s){return s||V(t,e,n,8,17976931348623157e292,-17976931348623157e292),i.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if(t=~~t,e=void 0===e?r:~~e,t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)n=this.subarray(t,e),n.__proto__=u.prototype;else{var i=e-t;n=new u(i,void 0);for(var s=0;s<i;++s)n[s]=this[s+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||B(t,e,this.length);var r=this[t],i=1,s=0;while(++s<e&&(i*=256))r+=this[t+s]*i;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||B(t,e,this.length);var r=this[t+--e],i=1;while(e>0&&(i*=256))r+=this[t+--e]*i;return r},u.prototype.readUInt8=function(t,e){return e||B(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||B(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||B(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||B(t,e,this.length);var r=this[t],i=1,s=0;while(++s<e&&(i*=256))r+=this[t+s]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||B(t,e,this.length);var r=e,i=1,s=this[t+--r];while(r>0&&(i*=256))s+=this[t+--r]*i;return i*=128,s>=i&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||B(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||B(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||B(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||B(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||B(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||B(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var i=Math.pow(2,8*n)-1;U(this,t,e,n,i,0)}var s=1,a=0;this[e]=255&t;while(++a<n&&(s*=256))this[e+a]=t/s&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var i=Math.pow(2,8*n)-1;U(this,t,e,n,i,0)}var s=n-1,a=1;this[e+s]=255&t;while(--s>=0&&(a*=256))this[e+s]=t/a&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):$(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):$(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):q(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):q(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);U(this,t,e,n,i-1,-i)}var s=0,a=1,o=0;this[e]=255&t;while(++s<n&&(a*=256))t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/a>>0)-o&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);U(this,t,e,n,i-1,-i)}var s=n-1,a=1,o=0;this[e+s]=255&t;while(--s>=0&&(a*=256))t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/a>>0)-o&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):$(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):$(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):q(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||U(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):q(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return H(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return H(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return W(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return W(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,s=r-n;if(this===t&&n<e&&e<r)for(i=s-1;i>=0;--i)t[i+e]=this[i+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<s;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},u.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(s=e;s<n;++s)this[s]=t;else{var a=u.isBuffer(t)?t:K(new u(t,r).toString()),o=a.length;for(s=0;s<n-e;++s)this[s+e]=a[s%o]}return this};var G=/[^+\/0-9A-Za-z-_]/g;function j(t){if(t=X(t).replace(G,""),t.length<2)return"";while(t.length%4!==0)t+="=";return t}function X(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function Y(t){return t<16?"0"+t.toString(16):t.toString(16)}function K(t,e){var n;e=e||1/0;for(var r=t.length,i=null,s=[],a=0;a<r;++a){if(n=t.charCodeAt(a),n>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(a+1===r){(e-=3)>-1&&s.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&s.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function J(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function Z(t,e){for(var n,r,i,s=[],a=0;a<t.length;++a){if((e-=2)<0)break;n=t.charCodeAt(a),r=n>>8,i=n%256,s.push(i),s.push(r)}return s}function Q(t){return r.toByteArray(j(t))}function tt(t,e,n,r){for(var i=0;i<r;++i){if(i+n>=e.length||i>=t.length)break;e[i+n]=t[i]}return i}function et(t){return t!==t}}).call(this,n("c8ba"))},b727:function(t,e,n){var r=n("0366"),i=n("e330"),s=n("44ad"),a=n("7b0b"),o=n("07fa"),l=n("65f0"),u=i([].push),c=function(t){var e=1==t,n=2==t,i=3==t,c=4==t,h=6==t,d=7==t,p=5==t||h;return function(f,m,g,y){for(var x,v,b=a(f),w=s(b),_=r(m,g),S=o(w),M=0,T=y||l,E=e?T(f,S):n||d?T(f,0):void 0;S>M;M++)if((p||M in w)&&(x=w[M],v=_(x,M,b),t))if(e)E[M]=v;else if(v)switch(t){case 3:return!0;case 5:return x;case 6:return M;case 2:u(E,x)}else switch(t){case 4:return!1;case 7:u(E,x)}return h?-1:i||c?c:E}};t.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterReject:c(7)}},c04e:function(t,e,n){var r=n("da84"),i=n("c65b"),s=n("861d"),a=n("d9b5"),o=n("dc4a"),l=n("485a"),u=n("b622"),c=r.TypeError,h=u("toPrimitive");t.exports=function(t,e){if(!s(t)||a(t))return t;var n,r=o(t,h);if(r){if(void 0===e&&(e="default"),n=i(r,t,e),!s(n)||a(n))return n;throw c("Can't convert object to primitive value")}return void 0===e&&(e="number"),l(t,e)}},c430:function(t,e){t.exports=!1},c65b:function(t,e,n){var r=n("40d5"),i=Function.prototype.call;t.exports=r?i.bind(i):function(){return i.apply(i,arguments)}},c6b6:function(t,e,n){var r=n("e330"),i=r({}.toString),s=r("".slice);t.exports=function(t){return s(i(t),8,-1)}},c6cd:function(t,e,n){var r=n("da84"),i=n("ce4e"),s="__core-js_shared__",a=r[s]||i(s,{});t.exports=a},c8ba:function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}t.exports=n},ca84:function(t,e,n){var r=n("e330"),i=n("1a2d"),s=n("fc6a"),a=n("4d64").indexOf,o=n("d012"),l=r([].push);t.exports=function(t,e){var n,r=s(t),u=0,c=[];for(n in r)!i(o,n)&&i(r,n)&&l(c,n);while(e.length>u)i(r,n=e[u++])&&(~a(c,n)||l(c,n));return c}},cc12:function(t,e,n){var r=n("da84"),i=n("861d"),s=r.document,a=i(s)&&i(s.createElement);t.exports=function(t){return a?s.createElement(t):{}}},cca6:function(t,e,n){var r=n("23e7"),i=n("60da");r({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},cdf9:function(t,e,n){var r=n("825a"),i=n("861d"),s=n("f069");t.exports=function(t,e){if(r(t),i(e)&&e.constructor===t)return e;var n=s.f(t),a=n.resolve;return a(e),n.promise}},ce4e:function(t,e,n){var r=n("da84"),i=Object.defineProperty;t.exports=function(t,e){try{i(r,t,{value:e,configurable:!0,writable:!0})}catch(n){r[t]=e}return e}},d012:function(t,e){t.exports={}},d039:function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},d066:function(t,e,n){var r=n("da84"),i=n("1626"),s=function(t){return i(t)?t:void 0};t.exports=function(t,e){return arguments.length<2?s(r[t]):r[t]&&r[t][e]}},d1e7:function(t,e,n){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,s=i&&!r.call({1:2},1);e.f=s?function(t){var e=i(this,t);return!!e&&e.enumerable}:r},d2bb:function(t,e,n){var r=n("e330"),i=n("825a"),s=n("3bbe");t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{t=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),t(n,[]),e=n instanceof Array}catch(a){}return function(n,r){return i(n),s(r),e?t(n,r):n.__proto__=r,n}}():void 0)},d3b7:function(t,e,n){var r=n("00ee"),i=n("6eeb"),s=n("b041");r||i(Object.prototype,"toString",s,{unsafe:!0})},d44e:function(t,e,n){var r=n("9bf2").f,i=n("1a2d"),s=n("b622"),a=s("toStringTag");t.exports=function(t,e,n){t&&!n&&(t=t.prototype),t&&!i(t,a)&&r(t,a,{configurable:!0,value:e})}},d4c3:function(t,e,n){var r=n("342f"),i=n("da84");t.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==i.Pebble},d6d6:function(t,e,n){var r=n("da84"),i=r.TypeError;t.exports=function(t,e){if(t<e)throw i("Not enough arguments");return t}},d81d:function(t,e,n){"use strict";var r=n("23e7"),i=n("b727").map,s=n("1dde"),a=s("map");r({target:"Array",proto:!0,forced:!a},{map:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},d9b5:function(t,e,n){var r=n("da84"),i=n("d066"),s=n("1626"),a=n("3a9b"),o=n("fdbf"),l=r.Object;t.exports=o?function(t){return"symbol"==typeof t}:function(t){var e=i("Symbol");return s(e)&&a(e.prototype,l(t))}},da84:function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||function(){return this}()||Function("return this")()}).call(this,n("c8ba"))},dc4a:function(t,e,n){var r=n("59ed");t.exports=function(t,e){var n=t[e];return null==n?void 0:r(n)}},df75:function(t,e,n){var r=n("ca84"),i=n("7839");t.exports=Object.keys||function(t){return r(t,i)}},df7c:function(t,e,n){(function(t){function n(t,e){for(var n=0,r=t.length-1;r>=0;r--){var i=t[r];"."===i?t.splice(r,1):".."===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function r(t){"string"!==typeof t&&(t+="");var e,n=0,r=-1,i=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!i){n=e+1;break}}else-1===r&&(i=!1,r=e+1);return-1===r?"":t.slice(n,r)}function i(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}e.resolve=function(){for(var e="",r=!1,s=arguments.length-1;s>=-1&&!r;s--){var a=s>=0?arguments[s]:t.cwd();if("string"!==typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(e=a+"/"+e,r="/"===a.charAt(0))}return e=n(i(e.split("/"),(function(t){return!!t})),!r).join("/"),(r?"/":"")+e||"."},e.normalize=function(t){var r=e.isAbsolute(t),a="/"===s(t,-1);return t=n(i(t.split("/"),(function(t){return!!t})),!r).join("/"),t||r||(t="."),t&&a&&(t+="/"),(r?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(i(t,(function(t,e){if("string"!==typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},e.relative=function(t,n){function r(t){for(var e=0;e<t.length;e++)if(""!==t[e])break;for(var n=t.length-1;n>=0;n--)if(""!==t[n])break;return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var i=r(t.split("/")),s=r(n.split("/")),a=Math.min(i.length,s.length),o=a,l=0;l<a;l++)if(i[l]!==s[l]){o=l;break}var u=[];for(l=o;l<i.length;l++)u.push("..");return u=u.concat(s.slice(o)),u.join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){if("string"!==typeof t&&(t+=""),0===t.length)return".";for(var e=t.charCodeAt(0),n=47===e,r=-1,i=!0,s=t.length-1;s>=1;--s)if(e=t.charCodeAt(s),47===e){if(!i){r=s;break}}else i=!1;return-1===r?n?"/":".":n&&1===r?"/":t.slice(0,r)},e.basename=function(t,e){var n=r(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){"string"!==typeof t&&(t+="");for(var e=-1,n=0,r=-1,i=!0,s=0,a=t.length-1;a>=0;--a){var o=t.charCodeAt(a);if(47!==o)-1===r&&(i=!1,r=a+1),46===o?-1===e?e=a:1!==s&&(s=1):-1!==e&&(s=-1);else if(!i){n=a+1;break}}return-1===e||-1===r||0===s||1===s&&e===r-1&&e===n+1?"":t.slice(e,r)};var s="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,n("4362"))},e163:function(t,e,n){var r=n("da84"),i=n("1a2d"),s=n("1626"),a=n("7b0b"),o=n("f772"),l=n("e177"),u=o("IE_PROTO"),c=r.Object,h=c.prototype;t.exports=l?c.getPrototypeOf:function(t){var e=a(t);if(i(e,u))return e[u];var n=e.constructor;return s(n)&&e instanceof n?n.prototype:e instanceof c?h:null}},e177:function(t,e,n){var r=n("d039");t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},e260:function(t,e,n){"use strict";var r=n("fc6a"),i=n("44d2"),s=n("3f8c"),a=n("69f3"),o=n("9bf2").f,l=n("7dd0"),u=n("c430"),c=n("83ab"),h="Array Iterator",d=a.set,p=a.getterFor(h);t.exports=l(Array,"Array",(function(t,e){d(this,{type:h,target:r(t),index:0,kind:e})}),(function(){var t=p(this),e=t.target,n=t.kind,r=t.index++;return!e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");var f=s.Arguments=s.Array;if(i("keys"),i("values"),i("entries"),!u&&c&&"values"!==f.name)try{o(f,"name",{value:"values"})}catch(m){}},e2cc:function(t,e,n){var r=n("6eeb");t.exports=function(t,e,n){for(var i in e)r(t,i,e[i],n);return t}},e330:function(t,e,n){var r=n("40d5"),i=Function.prototype,s=i.bind,a=i.call,o=r&&s.bind(a,a);t.exports=r?function(t){return t&&o(t)}:function(t){return t&&function(){return a.apply(t,arguments)}}},e3db:function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},e667:function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(e){return{error:!0,value:e}}}},e6cf:function(t,e,n){"use strict";var r,i,s,a,o=n("23e7"),l=n("c430"),u=n("da84"),c=n("d066"),h=n("c65b"),d=n("fea9"),p=n("6eeb"),f=n("e2cc"),m=n("d2bb"),g=n("d44e"),y=n("2626"),x=n("59ed"),v=n("1626"),b=n("861d"),w=n("19aa"),_=n("8925"),S=n("2266"),M=n("1c7e"),T=n("4840"),E=n("2cf4").set,A=n("b575"),C=n("cdf9"),I=n("44de"),k=n("f069"),R=n("e667"),N=n("01b4"),L=n("69f3"),D=n("94ca"),P=n("b622"),O=n("6069"),F=n("605d"),z=n("2d00"),B=P("species"),U="Promise",$=L.getterFor(U),q=L.set,V=L.getterFor(U),H=d&&d.prototype,W=d,G=H,j=u.TypeError,X=u.document,Y=u.process,K=k.f,J=K,Z=!!(X&&X.createEvent&&u.dispatchEvent),Q=v(u.PromiseRejectionEvent),tt="unhandledrejection",et="rejectionhandled",nt=0,rt=1,it=2,st=1,at=2,ot=!1,lt=D(U,(function(){var t=_(W),e=t!==String(W);if(!e&&66===z)return!0;if(l&&!G["finally"])return!0;if(z>=51&&/native code/.test(t))return!1;var n=new W((function(t){t(1)})),r=function(t){t((function(){}),(function(){}))},i=n.constructor={};return i[B]=r,ot=n.then((function(){}))instanceof r,!ot||!e&&O&&!Q})),ut=lt||!M((function(t){W.all(t)["catch"]((function(){}))})),ct=function(t){var e;return!(!b(t)||!v(e=t.then))&&e},ht=function(t,e){var n,r,i,s=e.value,a=e.state==rt,o=a?t.ok:t.fail,l=t.resolve,u=t.reject,c=t.domain;try{o?(a||(e.rejection===at&&gt(e),e.rejection=st),!0===o?n=s:(c&&c.enter(),n=o(s),c&&(c.exit(),i=!0)),n===t.promise?u(j("Promise-chain cycle")):(r=ct(n))?h(r,n,l,u):l(n)):u(s)}catch(d){c&&!i&&c.exit(),u(d)}},dt=function(t,e){t.notified||(t.notified=!0,A((function(){var n,r=t.reactions;while(n=r.get())ht(n,t);t.notified=!1,e&&!t.rejection&&ft(t)})))},pt=function(t,e,n){var r,i;Z?(r=X.createEvent("Event"),r.promise=e,r.reason=n,r.initEvent(t,!1,!0),u.dispatchEvent(r)):r={promise:e,reason:n},!Q&&(i=u["on"+t])?i(r):t===tt&&I("Unhandled promise rejection",n)},ft=function(t){h(E,u,(function(){var e,n=t.facade,r=t.value,i=mt(t);if(i&&(e=R((function(){F?Y.emit("unhandledRejection",r,n):pt(tt,n,r)})),t.rejection=F||mt(t)?at:st,e.error))throw e.value}))},mt=function(t){return t.rejection!==st&&!t.parent},gt=function(t){h(E,u,(function(){var e=t.facade;F?Y.emit("rejectionHandled",e):pt(et,e,t.value)}))},yt=function(t,e,n){return function(r){t(e,r,n)}},xt=function(t,e,n){t.done||(t.done=!0,n&&(t=n),t.value=e,t.state=it,dt(t,!0))},vt=function(t,e,n){if(!t.done){t.done=!0,n&&(t=n);try{if(t.facade===e)throw j("Promise can't be resolved itself");var r=ct(e);r?A((function(){var n={done:!1};try{h(r,e,yt(vt,n,t),yt(xt,n,t))}catch(i){xt(n,i,t)}})):(t.value=e,t.state=rt,dt(t,!1))}catch(i){xt({done:!1},i,t)}}};if(lt&&(W=function(t){w(this,G),x(t),h(r,this);var e=$(this);try{t(yt(vt,e),yt(xt,e))}catch(n){xt(e,n)}},G=W.prototype,r=function(t){q(this,{type:U,done:!1,notified:!1,parent:!1,reactions:new N,rejection:!1,state:nt,value:void 0})},r.prototype=f(G,{then:function(t,e){var n=V(this),r=K(T(this,W));return n.parent=!0,r.ok=!v(t)||t,r.fail=v(e)&&e,r.domain=F?Y.domain:void 0,n.state==nt?n.reactions.add(r):A((function(){ht(r,n)})),r.promise},catch:function(t){return this.then(void 0,t)}}),i=function(){var t=new r,e=$(t);this.promise=t,this.resolve=yt(vt,e),this.reject=yt(xt,e)},k.f=K=function(t){return t===W||t===s?new i(t):J(t)},!l&&v(d)&&H!==Object.prototype)){a=H.then,ot||(p(H,"then",(function(t,e){var n=this;return new W((function(t,e){h(a,n,t,e)})).then(t,e)}),{unsafe:!0}),p(H,"catch",G["catch"],{unsafe:!0}));try{delete H.constructor}catch(bt){}m&&m(H,G)}o({global:!0,wrap:!0,forced:lt},{Promise:W}),g(W,U,!1,!0),y(U),s=c(U),o({target:U,stat:!0,forced:lt},{reject:function(t){var e=K(this);return h(e.reject,void 0,t),e.promise}}),o({target:U,stat:!0,forced:l||lt},{resolve:function(t){return C(l&&this===s?W:this,t)}}),o({target:U,stat:!0,forced:ut},{all:function(t){var e=this,n=K(e),r=n.resolve,i=n.reject,s=R((function(){var n=x(e.resolve),s=[],a=0,o=1;S(t,(function(t){var l=a++,u=!1;o++,h(n,e,t).then((function(t){u||(u=!0,s[l]=t,--o||r(s))}),i)})),--o||r(s)}));return s.error&&i(s.value),n.promise},race:function(t){var e=this,n=K(e),r=n.reject,i=R((function(){var i=x(e.resolve);S(t,(function(t){h(i,e,t).then(n.resolve,r)}))}));return i.error&&r(i.value),n.promise}})},e893:function(t,e,n){var r=n("1a2d"),i=n("56ef"),s=n("06cf"),a=n("9bf2");t.exports=function(t,e,n){for(var o=i(e),l=a.f,u=s.f,c=0;c<o.length;c++){var h=o[c];r(t,h)||n&&r(n,h)||l(t,h,u(e,h))}}},e8b5:function(t,e,n){var r=n("c6b6");t.exports=Array.isArray||function(t){return"Array"==r(t)}},e95a:function(t,e,n){var r=n("b622"),i=n("3f8c"),s=r("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||a[s]===t)}},f069:function(t,e,n){"use strict";var r=n("59ed"),i=function(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)};t.exports.f=function(t){return new i(t)}},f36a:function(t,e,n){var r=n("e330");t.exports=r([].slice)},f5df:function(t,e,n){var r=n("da84"),i=n("00ee"),s=n("1626"),a=n("c6b6"),o=n("b622"),l=o("toStringTag"),u=r.Object,c="Arguments"==a(function(){return arguments}()),h=function(t,e){try{return t[e]}catch(n){}};t.exports=i?a:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=h(e=u(t),l))?n:c?a(e):"Object"==(r=a(e))&&s(e.callee)?"Arguments":r}},f772:function(t,e,n){var r=n("5692"),i=n("90e3"),s=r("keys");t.exports=function(t){return s[t]||(s[t]=i(t))}},fc6a:function(t,e,n){var r=n("44ad"),i=n("1d80");t.exports=function(t){return r(i(t))}},fdbc:function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},fdbf:function(t,e,n){var r=n("4930");t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},fea9:function(t,e,n){var r=n("da84");t.exports=r.Promise}}]);
//# sourceMappingURL=chunk-vendors.10fe4b2f.js.map